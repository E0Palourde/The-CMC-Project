if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = bthrow_sprite;
		facing=1-facing;
		image_xscale *= -1;
image_index=0;
		target.x = x - 10 * size * (1-facing*2);
		target.depth = depth-1;
timer = 0;
time = 59;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 50
}

if timer < time {
	switch (timer)
	{
	case 4: image_index = 1;
		target.x = x - 4 * size * (1-facing*2);
		sound_play(jabswing_sound);
		sound_play(aerial_voice3); break;
	case 8: 
		image_index = 2;
		target.x = x + 2 * size * (1-facing*2);
		target.depth = depth+1;		break;
	case 13: image_index = 3;
		target.x = x - 4 * size * (1-facing*2);
		sound_play(jabswing_sound); break;
	case 18: image_index = 4;
		target.x = x - 8 * size * (1-facing*2);  break;
	case 23: image_index = 5;
		target.x = x + 15 * size * (1-facing*2); break;
	case 26: image_index = 6; break; //attack frame
	case 29: image_index = 7; break;
	case 32: image_index = 8; break;
	case 35: image_index = 9; break;
	case 38: image_index = 10; break;
	case 41: image_index = 11; break;
	case 44: image_index = 12; break;
	case 47: image_index = 13; break;
	case 50: image_index = 14; break;
	case 53: image_index = 15; break;
	case 56: image_index = 16; break;
	}
	
	if timer = 23 {create_hitbox(0,40+facing*100,8,0,0,-1,-1,-1,.25,.25,15,16,self.id,3,3);
				   hitbox.hit_stun = 25;
				   hitbox.di = 0;
				   hitbox.sdi = 0;
				   hitbox.weight_kb = 1;
				   
				   sound_play(heavyswing_sound);}
				   
	if timer = 32 {
				bshoteffect = create_blur(x+23-facing*46,y-23,self.id);
				bshoteffect.sprite_index = bshooteffect_sprite;
				bshoteffect.image_speed = .5;
				bshoteffect.image_xscale = (.18*size)-facing*(.36*size);
				bshoteffect.image_yscale = .18*size;
				bshoteffect.depth = depth-1;
				bshoteffect.alarm[0] = 300;}
				   
	if timer = 32 || timer = 38 || timer = 44 || timer = 50 
	{
				sound_play(ssmashexplosion_sound);
	
	bprojectile = create_projectile(2,364,4.8,0,12,6,fire3,obj_spark_fire1,.2,.2,23,23,self.id,40,char_custom6);
	bprojectile.sprite_index = bproj_sprite;
	bprojectile.direction = point_direction(x,y,target.x,(target.y+10));
	bprojectile.dir = bprojectile.direction;
	if timer = 50 {
		bprojectile.kbg = 4; bprojectile.damage = 6;
		
	}
	}
    
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    facing = 1-facing
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
