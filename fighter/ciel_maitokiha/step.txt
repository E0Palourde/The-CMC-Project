if (ai = 1) and (state_type != "attack" and state_type != "air_attack" and sprite_index != entry_sprite) and !instance_exists(obj_training){
	
	if distance_to_object(enemy) < 50 and (enemy.state_type = "attack" or enemy.state_type = "air_attack") and shield_hp > 80 and air = 0 and enemy.facing != facing{
	shieldup = 1
	//state_type = "shielding"
	//attack_type = "none"
    }
	
	if shield_hp <= 30 and state_type = "shielding"
	state_type = "stand"
	
	if enemy <= -1{
		if target <= -1
		create_homing_bubble ( 300 ,300, 0 , 0 , self.id , 1 );
		else
		enemy = target
	}
	//char_ai();
	
}
						
if (ai and collision_rectangle(x + 1 * (1 - facing * 2) * size, y - actual_height * 1.05, x + 300 * (1 - facing * 2) * size, y, enemy, false, true) and air = 0) and (!instance_exists(obj_training) or (instance_exists(obj_training) and obj_training.ai_type = 5))
{
if attack_type = "none" and time = -1
	{
		if smash_power  >= global.gs_fs_charge
			{
			if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
				facing=1-facing;
			speed = 0;
			char_final_smash();
			}
	}
}

if ai = 1 and (!instance_exists(obj_training) or (instance_exists(obj_training) and obj_training.ai_type = 5)){
	if state_type = "tumble"
	{
		if held_item = -1 {
		if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x)
			{
			if enemy.y > y -2
			attack_type = choose("dair","fair")
			else if enemy.y < y - 14
			attack_type = choose("uair","upb")
			else
			attack_type = choose("uair","fair","dair")
			}
		else
		attack_type = "bair"
    }
    else
    attack_type = "itemfthrow" 
    exit
	}
}
if (enemy.state_type = "out"){
temp_spawn += 1
 }

 if (instance_exists(bprojectile2)){
if (target.state_type = "air_flinch" || target.state_type = "flinch") && (temp_spawn >= 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 100) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 140)){
				temp_speed = enemy.speed
				temp_grav = enemy.gravity
                killspark = instance_create(enemy.x-180,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				image_speed = 0.5;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
                enemy.state_type = "flinch"
				enemy.timer = 0
				enemy.time = 25
				enemy.speed = temp_speed
				enemy.gravity = temp_grav + 1.2
				}
				}
  }	

 if (instance_exists(downbeffect)){
if (target.state_type = "air_flinch" || target.state_type = "flinch") && (temp_spawn >= 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 50) || (target.weight > .22 && target.weight < .3 && target.percent > 60) || (target.weight > .3 && target.percent > 75)){
				temp_speed = enemy.speed
				temp_grav = enemy.gravity
                killspark = instance_create(enemy.x-180,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
                enemy.state_type = "flinch"
				enemy.timer = 0
				enemy.time = 25
				enemy.speed = temp_speed
				enemy.gravity = temp_grav + 1.5
				}
				}
  }
   if (instance_exists(ssmasheffect) && attack_type != "fthrow"){
if (target.state_type = "air_flinch" || target.state_type = "flinch") && (temp_spawn >= 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 95) || (target.weight > .22 && target.weight < .3 && target.percent > 115) || (target.weight > .3 && target.percent > 135)){
				temp_speed = enemy.speed
				temp_grav = enemy.gravity
                killspark = instance_create(enemy.x-180,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
                enemy.state_type = "flinch"
				enemy.timer = 0
				enemy.time = 25
				enemy.speed = temp_speed
				enemy.gravity = temp_grav + 1.5
				}
				}
  }

if (instance_exists(usmasheffect) && attack_type != "uthrow"){
if (target.state_type = "air_flinch" || target.state_type = "flinch") && (temp_spawn >= 1 && dontrepeat = 0 && !target.offstage){
				if ((target.weight <= .22 && target.percent > 50) || (target.weight > .22 && target.weight < .3 && target.percent > 60) || (target.weight > .3 && target.percent > 75)){
				temp_speed = enemy.speed
				temp_grav = enemy.gravity
                killspark = instance_create(enemy.x-180,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
                enemy.state_type = "air_flinch"
				enemy.timer = 0
				enemy.time = 25
				enemy.speed = temp_speed
				enemy.gravity = temp_grav + 1.5
				}
				}
  }


if sprite_index = stand_sprite {image_speed = 0.2;}

if sprite_index = fall_sprite {image_speed = 0.25;
if image_index >= 2 {image_index = 0;}}
							
if ( state_type = "jump" && sprite_index == jump_sprite )
{
  if ( timer = 0 )
    image_index = 0;
  if ( vspeed < 0 && image_index >= 0 )
    image_index = 0;
  if ( vspeed >= 0 && image_index < 1 )
    image_index = 1;
  if ( image_index >= 4 )
    image_index = 2;
}

if ( state_type = "jump" && sprite_index == mid_jump_sprite ) {if ( timer = 0 ) {image_index = 0;}
							image_speed = .25; 
							if image_index >= 9 {image_index = 7}}
							
if state_type = "air_dodge" {
if timer = 1 {sound_play(airdodge_sound);}}
							
///////////////////////////////////Crouch shit I stole from mp3
if ( state_type = "crouch" ){
    
    sprite_index = crouch_sprite;
    image_speed = 0;
    crouchgetuptimer = min(12,timer)
    switch (timer){
        case 0: image_index = 0; break;
        case 3: image_index = 1; break;
        case 6: image_index = 2; break;
        case 9: image_index = 3; break;
        case 12: image_index = 4; break;
    }
}

if ( state_type = "stand" && crouchgetuptimer > 0 ){
    image_speed = 0;
    crouchgetuptimer -= 1;
    sprite_index = crouch_sprite;
    crouchtemp = 1;
}

if ( state_type = "stand" && crouchgetuptimer = 0 && crouchtemp = 1 ){
    sprite_index = stand_sprite;
    image_index = 0;
    crouchtemp = 0;
}

if ( state_type = "stand" && crouchgetuptimer >= 1 and crouchgetuptimer <= 2 ){
    image_index = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 3 ){
    image_index = 1;
}

if ( state_type = "stand" && crouchgetuptimer >= 6 ){
    image_index = 2;
}

if ( state_type = "stand" && crouchgetuptimer >= 9 ){
    image_index = 3;
}

if ( state_type = "stand" && crouchgetuptimer >= 12 ){
    image_index = 4;
}


if ( state_type != "stand" && state_type != "crouch" && crouchgetuptimer > 0 ){
    crouchgetuptimer = 0;
    crouchtemp = 0;
}
///////////////////////////////////////End of Crouch shit stolen from mp3



if(attack_type = "none" )
{
    if (instance_exists(daireffect)) {with (daireffect) {instance_destroy();}}
    if (instance_exists(faireffect)) {with (faireffect) {instance_destroy();}}
    if (instance_exists(uaireffect)) {with (uaireffect) {instance_destroy();}}
    if (instance_exists(sidebeffect)) {with (sidebeffect) {instance_destroy();}}
    if (instance_exists(sidebeffect2)) {with (sidebeffect2) {instance_destroy();}}
    if (instance_exists(downbaireffect)) {with (downbaireffect) {instance_destroy();}}
    if (instance_exists(ssmasheffect)) {with (ssmasheffect) {instance_destroy();}}
    if (instance_exists(finalsmashbeambase)) {with (finalsmashbeambase) {instance_destroy();}}
    if (instance_exists(finalsmashbeameffect)) {with (finalsmashbeameffect) {instance_destroy();}}
    if (instance_exists(downbboom)) {with (downbboom) {instance_destroy();}}

}

if state_type = "edge" {
	if (instance_exists(upbeffect)) {with (upbeffect) {instance_destroy();}}
	if (instance_exists(upbeffect2)) {with (upbeffect2) {instance_destroy();}}
	}