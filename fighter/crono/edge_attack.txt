if state_type = "edge" {

        hspeed = 0;

        state_type = "attack";

        attack_type = "edge_attack";
        image_speed = 0;

        sprite_index = jab2_sprite;
		if percent < 100
        timer = 0;
		else {
		timer = -10 }

        time = 50;

        timer_speed=1;

}

switch (timer)
{
case 2: image_index = 1; break;
case 4: image_index = 2; break;
case 6: image_index = 3; break;
case 8: image_index = 4; break;
case 10: image_index = 5; jabslash.image_index = 1; sound_play(swingsnd2); play_attack_voice(); break;
case 12: image_index = 6; jabslash.image_index = 2; break;
case 14: image_index = 7; jabslash.image_index = 3; break;
case 16: image_index = 8; jabslash.image_index = 4; break;
case 18: image_index = 9; with (jabslash){instance_destroy();} break;
case 20: image_index = 10; break;
case 22: image_index = 11; break;
}

//Sword trail shit starts here
    switch (timer) {
        case 6: sword_trail = create_sword_trail(self.id, 1, 30, spread_texture); sword_trail.index = 1; break;
		case 8: sword_trail.index += 1; break;
        case 10: sword_trail.index += 1; sword_trail.end_decay = 0.33; break;
    	case 12: sword_trail.index += 1; sword_trail.end_decay = 0.66; break;
        case 13: sword_trail.end_decay = 1; break;
        case 14: sword_trail.end_decay = 1.5; break;
        case 15: sword_trail.end_decay = 2; break;
        case 16: sword_trail.end_decay = 2.5; break;
        case 17: sword_trail.end_decay = 3; break;
        case 18: sword_trail.end_decay = 3.5; break;
        case 19:
            with(sword_trail) {
                instance_destroy();
            }
            break;
    }      
//Sword trail shit ends here

if timer = 8
{
/*jabslash = create_blur(x,y,self.id);
jabslash.sprite_index = jab_fx;
jabslash.image_index = 0;
jabslash.image_speed = 0;
jabslash.image_xscale = 0.7*(1-facing*2)*size;
jabslash.image_yscale = 0.7*size;
jabslash.snap = self.id
jabslash.depth = depth - 1;
jabslash.x = x + (1 - facing * 2) *size;
jabslash.y = y - 56*size ;*/
}

if timer = 10
{
create_hitbox(4,15+facing*150,6.5,2.5,6,4,slash2,obj_spark_slash2,0.8,1.6,20,20,self.id,4,2);
}
  
if timer >= time-2 && state_type != "flinch" && state_type != "air_flinch" {
    x+= size * (2-facing*4);
	sprite_index = stand_sprite;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        