fast_fall = 0;
fast_fall_temp = 0;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" && air < max_jumps )
  {
  special = 1;
  temp = 0;
  air_move = 0;
  attack_type = "upb";
  time = 56;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = upb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  force_edge_grab = 1;
  if moveright
  {
  facing = 0;
  }
  else if moveleft
  {
  facing = 1;
  }
  }

switch (timer)
{
case 2: image_index = 1; break;
case 4: image_index = 2; break;
case 6: image_index = 3; break;
case 8: image_index = 4; break;
case 10: image_index = 5; eff.image_index = 1; sound_play(choose(upb_voice1,upb_voice2)); break;
case 12: image_index = 6; eff.image_index = 2; break;
case 14: image_index = 7; sound_play(swingsnd2); eff.image_index = 3; break;
case 16: image_index = 8; sound_play(swingsnd2); break;
case 18: image_index = 9; eff2.image_index = 1; break;
case 20: image_index = 10; sound_play(swingsnd2); eff2.image_index = 2; break;
case 22: image_index = 11; eff2.image_index = 3; break;
case 24: image_index = 8; sound_play(swingsnd2); eff2.image_index = 4; break;
case 26: image_index = 9; eff2.image_index = 5; break;
case 28: image_index = 10; sound_play(swingsnd2); eff2.image_index = 6; break;
case 30: image_index = 11; eff2.image_index = 7; break;
case 32: image_index = 8; sound_play(swingsnd2); eff2.image_index = 8; break;
case 34: image_index = 9; eff2.image_index = 9; break;
case 36: image_index = 10; sound_play(swingsnd2); eff2.image_index = 10; break;
case 38: image_index = 11; eff2.image_index = 11; break;
case 40: sprite_index = upb_end_sprite; image_index = 0; break;
case 42: image_index = 1; break;
case 44: image_index = 2; break;
case 46: image_index = 3; break;
case 48: image_index = 4; break;
case 50: image_index = 5; break;
case 52: image_index = 6; break;
case 54: image_index = 7; break;
}
if timer = 8
{
    eff = create_blur(x,y,self.id);
    eff.sprite_index = upb_fx;
	eff.image_xscale = 0.7 * (1-facing*2) * size;
    eff.image_yscale = 0.7*size;
    eff.x = x + (1 - facing * 2) *size;
    eff.y = y - 49 *size;
    eff.image_speed = 0;
    eff.image_index = 0;
	eff.snap = self.id;
    eff.depth = depth - 1;
}


if timer = 16
{
hspeed = 2 * (1-facing*2) * size; 
vspeed = -8.5*size;
with (eff){
      instance_destroy();
    }
    eff2 = create_blur(x,y,self.id);
    eff2.sprite_index = upb_fx2;
	eff2.image_xscale = 0.7 * (1-facing*2) * size;
    eff2.image_yscale = 0.7*size;
    eff2.x = x + (1 - facing * 2) *size;
    eff2.y = y - 46 *size;
    eff2.image_speed = 0;
    eff2.image_index = 0;
	eff2.snap = self.id;
    eff2.depth = depth - 1;
}

if timer = 14
{

    create_hitbox ( 2 , 85 + facing * 10 , 9 , 0 , 13 , 4 , slash2 , obj_spark_slash2 , 1.10 , 1.34 , 24.09 , 15.33 , self.id , 2 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.di = 0
	hitbox.hit_stun = 7;
    hitbox.weight_kb = 0
}

if timer >= 16 && timer < 56
{
force_edge_grab = 1;
}

if timer >= 16 && timer < 38 && !instance_exists(hitbox)
{
    create_hitbox ( 2 , 85 + facing * 10 , 6 , 0 , 5 , 2 , slash2 , obj_spark_slash2 , 2.30 , 0.72 , 2.92 , 35.15 , self.id , 6 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.di = 0
	hitbox.hit_stun = 7;
    hitbox.weight_kb = 0
}

if timer = 38
{
    create_hitbox ( 5 , 85 + facing * 10 , 4.5 , 6 , 10 , 6 , slash3 , obj_spark_slash3 , 2.30 , 0.72 , 2.92 , 35.15 , self.id , 4 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
}

if timer = 40
{
with (eff2){
      instance_destroy();
    }
}

//--------------- FALCON HIT ---------------//
if ( timer <= 3 && EXmove = 1 && limitbreak > 0 )
{
temp = 1;
}
if ( timer = 4 && temp = 1 )
{
limitbreak = 0;
limitgauge = 0;
ayla = create_projectile(10,85+facing*10,4.6,6,15,3,slash3,obj_spark_slash2,1,1,-10,0,self.id,300,char_custom4);
ayla.y = y * size;
frog.type = 1;
sprite_index = falconhit_sprite;
image_index = 0;
timer = 100;
time = 173;
super_armor = 1;
vspeed = 0;
freezer = instance_create(x,y,obj_freeze);
  freezer.alarm[0] = 30;
  freezer.dontpause = self.id;
}

if temp = 1 && timer < 131
{
gravity = 0
gravity_lock = 1; 
}

switch (timer)
{
case 100: super_armor = 1; break;
case 103: image_index = 1; break;
case 106: image_index = 2; break;
case 131: image_index = 3; break;
case 134: image_index = 4; eff.image_index = 1; break;
case 137: image_index = 3; eff.image_index = 2; break;
case 140: image_index = 4; eff.image_index = 3; break;
case 143: image_index = 3; eff.image_index = 4; break;
case 146: image_index = 4; eff.image_index = 5; break;
case 149: image_index = 3; eff.image_index = 6; break;
case 152: image_index = 4; eff.image_index = 7; break;
case 155: image_index = 3; eff.image_index = 8; break;
case 158: image_index = 4; eff.image_index = 9; break;
case 161: image_index = 3; eff.image_index = 10; break;
case 164: image_index = 4; eff.image_index = 11; break;
case 167: image_index = 3; eff.image_index = 12; break;
case 170: image_index = 4; eff.image_index = 13; break;
}

if timer >= 131 && timer < 170
{
force_edge_grab = 1;
}

if timer = 131
{
eff =  create_blur(x,y,self.id);
eff.sprite_index = falconhit_fx;
eff.image_index = 0;
eff.image_speed = 0;
eff.image_xscale = 0.8 * (1 - facing * 2) *size;
eff.image_yscale = 0.8*size;
eff.snap = self.id
eff.depth = depth - 1;
eff.x = x + (1 - facing * 2) *size;
eff.y = y - 70 *size; 
vspeed = -12*size;
sound_play(falconhit_sound); 
sound_play(falconhit_voice); 
air_move = 1;
create_hitbox ( 12 , 85 + facing * 10 , 7 , 5.5 , 15 , 4 , slash3 , obj_spark_slash3 , 0.62 , 2.37 , 5.70 , 32.30 , self.id , 39 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
}


if ( timer >= time - 1 )
  {
  with (eff)
 {
  instance_destroy();
 }
 super_armor = 0;
  attack_type = "none";
  if ( air > 0 )
    state_type = "fall";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }