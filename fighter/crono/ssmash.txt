if ( state_type == "stand" || state_type == "run" )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "ssmash";
  image_speed = 0;
  image_index = 0;
  sprite_index = ssmash_sprite;
  timer = 0;
  time = 30;
  timer_speed = 1;
  charge_frame = 10;
  }
  
switch (timer)
{
case 3: image_index = 1; break;
case 6: image_index = 2; break;
case 9: image_index = 3; break;
case 11: image_index = 4; sound_play(swingsnd3); sound_play(smash_voice1); break;
case 13: image_index = 5; break;
case 15: image_index = 6; break;
case 22: image_index = 7; break;
case 24: image_index = 8; break;
case 26: image_index = 9; break;
case 28: image_index = 10; break;
}

//Sword trail shit starts here
    switch (timer) {
        case 9: sword_trail = create_sword_trail(self.id, 1, 30, spread_texture); sword_trail.index = 1; break;
		case 11: sword_trail.index += 1; break;
		case 13: sword_trail.index += 1; sword_trail.end_decay = 0.33; break;
        case 15: sword_trail.index += 1; sword_trail.end_decay = 0.66; break;
		case 16: sword_trail.end_decay = 1; break;
		case 17: sword_trail.end_decay = 1.5; break;
        case 18: sword_trail.end_decay = 2; break;
        case 19: sword_trail.end_decay = 2.5; break;
        case 20: sword_trail.end_decay = 3; break;
        case 21: sword_trail.end_decay = 3.5; break;
		case 22:
            with(sword_trail) {
                instance_destroy();
            }
            break;
    }      
//Sword trail shit ends here

if timer = 17
{
/*ssmashslash = create_blur(x,y,self.id);
ssmashslash.sprite_index = ssmash_fx;
ssmashslash.image_index = 0;
ssmashslash.image_speed = 0;
ssmashslash.image_xscale = 0.7*(1-facing*2)*size;
ssmashslash.image_yscale = 0.7*size;
ssmashslash.snap = self.id
ssmashslash.depth = depth - 1;
ssmashslash.x = x + (1 - facing * 2) *size;
ssmashslash.y = y - 46.5*size ;*/
create_hitbox(14,20+facing*140,5.5,6.5,13,6,slash3,obj_spark_slash3,1.1,1.1,33,20,self.id,4,2);
duster = instance_create(x,y,obj_dust_effect);
duster.facing = facing;
}

if timer = 19
{
hitbox.image_xscale = 1.5 * (1-facing*2) * size;
hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 20 
hitbox.hitbox_y = size * 28
}

if (timer >= 17){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 125) || (target.weight > .22 && target.weight < .3 && target.percent > 140) || (target.weight > .3 && target.percent > 155)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }


if ( timer >= time - 1 )
  {
  dontrepeat = 0;
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }