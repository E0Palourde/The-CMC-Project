if state_type = "jump" {
	sprite_index = dair_sprite;
	image_index = 0;
	image_speed = 0;
	state_type = "air_attack";
	attack_type = "dair";
	timer = 0;
	time = 38;
	}
if timer < time  {
	state_type = "air_attack";
	switch ( timer )
      {


case 2: image_index = 1; break;
case 4: image_index = 2; break;
case 7: image_index = 3; break;
case 13: image_index = 4; break;
case 16: image_index = 5; break;
case 19: image_index = 6; break;
case 22: image_index = 7; break;
case 25: image_index = 8; break;
case 28: image_index = 9; break;
case 33: image_index = 10; break;
case 36: image_index = 11; break;




	}
	if timer = 13 {
		star = create_projectile(4,90,8.5,1,8,4,shock2,obj_spark_shock,1,1,0,0,self.id,7,char_custom6);
		proj.sprite_index = star_sprite;
		proj.hit_stun = 8;
		proj.visible = 0;
		}
	if timer = 14 {
                sound_play ( electric_sound );
                play_attack_voice();
                create_hitbox(7,270,4,0,11,8,shock3,obj_spark_shock,0.7,0.7,0,-1,self.id,15,2);
		spark = instance_create(x + 0 * (1-facing*2) *size,y + 15 * size,obj_spark)
		spark.sprite_index = cloudthunder_sprite;
		spark.image_xscale = 0.42 * size;
		spark.image_yscale = 0.42 * size;
		spark.snap = self.id;
		spark.image_alpha = 0.55;
		spark.glow = 0.3;
		hitbox.hit_stun = 8;
		hitbox.di = 0
		spark.image_speed = 0.65
		}
	if star.attack_success > 0 {
	hitbox.bkb = 0
        hitbox.hit_stun = 35;
	hitbox.dir=49+82*facing
	hitbox.hitlag_frame=14
	hitbox.dmg=12
	if !offstage{
		vspeed += 1.95
	}
}
	if timer = 36 {
		image_speed = 0;
		}
	if air = 0 {
                dontrepeat = 0;
				state_type="land";
                attack_type="none";

                sprite_index = land_sprite;

                timer=0;

                time=12;
		}

	}
	      if (timer >= 14){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0) && target.offstage && !(star.attack_success) && obj_score_control.stocks[target.number-1] == 1 {
				if ((target.weight <= .22 && target.percent > 50) || (target.weight > .22 && target.weight < .3 && target.percent > 60) || (target.weight > .3 && target.percent > 60)){
			    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" 
	{
	dontrepeat = 0; 
	attack_type = "none";
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 1;
	image_speed = 0;
    timer = 0;
    time =-1;
	}