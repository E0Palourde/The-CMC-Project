fast_fall = 0;
fast_fall_temp = 0;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" && air < max_jumps )
  {
  if meter < 100 {
		exit;
	}
  attacking = 0;
  special = 0;
  attack_type = "uab";
  time = 70;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = upb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  intangible = 1;
  air_move = 0;
  
  meter -= 100
  ZAWARUDOTOKIWOTOMARE  = instance_create(x,y,obj_freeze)
  ZAWARUDOTOKIWOTOMARE.dontpause = self.id
  ZAWARUDOTOKIWOTOMARE.alarm[0] = 30
  sound_play(supersound);
  effect_create_above(ef_ring,x + 1 * (1-facing*2),y - 15,1.5,c_blue)
  }

if timer < 33
{
gravity = 0;
gravity_lock = 1;
vspeed = 0;
}

switch(timer)
{
case 33: image_index = 1; break;
case 36: image_index = 2; intangible = 0; break;
case 39: image_index = 3; break;
case 42: image_index = 4; break;
case 45: sprite_index = uair_sprite; image_index = 0; break;
case 47: image_index = 1; break;
case 49: image_index = 2; break;
case 51: image_index = 3; break;
case 53: sprite_index = sideb_sprite; image_index = 0; break;
case 55: image_index = 1; break;
case 57: image_index = 2; break;
case 59: image_index = 3; break;
case 61: image_index = 4; break;
case 63: image_index = 5; break;
}

if timer = 36
{
sound_play(shocksound4);
sound_play(uab_voice);
upbfx = create_blur(x,y,self.id);
upbfx.sprite_index = upb_fx;
upbfx.image_index = 0;
upbfx.image_speed = 0;
upbfx.snap = self.id;
upbfx.image_xscale = 0.07*(1-facing*2)*size;
upbfx.image_yscale = 0.07*size;
upbfx.x = x + 9 * (1-facing*2) * size;
upbfx.y = y - 56* size;
upbfx.depth = depth - 1;

hspeed = 2 * (1-facing*2) * size;
vspeed = -9 * size;

}

switch (timer)
{
case 37: upbfx.image_index = 1; break;
case 38: upbfx.image_index = 2; break;
case 39: upbfx.image_index = 0; break;
case 40: upbfx.image_index = 1; break;
case 41: upbfx.image_index = 2; upbfx.image_speed = 0.4; break;
}

if timer >= 45
{
gravity = 0;
gravity_lock = 1;
hspeed = 0;
vspeed = 0;
}

if timer = 33
{
    create_hitbox ( 2 , 85 + facing * 10 , 6.5 , 0 , 19 , 6 , shock2 , obj_spark_shock , 0.57 , 1.37 , 4.05 , 35.10 , self.id , 6 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.hit_stun = 7;
	hitbox.di = 0;
	hitbox.weight_kb = 1;
}

if timer = 36 or timer = 39 or timer = 42 
{
    create_hitbox ( 2 , 85 + facing * 10 , 4.5 , 0 , 19 , 6 , shock2 , obj_spark_shock , 0.57 , 1.37 , 4.05 , 35.10 , self.id , 6 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.hit_stun = 7;
	hitbox.di = 0;
	hitbox.weight_kb = 1;
}

if timer = 47
{
    create_hitbox ( 4 , 85 + facing * 10 , 4.3 , 5.2 , 9 , 4 , kick2 , obj_spark_hit3 , 0.97 , 0.90 , 14.85 , 25.20 , self.id , 5 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	sound_play(attacksnd3);
}

if timer = 59
{
    create_hitbox ( 4 , 15 + facing * 150 , 6.3 , 6.8 , 9 , 4 , shock3 , obj_spark_shock , 0.97 , 0.90 , 14.85 , 25.20 , self.id , 5 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	sound_play(shocksound4);
	downbfx = create_blur(x,y,self.id);
    downbfx.sprite_index = downb_fx;
    downbfx.image_index = 0;
    downbfx.image_speed = 0.55;
    downbfx.snap = self.id;
    downbfx.image_xscale = 0.07*(1-facing*2)*size;
    downbfx.image_yscale = 0.07*size;
    downbfx.x = x + 25 * (1-facing*2) * size;
    downbfx.y = y - 34 * size;
    downbfx.depth = depth - 1;
}

if attack_success and timer >= 33 and timer < 63
{
target.x = x + 14 * (1-facing*2)
target.y = y;
}

if ( timer >= time - 1 )
  {
  attack_type = "none";
  if ( air > 0 )
    state_type = "jump";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }