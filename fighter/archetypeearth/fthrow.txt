if ( time == -1 )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "fthrow";
  image_speed = 0;
  image_index = 0;
  sprite_index = fthrow_sprite;
  timer = 0;
  time = 36;
  timer_speed = 1;
  target.timer_speed = 0;
  target.alarm[0] = 50;
  target.depth = depth + 1;
  }

switch ( timer )
  {
  case 1: image_index = 1;  break;
  case 4: image_index = 2;  break;
  case 7: image_index = 3;  break;
  case 12: image_index = 4;  break;
  case 17: image_index = 5;  break;
  case 22: image_index = 6;  break;
  case 27: image_index = 7;  break;
  case 34: image_index = 8;  break;
  }

if ( timer = 1 )
{
sound_play ( fthrow_voice );
}

if ( timer < 1 )
{
target.x = x + 17 * size * (1-facing*2);
target.y = y;
}

if ( timer >= 1 && timer <= 3 )
{
target.x = x + abs(place_x(98)) * (1-facing*2);
target.y = y + place_y(31) + (target.actual_height*0.5);
}
if ( timer >= 4 && timer <= 6 )
{
target.x = x + abs(place_x(96)) * (1-facing*2);
target.y = y + place_y(31) + (target.actual_height*0.5);
}
if ( timer >= 7 && timer <= 11 )
{
target.x = x + abs(place_x(93)) * (1-facing*2);
target.y = y + place_y(13) + (target.actual_height*0.5);
}
if ( timer >= 12 && timer <= 16 )
{
target.x = x + -abs(place_x(64)) * (1-facing*2);
target.y = y + place_y(13) + (target.actual_height*0.5);
}
if ( timer >= 17 && timer <= 21 )
{
target.x = x + -abs(place_x(53)) * (1-facing*2);
target.y = y + place_y(6) + (target.actual_height*0.5);
}

if ( timer == 22 )
  {
  target.x = x + abs(place_x(107)) * (1-facing*2);
  target.y = y + place_y(76) + (target.actual_height*0.5);
  create_throw_box ( 10 , angle_correct(15) , 6.2 , 2.1 , 10 , 5 , archetypeearthhit3 , obj_spark_hit3 , 0.95 , 0.95 , 16 , 17 , self.id , 2 );
  }

if ( timer >= time - 1 )
  {
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }