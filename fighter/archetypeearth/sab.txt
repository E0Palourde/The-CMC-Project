if ( cantsideb = 1 )
{
exit;
}

fast_fall = 0;
fast_fall_temp = 0;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" || state_type == "crouch" )
  {
  attacking = 0;
  special = 0;
  attack_type = "sab";
  time = 55;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = sideb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  air_move = 0;
  targetLock = 0;
  has_hit = 0;
  temp = 0;
  }

gravity_lock = 1;
no_flash = 1;

switch ( timer )
  {
  case 4: image_index = 1; break;
  case 28: image_index = 2; break;
  case 31: image_index = 3; break;
  case 34: image_index = 4; break;
  case 37: image_index = 5; break;
  case 38: eff2.image_speed = 1; break;
  case 40: image_index = 6; break;
  case 43: image_index = 7; break;
  case 46: image_index = 8; break;
  case 50: image_index = 9;  break;
  case 53: image_index = 10;  break;
  
  case 105: image_index = 1; break; //1st hit of part 2

  case 110: image_index = 2; break;
  case 113: image_index = 3; break;
  case 116: image_index = 4; break;
  case 119: image_index = 5; break;
  case 122: image_index = 6; break;
  case 128: image_index = 7; break;
  case 131: image_index = 8; break;
  case 134: image_index = 9; break;
  
  case 137: image_index = 10; break; //Transition to 2nd hit
  case 140: image_index = 11; break;
  case 143: image_index = 12; break;

  case 146: image_index = 12; break; //2nd hit of part 2
  case 149: image_index = 13; break;
  case 152: image_index = 14; break;
  case 158: image_index = 15; break;
  case 161: image_index = 16; break;
  case 164: image_index = 17; break;

  case 167: image_index = 18; break; //Transition to 3rd hit
  case 170: image_index = 19; break;
  case 173: image_index = 19; break;
  
  case 176: image_index = 20; break; //3rd hit of part 2
  case 179: image_index = 21; break;
  case 182: image_index = 22; break;
  case 185: image_index = 23; break;
  case 188: image_index = 24; break;
  case 194: image_index = 25; break;
  case 200: image_index = 26; break;
  case 203: image_index = 27; break;
  case 206: image_index = 28; break;
  }

//-----------------------------------------------------------------------------------------------CHARGE---------------------------------------------------------------------------

if ( timer < 35 )
{
vspeed = 0;
}

if ( timer < 11 )
{
hspeed = 0;
}

if ( timer >= 31 && timer <= 46 )
{
hspeed = 4.5 * (1-facing*2) * size;
temp3 = hspeed;
}

if ( timer >= 47 && timer <= 50 )
{
hspeed *= 0.8;
}

if ( timer = 4 )
{
if ( irandom(1) = 0 )
	{
	sound_play( choose ( sab_voice , sab_voice2 , sab_voice3 , sab_voice4 , sab_voice5 ) );
	}

sound_play ( sideb_super_sound );

eff = instance_create( x + -abs(place_x(27)) * (1-facing*2) , y + place_y(46) , obj_spark);
eff.sprite_index = sab_effect_sprite2;
eff.image_xscale = 0.4 * (1 - facing * 2) * size;
eff.image_yscale = 0.4 * size;
eff.image_alpha = 1;
eff.image_index = 0;
eff.image_speed = 1;
eff.depth = depth - 0.1;
eff.snap = self.id;
eff.script = char_custom10;
eff.owner = self.id;
eff.keepmain = self.keepmain;
}


if ( timer = 31 ) 
  {
sound_play(melty_swing_sound2);
create_hitbox(4,angle_correct(30),3.5,0,15,5,archetypeearthhit2,obj_spark_hit1,1.3,0.6,abs(place_x(82))/size,-place_y(45)/size,self.id,14,3);
hitbox.hit_stun = 30;
hitbox.di = -1;
hitbox.sdi = -1;
hitbox.armor_break = 1;
hitbox.execute_on_hit = "attacker.has_hit = 1; attacker.targetLock = attacked.id;"

eff2 = instance_create( x + abs(place_x(82)) * (1-facing*2) , y + place_y(35) , obj_spark);
eff2.sprite_index = stilt_effect_sprite3;
eff2.image_xscale = 0.4 * (1 - facing * 2) * size;
eff2.image_yscale = 0.4 * size;
eff2.image_alpha = 1;
eff2.image_index = 0;
eff2.image_speed = 0;
eff2.depth = depth - 0.1;
eff2.snap = self.id;
eff2.script = char_custom10;
eff2.owner = self.id;
eff2.keepmain = self.keepmain;

if ( air = 0 )
	{
	duster = instance_create( x - 6 *(1-facing*2) * size , y , obj_dust_effect )
	duster.image_alpha = 0.75;
	duster.image_xscale *= 0.6 * size;
	}
  }

//-------------------------------------------------------------------------------------------TRANSITION---------------------------------------------------------------------------

if ( has_hit = 1 && timer = 45 && temp = 0 && targetLock.custom_boss != 1 )
{
time = 209;
timer = 100;

sprite_index = sab_sprite;
image_index = 0;

temp = 1;

if ( instance_exists ( eff2 ) )
	{
	with ( eff2 )
		{
		instance_destroy();
		}
	}
}

//-------------------------------------------------------------------------------------------2ND PHASE----------------------------------------------------------------------------
if ( temp = 1 )
{

if ( image_alpha < 1 )
{
intangible = 1;
}
if ( image_alpha >= 1 )
{
intangible = 0;
}

//------------------------------------1st Hit transition----------------------------------------------
if ( image_alpha > 0 && timer <= 105 )
	{
	image_alpha -= 0.2;
	}
if ( image_alpha < 1 && timer >= 110 && timer <= 130 )
	{
	image_alpha += 0.2;
	}

if ( timer = 110 )
{
x = targetLock.x + 20 * (1-facing*2) * targetLock.size;
y = targetLock.y;
}
if ( timer >= 110 && timer <= 121 ) 
  {
	targetLock.speed = 0;
	targetLock.hspeed = 0;
	targetLock.vspeed = 0;
	speed = 0;
	hspeed = 0;
	vspeed = 0;
  }

if ( timer = 122 ) 
  {
	sound_play(melty_swing_sound2);
	create_hitbox(6,angle_correct(125),8.5,0,15,5,archetypeearthhit2,obj_spark_hit3,2.5,1.6,-abs(place_x(25))/size,-place_y(52)/size,self.id,5,5);
	hitbox.image_angle = angle_correct(135);
	hitbox.hit_stun = 30;
	hitbox.di = -1;
	hitbox.sdi = -1;

	eff = instance_create( x + -abs(place_x(25)) * (1-facing*2) , y + place_y(52) , obj_spark);
	eff.sprite_index = sab_effect_sprite;
	eff.image_xscale = 0.4 * (1 - facing * 2) * size;
	eff.image_yscale = 0.4 * size;
	eff.image_alpha = 0.8;
	eff.image_index = 0;
	eff.image_speed = 1;
	eff.depth = depth - 0.1;
	eff.snap = self.id;
	eff.script = char_custom10;
	eff.owner = self.id;
	eff.keepmain = self.keepmain;
  }

//------------------------------------2nd Hit transition----------------------------------------------
if ( timer >= 137 && timer <= 145 ) 
  {
	hspeed = -4 * (1-facing*2) * size;
	vspeed = -4 * size;
  }
if ( timer >= 137 && timer <= 145 && image_alpha > 0 ) 
  {
  image_alpha -= 0.15;
  }
if ( timer >= 146 && timer <= 160 && image_alpha < 1 ) 
  {
  image_alpha += 0.15;
  }
if ( timer = 146 ) 
	{
	x = targetLock.x - 10 * (1-facing*2) * targetLock.size;
	y = targetLock.y + 20 * targetLock.size;
	}
if ( timer >= 146 && timer <= 151 ) 
  {
	targetLock.speed = 0;
	targetLock.hspeed = 0;
	targetLock.vspeed = 0;
	speed = 0;
	hspeed = 0;
	vspeed = 0;
  }

if ( timer = 152 )
	{
	create_hitbox(6,angle_correct(45),8.5,0,15,5,archetypeearthhit2,obj_spark_hit3,2.6,0.8,abs(place_x(59))/size,-place_y(18)/size,self.id,5,5);
	hitbox.image_angle = angle_correct(45);
	hitbox.hit_stun = 30;
	hitbox.di = -1;
	hitbox.sdi = -1;

	eff = instance_create( x + abs(place_x(45)) * (1-facing*2) , y + place_y(10) , obj_spark);
	eff.sprite_index = upb_effect_sprite2;
	eff.image_xscale = 0.4 * (1 - facing * 2) * size;
	eff.image_yscale = 0.4 * size;
	eff.image_alpha = 0.8;
	eff.image_index = 0;
	eff.image_speed = 1;
	eff.depth = depth - 0.1;
	eff.snap = self.id;
	eff.script = char_custom10;
	eff.owner = self.id;
	eff.keepmain = self.keepmain;
	}
}

//------------------------------------3rd Hit transition----------------------------------------------
if ( timer >= 167 && timer <= 175 ) 
  {
	hspeed = 4 * (1-facing*2) * size;
	vspeed = -4 * size;
  }
if ( timer >= 167 && timer <= 175 && image_alpha > 0 ) 
  {
  image_alpha -= 0.15;
  }
if ( timer >= 176 && image_alpha < 1 ) 
  {
  image_alpha += 0.15;
  }
if ( timer = 176 ) 
	{
	x = targetLock.x + 20 * (1-facing*2) * targetLock.size;
	y = targetLock.y;
	}
if ( timer >= 176 && timer <= 187 ) 
  {
	targetLock.speed = 0
	targetLock.hspeed = 0
	targetLock.vspeed = 0
	speed = 0
	hspeed = 0
	vspeed = 0
  }

if ( timer = 188 )
{
play_attack_voice();
sound_play(melty_swing_sound2);

create_hitbox(7,angle_correct(270),4,5,10,8,archetypeearthhit3,obj_spark_hit4, 1.2 , 2.5 , -abs(place_x(10))/size ,-place_y(95)/size,self.id,5,2);
hitbox.hit_stun = 10;

eff = instance_create( x - abs(place_x(120)) * (1-facing*2) , y + place_y(95) , obj_spark);
eff.sprite_index = dair_effect_sprite;
eff.image_xscale = -0.4 * (1 - facing * 2) * size;
eff.image_yscale = 0.4 * size;
eff.image_alpha = 0.8;
eff.image_index = 0;
eff.image_speed = 1;
eff.depth = depth - 0.1;
eff.snap = self.id;
eff.script = char_custom10;
eff.owner = self.id;
eff.keepmain = self.keepmain;
}

if ( timer >= time - 1 )
  {
  if ( temp = 1 )
	{
	facing = !facing;
	image_xscale *= -1;
	}
  intangible = 0;
  cantsideb = 1;
  attack_type = "none";
  if ( air == 0 )
    state_type = "stand";
    else
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 10;
	}
  timer = 0;
  time = -1;
  }