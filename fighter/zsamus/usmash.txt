if ( state_type = "stand" || state_type = "run" )
  {
    state_type = "attack";
    attack_type = "usmash";
    timer = 0;
    time = 40;
    sprite_index = usmash_sprite;
    image_speed = 0;
    image_index = 0;
    charge_frame = 5;
    hspeed *= 0;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 3: image_index = 2; break;
	case 4: image_index = 3; break;
	case 5: image_index = 4; break;
	case 6: image_index = 5; break;
	case 8: image_index = 6; break;
	case 10: image_index = 7; break;
	case 12: image_index = 8; break;
	case 15: image_index = 9; break;
	case 18: image_index = 10; break;
	case 21: image_index = 11; break;
	case 23: image_index = 12; break;
	case 25: image_index = 13; break;
	case 27: image_index = 14; break;
	case 30: image_index = 15; break;
	case 33: image_index = 16; break;
      }
    if ( timer = 5 )
      {
	sound_play(attack_voice6);
	create_hitbox(3,85+facing*10,7,0,5,3,shock3,obj_spark_shock,1,1,-5,20,self.id,4,4);
	create_hitbox2(3,95-facing*10,7,0,5,3,shock3,obj_spark_shock,1,1,5,20,self.id,4,4);
      }

    if ( timer = 7 )
      {
	sound_play(wire_sound);
	if ( air = 0 )
	  {
	    duster = instance_create(x,y,obj_dust_effect);
	    duster.facing = facing;
	  }
	instance_create(x,y-15*size,obj_spark_effect);
	wire = instance_create(x+size*(3-facing*6),y-45*size,obj_spark);
	wire.sprite_index = upb_wire_sprite;
	wire.image_speed = 0.3;
	wire.image_xscale = 1.1;
	wire.image_yscale = 1.3;
      }
    if ( timer >= 5 )
      {
	wire.x = x + size * (3-facing*6);
	wire.y = y - 42*size;
      }
    if ( timer = 15 )
      {
	create_hitbox(9,angle_correct(270),5,4.5,5,10,shock3,obj_spark_shock,0.62,2.8,2,84,self.id,5,4);
	hitbox.charge_dmg = 0.8;
	hitbox.charge_kb = 0.8;
	hitbox.charge_hitlag = 0.8;
      }
    if ( timer >= 17 && attacking )
      {
	if ( instance_exists(wire) )
	with ( wire )
	    instance_destroy();
	state_type = "jump";
	attack_type = "none";
	timer = 0;
	time = -1;
	if ( ( !facing && moveright ) || ( facing && moveleft ) )
	    char_fair();
	else
	if ( ( !facing && moveleft ) || ( facing && moveright ) )
	    char_bair();
	else
	if ( moveup )
	    char_uair();
	else
	if ( movedown )
	    char_dair();
	else
	    char_nair();
	exit;
      }
    if ( timer >= 17 && timer <= 39 )
      {
	if ( collision_rectangle(x-3*size*(1-facing*2),y-7*size,x+size*(6-facing*12),y-165*size,obj_edge_left,1,1) )
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    facing = 0;
	    edge = instance_nearest(x,y,obj_edge_left);
	    x = edge.x-size*7;
	    y = edge.y + sprite_get_height(sprite_index)*image_yscale-13;
	    with wire instance_destroy();
	    attacking = 0
	    with hitbox instance_destroy();
	    with hitbox2 instance_destroy();
	    exit;
	  }
	if ( collision_rectangle(x-3*size*(1-facing*2),y-7*size,x+size*(6-facing*12),y-165*size,obj_edge_right,1,1) )
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    facing = 1;
	    edge = instance_nearest(x,y,obj_edge_right);
	    x = edge.x+size*7;
	    y = edge.y + sprite_get_height(sprite_index)*image_yscale-13;
	    with wire instance_destroy();
	    attacking = 0
	    with hitbox instance_destroy();
	    with hitbox2 instance_destroy();
	    exit;
	  }
      }
    if ( timer >= 38 && air = 0 )
	sprite_index = stand_sprite;
    if ( air = 0 )
	hspeed = 0;
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    if ( air = 0 )
	state_type = "stand";
    else
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
  }