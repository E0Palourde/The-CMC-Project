if ( state_type = "stand" || state_type = "run" || state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "sideb";
    timer = 0;
    time = 60;
    sprite_index = sideb_sprite;
    image_speed = 0;
    image_index = 0;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 8: image_index = 2; break;
	case 11: image_index = 3; break;
	case 14: image_index = 4; break;
	case 18: image_index = 5; break;
	case 21: image_index = 6; break;
	case 24: image_index = 7; break;
	case 26: image_index = 8; break;
	case 29: image_index = 9; break;
	case 33: image_index = 10; break;
	case 38: image_index = 11; break;
	case 43: image_index = 12; break;
      }

    if ( timer = 5 )
      {
	duster = instance_create(x,y,obj_dust_effect);
	duster.facing = facing;
	instance_create(x,y-15*size,obj_spark_effect);
      }
	if timer > 15 && timer < 30
	{
	if ( collision_rectangle(x,y-33*size,x+size*93,y-8*size,obj_edge_left,1,1) && !facing )
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    facing = 0;
	    edge = instance_nearest(x,y,obj_edge_left);
	    x = edge.x-size*7;
	    y = edge.y + sprite_get_height(sprite_index)*image_yscale-13;
	    with hitbox instance_destroy();
	    with hitbox2 instance_destroy();
	    with hitbox3 instance_destroy();
	    exit;
	  }
	if ( collision_rectangle(x-size*93,y-33*size,x,y-8*size,obj_edge_right,1,1) && facing )
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    facing = 1;
	    edge = instance_nearest(x,y,obj_edge_right);
	    x = edge.x+size*70;
	    y = edge.y + sprite_get_height(sprite_index)*image_yscale-13;
	    with hitbox instance_destroy();
	    with hitbox2 instance_destroy();
	    with hitbox3 instance_destroy();
	    exit;
	  }
	}
    if ( timer = 18 )
      {
	sound_play(sideb_sound);
	create_hitbox(2,20+facing*140,6.35,0,5,6,shock2,obj_spark_shock,0.75,0.6,16,21,self.id,12,5);
	hitbox.hit_stun = 12;
	hitbox.shake_kb = 0.5;
	hitbox.shake_ampl = 1.5;
	hitbox.di = 0.3;
	hitbox.weight_kb = 1;
      }
    if ( timer = 22 )
      {
	create_hitbox2(2,20+facing*140,6.25,0,5,6,shock2,obj_spark_shock,2.5,0.5,47,16,self.id,8,5);
	hitbox2.hit_stun = 12;
	hitbox2.shake_kb = 0.5;
	hitbox2.shake_ampl = 1.5;
	hitbox2.di = 0.3;
	hitbox2.weight_kb = 1;
      }
    if ( timer = 24 )
      {
	instance_create(x+size*(93-facing*186),y-33*size,obj_spark_effect);
	create_projectile(12,20+facing*140,6.8,4.5,18,13,explodehit3,obj_spark_fire1,1.5,0.75,85,24,self.id,6,no_script);
	proj.shake_type = 1;
	proj.shake_ampl = 0;
	proj.absorb = 0
	proj.absorb2 = 0
	proj.no_reflect = 1
	proj.no_clash = 1
	proj.priority = 5
	spark = instance_create(x+size*(85-facing*170),y-24*size,obj_spark);
	spark.sprite_index = global.shock_spark;
	spark.image_xscale = 0.5;
	spark.image_yscale = 0.5;
      }
     if (timer >= 24  && timer < 31 ){
if (attack_success || target.object_index == obj_enemy) && (target.percent > 120 && temp_spawn >= 2) && dontrepeat = 0 {
				killspark = instance_create(enemy.x-235,enemy.y-245,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.8;
				killspark.image_yscale = size * 0.8;
				killspark.image_yscale = size * 0.8;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 100;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
		
	if ( air = 0 )
	hspeed = 0;
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    if ( air = 0 )
	state_type = "stand";
    else
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
  }