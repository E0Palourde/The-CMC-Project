fast_fall = 0;
fast_fall_temp = 0;
gravity_lock = 1;
hover = 0;
if ( state_type = "stand" || state_type = "run") {
    state_type = "attack";
    attack_type = "dash_attack";
    state_type = "air_attack";
        image_speed = 0;
        sprite_index = dash_attack_sprite;
        image_index=0;
        timer = 0;
        time = 48;
}

        if timer < time {
	switch (timer)
       {
        case 3: image_index = 1; break;
        case 6: image_index = 8; break;
        case 9: image_index = 2; break;
        case 12: image_index = 3; break;
        case 15: image_index = 4; break;
        case 18: image_index = 5; break;
        case 21: image_index = 2; break;
        case 24: image_index = 3; break;
        case 27: image_index = 4; break;
        case 30: image_index = 5; break;
        case 33: image_index = 2; break;
        case 36: image_index = 6; break;
        case 38: image_index = 7; break;
        case 40: image_index = 8; break;
		case 42: image_index = 9; break;
        case 44: image_index = 10; break;
       }
            if timer < 9 {
                hspeed = 3.3*size*(1-facing*2);
	}
          if timer = 9 {
                if random(10) > 1.5
                    play_attack_voice()
                sound_play(attack_sound1);
                create_hitbox(3,25+facing*130,5.14,0,7,5,punch2,obj_spark_hit2,0.83,0.5,11.5,5.70,self.id,3,2);
                create_hitbox2(3,25+facing*130,5.44,0,7,5,punch2,obj_spark_hit2,0.83,0.5,-15.20,5.70,self.id,3,2);
                hitbox.hit_stun = 10;
                hitbox2.hit_stun = 10;
				hitbox.di = 0;
				hitbox2.di = 0;
				hitbox.weight_kb = 1;
				hitbox2.weight_kb = 1; }
				
			if timer = 9 && air < 1 {
				duster = instance_create(x-1+facing*2*size,y-1*size,obj_dust_effect);
				duster.facing = facing;
				duster.image_xscale = 0.16*size*(1-facing*2);
				duster.image_yscale = 0.16*size; }
				
    if ( timer >= 10 &&  timer <= 35 ) {
      hspeed = run_speed*size*(1-facing*2); }

	    if timer = 21 {
                sound_play(attack_sound1);
                create_hitbox(3,13+facing*154,4.62,0,7,5,punch2,obj_spark_hit2,0.83,0.5,15.20,5.70,self.id,3,2);
                create_hitbox2(3,13+facing*154,5.15,0,7,5,punch2,obj_spark_hit2,0.83,0.5,-15.20,5.70,self.id,3,2);
                hitbox.hit_stun = 10;
                hitbox2.hit_stun = 10;
				hitbox.di = 0;
				hitbox2.di = 0;
				hitbox.weight_kb = 1;
				hitbox2.weight_kb = 1;
		}
            if timer = 33 {
                sound_play(attack_sound2);
                create_hitbox(6,37+facing*106,5.7,4.4,8,6,punch2,obj_spark_hit4,0.83,0.5,11.5,5.70,self.id,3,2);
                create_hitbox2(6,37+facing*106,6.7,4.1,8,6,punch2,obj_spark_hit4,0.83,0.5,-15.20,5.70,self.id,3,2);
                }
    if ( timer < 36 && timer > 0 ) {
	vspeed = 0;
	temp_fall_speed = 0;
	}
    if air = 1 and ( timer > 35 and timer < 49 ) {
	vspeed = 1.73*size;
	}
    if ( timer >= 36 &&  timer <= 48 )
     {
      hspeed = 1.58*size*(1-facing*2);
     }
        }  
if timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air = 1 {
    state_type = "jump"; sprite_index = mid_jump_sprite;} else {
    state_type = "stand";}
    timer = 0;
    time =-1;
    }
        
