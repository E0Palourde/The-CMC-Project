if ai_timer >= time-2
ai_state="idle"
if air = 0 {
if collision_rectangle(x-13,y-13,x+10,y,item,0,0) && hold_item = 0 && instance_nearest(x,y-5,item).holder = 0 && instance_nearest(x,y-5,item).grab > 0 {
        attack_type = "none";
        state_type = "land";
        sprite_index=land_sprite;
        timer = 0;
        time = 3;
        hold_item = 1;
        held_item = instance_nearest(x,y-5,item);
        held_item.holder = id;
        held_item.state_type = "held"
        sound_play(itemgetsnd);
        attacking = 0;
        exit
        }  
else {
    if enemy.percent > 100 {
    if distance_to_object(enemy) < 19 {
        //timer=0
        if enemy.air=0 {
        if held_item = -1 {
        if smash_power >= global . gs_fs_charge
        attack_type = "final_smash"
        else
        attack_type = choose("utilt","jab","stilt","upb","grab","grab","grab","dsmash","usmash","dsmash","downb","dsmash","usmash","ssmash") }
        else
        attack_type = "itemfthrow"
        }
        else {
        if held_item = -1 {
        if smash_power >= global . gs_fs_charge
        attack_type = "final_smash"
        else
        attack_type = choose("utilt","utilt","upb","stilt","usmash","usmash",",usmash","ssmash","downb","dsmash","ssmash") }
        else
        attack_type = choose("itemfthrow","itemuthrow") }
        exit
        }
    if distance_to_object(enemy) >= 19 && enemy.air=0 {
        //timer=0
        if held_item = -1 {
        if smash_power >= global . gs_fs_charge && abs(enemy.y-self.y) < 42  {
        if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
            facing=1-facing;
        attack_type = "final_smash" }
        else
        attack_type = choose("jab","stilt","stilt","dtilt","sideb","b","b","stilt","ssmash","usmash","dtilt","ssmash") }
        else
        attack_type = "itemfthrow" 
        exit
        }
    }
    else {
    if distance_to_object(enemy) < 19 {
        //timer=0
        if enemy.air=0 {
        if held_item = -1
        attack_type = choose("jab","jab","jab","utilt","utilt","utilt","dtilt","upb","grab","grab","dsmash","usmash","dsmash","downb","dsmash")
        else
        attack_type = "itemfthrow"
        }
        else {
        if held_item = -1
        attack_type = choose("jab","utilt","utilt","utilt","upb","usmash","usmash","usmash","ssmash","downb","upb","ssmash")
        else
        attack_type = choose("itemfthrow","itemuthrow") }
        exit
        }
    if distance_to_object(enemy) >= 19 && enemy.air=0 {
        //timer=0
        if held_item = -1 {
        if smash_power >= global . gs_fs_charge && abs(enemy.y-self.y) < 42  {
        if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
            facing=1-facing;
        attack_type = "final_smash" }
        else
        attack_type = choose("jab","stilt","stilt","dtilt","sideb","b","b","b","ssmash","usmash","dtilt","ssmash") }
        else
        attack_type = "itemfthrow" 
        exit
        }
    }
}
}
else if offstage && enemy.y > y-8
    attack_type = choose("fair","nair","fair","downb","fair")
else {
if distance_to_object(enemy) < 25 {
    //timer=0
    if held_item = -1 {
    if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x){
    if enemy.y > y -2
    attack_type = choose("dair","dair","dair","nair","fair","nair","nair","nair","nair","nair","dair")
    else if enemy.y < y - 14
    attack_type = choose("uair","fair","nair","uair","uair","uair","uair","uair","uair","downb")
    else
    attack_type = choose("uair","fair","nair","nair","nair","uair","uair","uair","uair","dair","uair")
    }
    else
    attack_type = choose("uair","uair","nair","nair","bair","bair","bair","bair","bair","bair","bair")
    }
    else
    attack_type = "itemfthrow" 
    exit
    }
if distance_to_object(enemy) >= 25 {
    //timer=0
    if held_item=-1 {
    if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x) {
    if smash_power >= global . gs_fs_charge && abs(enemy.y-self.y) < 46
    attack_type = "final_smash"
    else {
    if enemy.y < y - 10
    attack_type = choose("uair","uair","uair","uair","fair","uair","uair","uair","fair","bair")
    else
    attack_type = choose("uair","fair","nair","fair","dair","fair","nair","sideb","nair","dair","nair","b") }
    }
    else
    attack_type = choose("nair","uair","nair","bair","bair","bair","bair","bair","nair","bair") }
    else
    attack_type = "itemfthrow" 
    exit
    }
}
