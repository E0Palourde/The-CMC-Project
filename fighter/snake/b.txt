if (state_type = "jump" || state_type = "stand" || state_type = "crouch") && held_item =-1 {
special = 1;
attacking = 0;
timer = 0;
temp = 0;
if air = 0 {
hspeed = 0
air_move = 0
}
attack_type = "b";
if air != 0
state_type = "air_attack";
else
state_type = "air_attack";
image_speed = 0.2;
sprite_index = b_sprite;
image_index=0;
time = 202;
timer_speed=1;
}
if air = 0
hspeed = 0
if timer <= 24 && !special && temp = 0
temp = 1
if timer <= 5 && ((moveleft && !facing) || (moveright && facing)) {
    		facing = 1-facing;
		hspeed *= -1;
 		 }
if timer = 14 && attack_type = "b" && temp <= 1 && grenade_count < 2 {
sound_play(pin_sound);
grenade = instance_create(x,y-10,grenade_item);
grenade.snake = self.id;
grenade.sprite_index = grenade_sprite;
grenade.sprite_air = grenade_sprite;
grenade.sprite_held = grenade_sprite;
grenade_count += 1;
hold_item = 1;
held_item = grenade.id;
grenade.held = id;
//with grenade script_execute(grenade_init);
}
if (shieldup || movedown) && temp <= 1 && timer >= 20 {
held_item.thrown = id;
held_item.held = -99;
held_item.speed = held_item.throw_speed*0.7;
held_item.direction = 270
held_item=-1 
hold_item = 0;
state_type = "stand"
attack_type = "none"
timer = 0
time = -1
special = 0;
if air > 0
shieldup = 0
exit;
}
if timer >= 25 {
if !special || ai {
temp=2
//attack_type = "itemfthrow"
if air = 0 {
hspeed = 0;
state_type = "attack";}
else {
state_type = "air_attack"; 
}
image_speed = 0.25;
sprite_index = item_forward_sprite;
image_index=0;
timer = 0;
time = 23;
timer_speed=1;
} else if air = 0 {
air_move = 0
sprite_index = item_forward_sprite
image_index = 0+(moveleft || moveright)*(frac(timer/11)>=0.5)
if moveleft
hspeed = -size*1.5
else if moveright
hspeed = size*1.5
else
hspeed = 0
if movejump && air = 0 && vspeed >= 0 {
sound_play(jump_sound);
vspeed = -size*jump_speed*0.875;
}
}
}
if temp=2 {
if air = 0 && (!(moveleft || moveright) || (moveleft && moveright))
hspeed = 0
if timer = 1 && held_item = -1
timer = time
if timer = 5 { 
if !(moveleft || moveright) || (ai && random(10>6)) {
sound_play(choose(grenade_throw_sound1,grenade_throw_sound2));
held_item.thrown = id;
held_item.held = -99;
held_item.speed = held_item.throw_speed*0.7;
held_item.direction = 45+facing*90; 
held_item=-1 
hold_item = 0; 
}
else if (moveright && facing) || (moveleft && !facing) || (ai && random(10>4)) {
sound_play(choose(grenade_throw_sound1,grenade_throw_sound2));
held_item.thrown = id;
held_item.held = -99;
held_item.speed = held_item.throw_speed*0.7;
held_item.direction = 77+facing*26; 
held_item.timer =0
held_item=-1 
hold_item = 0; 
}
else {
sound_play(choose(grenade_throw_sound1,grenade_throw_sound2));
held_item.thrown = id;
held_item.held = -99;
held_item.speed = held_item.throw_speed*0.94;
held_item.direction = 28+facing*124; 
held_item.timer =0
held_item=-1 
hold_item = 0; 
}
}
}
if vspeed > 0 && (collision_point(x,y+1,obj_platform,1,1) || collision_point(x,y+1,obj_floor,1,1)) {
hspeed = 0
vspeed = 0
air_move = 0 
}
if image_index = image_number
    image_speed = 0;
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
attack_type = "none";
if air = 0
state_type = "stand";
else
state_type = "jump";
timer = 0;
time =-1;
special = 0;
}
