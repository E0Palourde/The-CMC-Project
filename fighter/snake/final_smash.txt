if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding" || state_type = "crouch" {
        hspeed = 0;
        size = csize
        grab_edge = 0
        can_die = 1
        image_angle = 0
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0
        sprite_index = land_sprite
        image_index=0
        timer = 0
        time = 1109
        temp = 0
        timer_speed=1
        intangible = 1
        final_smashes+=1
        speed = 0
        sound_play(final_smash_voice)
        sound_play(final_smash_sound1)
        background_blend=c_gray
        smash_power = 0
        effect_create_below(ef_ellipse,x,y,1,c_white)
        image_blend = c_white
        freezer  = instance_create(x,y,obj_freeze)
        freezer.dontpause = self.id
        freezer.alarm[0] = 30
        clips = 2
        ammo = 6
        draw_reticule_x = view_xview+view_wview/2
        draw_reticule_y = view_yview+view_hview/2
        sub_timer = 0
        sub_state = "idle"
        //drawer = instance_create(x,y,obj_snake_draw_helper)
        drawer = instance_create ( 0 , 0 , obj_custom_gfx );
        drawer.draw_script = char_custom8;
        drawer.depth = -13;
        drawer.keepmain = keepmain;
        drawer.snake = self.id
        drawer.alarm[0] = 1109;
        air_move=0
        interrupt = 0
        camera.following_state = number
        draw_y = -120
        ignore_physics = 1070;
}
fast_fall = 0
    fast_fall_temp = 0
    smash_power = 0
    facing=0
    sub_timer+=1
    hspeed = 0
    gravity_lock = 1;
    intangible = 1
     if timer = 30 {
     temp=0
     vspeed = -1
     camera.following_state = 0
     sprite_index = jump_sprite
     image_index = 1
     facing =1
     if global.crowdcheering <= 0 {
        global.crowdcheering = 45
        global.crowdtarget = self.id
        FMODSoundPlay(crowd_launch2)
     }
     }
     if temp = 0 && timer > 30 && timer < 240 {
        y -= 16
     }
     if y < 0 && temp = 0 {
        temp = 2
        sprite_index = final_smash_sprite
        can_die = 0 
        timer = 100
        visible = 0
        camera.following_state = 0
        }
     if timer = 101 {
        draw_x = 1
        draw_y = -120
        sound_play(final_smash_sound2)
        background_blend = c_teal
        temp = 1
        camera.following_state = 0
        }
     if timer > 101 && timer < 161 {
        draw_x = 1
        draw_y +=2
        if ( draw_y > 0 ) draw_y = 0
        }
     if ai = 1 {
        if enemy.x + enemy.hspeed > draw_reticule_x+13*view_wview/400 {
            moveright=1
            moveleft = 0 
        }
        else if enemy.x+enemy.hspeed < draw_reticule_x-13*view_wview/400 { 
            moveleft = 1
            moveright = 0 
        }
        else {
            moveright = 0
            moveleft = 0
        }
        if enemy.y + enemy.vspeed > draw_reticule_y+19*view_wview/400 {
            movedown = 1
            moveup = 0 
        }
        else if enemy.y + enemy.vspeed < draw_reticule_y-16*view_wview/400 {
            moveup = 1
            movedown = 0 
        }
        else {
            moveup = 0
            movedown = 0
        }
        if point_distance(draw_reticule_x,draw_reticule_y,enemy.x,enemy.y) < 15*view_wview/300
            attacking = 1
        else
            attacking = 0
        }
     if temp = 1 {
        x = view_xview+view_wview/2
        y = view_yview+view_hview/2
        if draw_reticule_x < view_xview+5 draw_reticule_x = view_xview+5
        if draw_reticule_x > view_xview-5+view_wview draw_reticule_x = view_xview-5+view_wview
        if draw_reticule_y < view_yview+5 draw_reticule_y = view_yview+5
        if draw_reticule_y > view_yview-5+view_hview draw_reticule_y= view_yview-5+view_hview
        draw_reticule_x += x-xprevious
        draw_reticule_y += y-yprevious
        if sub_state = "idle" || sub_state = "fire" {
            if moveright = 1 && draw_reticule_x < view_xview+view_wview
                draw_reticule_x+=6*view_wview/400
            if moveleft = 1 && draw_reticule_x > view_xview
                draw_reticule_x-=6*view_wview/400
            if movedown = 1 && draw_reticule_y < view_yview+view_hview
                draw_reticule_y+=6*view_hview/300
            if moveup = 1 && draw_reticule_y > view_yview
                draw_reticule_y-=6*view_hview/300 }
        if sub_state = "idle" && timer > 950 {
            sub_state = "end" 
            sub_timer = 0 }
        if sub_state = "idle" && attacking = 1 && timer < 900 {
                sub_timer = 0
                sub_state = "fire"
                }
        if sub_state = "fire" {
            if sub_timer = 1 {
                effect_create_above(ef_ring,view_xview+60*view_wview/300,view_yview+41*view_hview/240,1,c_white)
                sound_play(grenade_launch_sound2)
                create_projectile(14,65+floor(random(51)),7.4,6,-1,8,explodehit4,obj_spark_fire1,1.75,1.75,-110*view_wview/400,85*view_hview/300,self.id,35,char_custom7)
                proj.hit = 2
                proj.snake = self.id
                proj.target_x = draw_reticule_x
                proj.target_y = draw_reticule_y
                image_index = image_number-1
                ammo-=1
                 }
                if sub_timer = 4
                image_index=3
                if sub_timer = 50 {
                    if ammo = 0 {
                        clips-=1
                        sub_state = "reload"
                        sub_timer = 0
                        }
                     else sub_state = "idle"  
                    }
            }
        if sub_state = "reload" {
            if sub_timer = 1 {
                if clips > 0 
                image_index = 3
                else 
                sub_state  ="end"
                }
            if sub_timer = 8
                image_index = 2
            if sub_timer = 12
                image_index = 1
            if sub_timer = 15 
                image_index = 0
            if sub_timer = 16
               sound_play(final_smash_sound4)
            if sub_timer = 30
                image_index = 1
            if sub_timer = 36
                image_index = 2
            if sub_timer = 41
                image_index = 3
            if sub_timer = 44 {
                sound_play(final_smash_sound5)
                ammo = 6
                }
            if sub_timer = 62
                sound_play(final_smash_sound6)
            if sub_timer = 70
                sub_state = "idle"
            }
            if sub_state = "end" {
                if sub_timer > 1 && sub_timer < 91 {
                    draw_x = 1
                    draw_y -=2
                    }
                if sub_timer = 4
                    sound_play(final_smash_sound3)
                if sub_timer = 89
                    temp = 0
                if sub_timer >= 92 {
                    timer = 1099
                    with drawer instance_destroy()
                    temp = 0
                    visible = 1
                    vspeed = 0.1
                    smash_power = 0
                    image_yscale = 0.83
                    xsize = 0.84
                    background_blend = c_white
                    attack_type = "none";
                    intangible_frames = 60;
                    state_type = "jump";
                    timer = 0;
                    time =-1;
                    grab_edge=1
                    can_die=1
                    ignore_physics = 2;
                    x = ( obj_game_control.camera_boundary_l + obj_game_control.camera_boundary_r ) * 0.5;
                    y = obj_game_control.camera_boundary_u - 16;
                    movejump = 0
                    }
                }
        if timer = 1000 && sub_state != "end" {
            sub_state = "end"
            sub_timer = 0
        }
        //draw_reticule_x = view_xview+aim_x*400/view_wview
        //draw_reticule_y = view_yview+aim_y*300/view_hview
        //draw_sprite_ext(sprite_index,image_index,view_xview,view_yview+draw_y*300/view_hview,view_wview/267,view_hview/200,0,c_white,0.95)
        //draw_sprite_ext(final_smash_reticule_sprite,0,draw_reticule_x,draw_reticule_y,view_wview/267,view_hview/200,0,c_white,1)
        }
if timer >= 1100 {
    with drawer instance_destroy()
    visible = 1
    vspeed = 0
    smash_power = 0
    image_yscale = 0.83
    xsize = 0.84
    background_blend = c_white
    attack_type = "none";
    intangible = 0;
    state_type = "jump";
    timer = 0;
    time =-1;
    grab_edge=1
    can_die=1
    x = obj_game_control.respawn_x
    y = obj_game_control.respawn_y+20
    vspeed = -2;
    ignore_physics = 2;
    movejump = 0
    }
