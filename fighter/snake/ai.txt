if ai_timer >= time-2
ai_state="idle"
if attack_type = "none" {
if air = 0 {
    if collision_rectangle(x-13,y-13,x+10,y,item,0,0) && hold_item = 0 && instance_nearest(x,y-5,item).holder = 0 && instance_nearest(x,y-5,item).grab > 0 {
        attack_type = "none";
        state_type = "land";
        sprite_index=land_sprite;
        timer = 0;
        time = 3;
        hold_item = 1;
        held_item = instance_nearest(x,y-5,item);
        held_item.holder = id;
        held_item.state_type = "held"
        sound_play(itemgetsnd);
        attacking = 0;
        exit
    } 
else {
if collision_rectangle(c4.x-15,c4.y-20,c4.x+15,c4.y+15,player,1,1) && c4 != 0 && distance_to_point(c4.x,c4.y)>45*size {
    attack_type = "downb"
    exit
}
if distance_to_object(enemy) < 20 {
    //timer=0
    if smash_power >= global.gs_fs_charge
    attack_type = "final_smash"
    else {
        if enemy.air=0 {
        if held_item = -1 {
        if (random(20)>11-cpu_level[number-1]) && (enemy.time-enemy.timer<15 || enemy.timer<=3)
        attack_type = choose("jab","jab","downb","utilt","utilt","utilt","dtilt","stilt","stilt","usmash","stilt","usmash","grab","grab","stilt")
        else
        attack_type = choose("jab","jab","jab","stilt","stilt","stilt","utilt","utilt","dtilt","usmash","grab","grab","jab","b","utilt","downb")
        }
        else
        attack_type = "itemfthrow"
        }
        else {
        if held_item = -1
        attack_type = choose("b","utilt","utilt","usmash","usmash","usmash","utilt","ssmash","utilt","jab","utilt","utilt","stilt","utilt","jab")
        else
        attack_type = choose("itemfthrow","itemuthrow") }
        exit }
    }
else {
    //timer=0
    if held_item = -1 {
    if smash_power >= global.gs_fs_charge {
    if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
        facing=1-facing;
    attack_type = "final_smash" }
    else {
        if enemy.y >= y - size*10
            attack_type = choose("stilt","jab","stilt","dtilt","dsmash","b","b","dtilt","ssmash","usmash","downb","ssmash","dtilt","dtilt","downb","usmash") 
        else
            attack_type = choose("b","utilt","utilt","usmash","usmash","usmash","utilt","ssmash","utilt")
    }
    }
    else
    attack_type = "itemfthrow" 
    exit
    }
}
}
else if offstage && enemy.y > y-5 {
    if enemy_dist > 30
        attack_type = "fair"  
    else
        attack_type = choose("fair","bair","fair","dair","fair")
}
else {
if distance_to_object(enemy) < 33 {
    //timer=0
    if held_item = -1 {
    if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x){
    if enemy.y < y - 21
    attack_type = choose("uair","uair","uair","nair","fair","nair","dair","dair","uair","uair")
    else
    attack_type = choose("uair","fair","nair","nair","fair","dair","dair","nair","fair","dair","bair")
    }
    else
    attack_type = choose("uair","uair","nair","bair","bair","bair","bair","downb","dair","dair","bair")
    }
    else
    attack_type = "itemfthrow" 
    exit
    }
if distance_to_object(enemy) >= 33 {
    //timer=0
    if held_item=-1 {
    if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x) {
    if smash_power >= global.gs_fs_charge
    attack_type = "final_smash"
    else {
    if enemy.y < y - 21
    attack_type = choose("uair","uair","uair","uair","uair","dair","nair","fair","uair","nair","fair")
    else
    attack_type = choose("uair","uair","nair","fair","b","nair","dair","dair","bair","downb","nair") }
    }
    else
    attack_type = choose("uair","nair","nair","bair","bair","bair","bair","bair","b","dair","bair") }
    else
    attack_type = "itemfthrow" 
    exit
    }
}
}
