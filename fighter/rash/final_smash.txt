if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding"  {
        attack_success = 0
        hspeed = 0;
		vspeed = 0;
		gravity_lock = 2;
        size = csize
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0;
        sprite_index = run_sprite;
        image_index = 0;
        timer = 1;
        time = 325;
        timer_speed=1;
        intangible = 1;
        final_smashes+=1
        sound_play(final_smash_sound_1)
        smash_power = 0
        air_move=0
}
if timer < time {
if (sprite_index = run_sprite)
		{image_speed = 0.45;}
		else
		{image_speed = 0;}
	if attack_success !=1 {
		after_image(3,c_ltgray,1)
	}
	if timer = 4 {
	create_hitbox(0,80+facing*20,10,10,999,15,punch2,obj_spark_hit1,1,1.5,0,10,self.id,999,5)
    hitbox.hit_stun = 10
    hspeed = 6 - facing*12;
	hitbox.armor_break = 1 
	}
	if timer > 1 {
		force_edge_grab = 1
		vspeed = 0;
		gravity_lock = 2;
	}
	if attack_success !=1 && timer = 40 {
				attack_type = "none";
    state_type = "stand";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 0;
	image_speed = 0;
	}
	smash_power = 0
	intangible = 0;
    timer = 0;
    time =-1;
	}				
	if timer > 3 && attack_success = 1 && timer < 42 && instance_exists(target) {
        speed = 0
       timer = 100
       target.x = self.x+19-facing*38
       target.y = y-1
       target.speed=0
       target1 = target
       temp=1
        }
    if timer >= 100 && timer <= 302 {
    target1.time = 280;
    target1.timer = 0
    target1.sprite_index=target1.flinch_sprite
    target1.state_type = "flinch"
    target1.speed = 0;
    target1.gravity_lock = 2;
	target1.ignore_physics = 1;
    target1.y = self.y;
    target1.x = x + (20 - facing*40)*size
    if ( timer < 100 )
      {
      target1.shakex = 0;
      target1.shakey = 0;
      }
    }
    switch ( timer )
{

  case 103: sprite_index = final_smash_sprite; image_index = 0; break;
  case 105: sprite_index = final_smash_sprite; image_index = 1; break;
  case 107: sprite_index = final_smash_sprite; image_index = 2; break;
  case 109: sprite_index = final_smash_sprite; image_index = 3; break;
  case 111: sprite_index = final_smash_sprite; image_index = 4; break;

  case 113: sprite_index = final_smash_sprite; image_index = 0; break;
  case 115: sprite_index = final_smash_sprite; image_index = 1; break;
  case 117: sprite_index = final_smash_sprite; image_index = 2; break;
  case 119: sprite_index = final_smash_sprite; image_index = 3; break;
  case 121: sprite_index = final_smash_sprite; image_index = 4; break;

  case 123: sprite_index = final_smash_sprite; image_index = 0; break;
  case 125: sprite_index = final_smash_sprite; image_index = 1; break;
  case 127: sprite_index = final_smash_sprite; image_index = 2; break;
  case 129: sprite_index = final_smash_sprite; image_index = 3; break;
  case 131: sprite_index = final_smash_sprite; image_index = 4; break;

  case 133: sprite_index = final_smash_sprite; image_index = 0; break;
  case 135: sprite_index = final_smash_sprite; image_index = 1; break;
  case 137: sprite_index = final_smash_sprite; image_index = 2; break;
  case 139: sprite_index = final_smash_sprite; image_index = 3; break;
  case 141: sprite_index = final_smash_sprite; image_index = 4; break;

  case 143: sprite_index = final_smash_sprite; image_index = 0; break;
  case 145: sprite_index = final_smash_sprite; image_index = 1; break;
  case 147: sprite_index = final_smash_sprite; image_index = 2; break;
  case 149: sprite_index = final_smash_sprite; image_index = 3; break;
  case 151: sprite_index = final_smash_sprite; image_index = 4; break;

  case 153: sprite_index = final_smash_sprite; image_index = 0; break;
  case 155: sprite_index = final_smash_sprite; image_index = 1; break;
  case 157: sprite_index = final_smash_sprite; image_index = 2; break;
  case 159: sprite_index = final_smash_sprite; image_index = 3; break;
  case 161: sprite_index = final_smash_sprite; image_index = 4; break;

  case 163: sprite_index = final_smash_sprite; image_index = 0; break;
  case 165: sprite_index = final_smash_sprite; image_index = 1; break;
  case 167: sprite_index = final_smash_sprite; image_index = 2; break;
  case 169: sprite_index = final_smash_sprite; image_index = 3; break;
  case 171: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 173: sprite_index = final_smash_sprite; image_index = 0; break;
  case 175: sprite_index = final_smash_sprite; image_index = 1; break;
  case 177: sprite_index = final_smash_sprite; image_index = 2; break;
  case 179: sprite_index = final_smash_sprite; image_index = 3; break;
  case 181: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 183: sprite_index = final_smash_sprite; image_index = 0; break;
  case 185: sprite_index = final_smash_sprite; image_index = 1; break;
  case 187: sprite_index = final_smash_sprite; image_index = 2; break;
  case 189: sprite_index = final_smash_sprite; image_index = 3; break;
  case 191: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 193: sprite_index = final_smash_sprite; image_index = 0; break;
  case 195: sprite_index = final_smash_sprite; image_index = 1; break;
  case 197: sprite_index = final_smash_sprite; image_index = 2; break;
  case 199: sprite_index = final_smash_sprite; image_index = 3; break;
  case 201: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 193: sprite_index = final_smash_sprite; image_index = 0; break;
  case 195: sprite_index = final_smash_sprite; image_index = 1; break;
  case 197: sprite_index = final_smash_sprite; image_index = 2; break;
  case 199: sprite_index = final_smash_sprite; image_index = 3; break;
  case 201: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 203: sprite_index = final_smash_sprite; image_index = 0; break;
  case 205: sprite_index = final_smash_sprite; image_index = 1; break;
  case 207: sprite_index = final_smash_sprite; image_index = 2; break;
  case 209: sprite_index = final_smash_sprite; image_index = 3; break;
  case 211: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 213: sprite_index = final_smash_sprite; image_index = 0; break;
  case 215: sprite_index = final_smash_sprite; image_index = 1; break;
  case 217: sprite_index = final_smash_sprite; image_index = 2; break;
  case 219: sprite_index = final_smash_sprite; image_index = 3; break;
  case 221: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 223: sprite_index = final_smash_sprite; image_index = 0; break;
  case 225: sprite_index = final_smash_sprite; image_index = 1; break;
  case 227: sprite_index = final_smash_sprite; image_index = 2; break;
  case 229: sprite_index = final_smash_sprite; image_index = 3; break;
  case 231: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 233: sprite_index = final_smash_sprite; image_index = 0; break;
  case 235: sprite_index = final_smash_sprite; image_index = 1; break;
  case 237: sprite_index = final_smash_sprite; image_index = 2; break;
  case 239: sprite_index = final_smash_sprite; image_index = 3; break;
  case 241: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 243: sprite_index = final_smash_sprite; image_index = 0; break;
  case 245: sprite_index = final_smash_sprite; image_index = 1; break;
  case 247: sprite_index = final_smash_sprite; image_index = 2; break;
  case 249: sprite_index = final_smash_sprite; image_index = 3; break;
  case 251: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 253: sprite_index = final_smash_sprite; image_index = 0; break;
  case 255: sprite_index = final_smash_sprite; image_index = 1; break;
  case 257: sprite_index = final_smash_sprite; image_index = 2; break;
  case 259: sprite_index = final_smash_sprite; image_index = 3; break;
  case 261: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 263: sprite_index = final_smash_sprite; image_index = 0; break;
  case 265: sprite_index = final_smash_sprite; image_index = 1; break;
  case 267: sprite_index = final_smash_sprite; image_index = 2; break;
  case 269: sprite_index = final_smash_sprite; image_index = 3; break;
  case 271: sprite_index = final_smash_sprite; image_index = 4; break;
  
  case 273: sprite_index = final_smash_sprite; image_index = 0; break;
  case 275: sprite_index = final_smash_sprite; image_index = 1; break;
  case 277: sprite_index = final_smash_sprite; image_index = 2; break;
  case 279: sprite_index = final_smash_sprite; image_index = 3; break;
  case 281: sprite_index = final_smash_sprite; image_index = 4; break;
  case 283: sprite_index = crouch_sprite; image_index = 0; break;
  
  case 298: sprite_index = usmash_sprite; image_index = 0; break;
  case 300: sprite_index = usmash_sprite; image_index = 1; break;
  case 302: sprite_index = usmash_sprite; image_index = 2; break;
}
    if timer = 105 {
    create_projectile(2,50+facing*40,6.45,7.75,-1,3,-1,obj_spark_effect2,1,0.9,31,0,self.id,400,pimple)
    create_projectile(2,50+facing*40,6.45,7.75,-1,3,-1,obj_spark_effect2,1,0.9,31,0,self.id,400,zitz)
	speed = 0
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    target.speed=0
	}
	if timer = 115  {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
	}
	if timer = 125 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 135  {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
	}
	if timer = 145 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
	}
	if timer = 155 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 165 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick2,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 175 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 185 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick2,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 195 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 205 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick2,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 215 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 225 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick2,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 235 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 245 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick2,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 255 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 265 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick2,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 275 {
    sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
    create_hitbox2(1,90,2.0,0,999,2,kick3,obj_spark_hit3,0.7,1.7,25,25,self.id,5,1);
    hitbox.di = 0
    hitbox.hit_stun = 20
    }
	if timer = 302 {
	sound_play(usmash_voice);
    sound_play(attack_sound7);  
    create_hitbox(9,80+facing*20,10,10,999,15,slash3,obj_spark_slash1,1.25,2,20,25,self.id,8,3)
    hitbox.hit_stun = 10
        instance_create(x+10*(1-facing*2)*size,y-18*size,obj_spark_effect)
            }
}

if timer = 302 && hitbox.hit = 1 {

	screen_shake(10,10);	
}
if timer < 302 && hitbox.hit = 1 {
	target.hspeed = hspeed
target.vspeed = vspeed
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 0;
	image_speed = 0;
	}
	smash_power = 0
	intangible = 0;
    timer = 0;
    time =-1;
}