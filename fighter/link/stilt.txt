if (state_type == "stand" || state_type == "run") {
  state_type = "attack";
  attack_type = "stilt";
  timer = 0;
  time = 29;
  sprite_index = stilt_sprite;
  image_speed = 0;
  image_index = 0;
  hspeed = 0;
  create_hurtbox_precise(self.id, 32, stilt_mask)

}

if (timer < time) {
  switch (timer){
    case 2: image_index = 1; break;
    case 4: image_index = 2; break;
    case 6: image_index = 3; break;
    case 8: image_index = 4; break;
    case 10: image_index = 5; break;
    case 13: image_index = 6; break;
    case 16: image_index = 7; break;
    case 19: image_index = 8; break;
    case 21: image_index = 9; break;
    case 25: image_index = 10; break;
  }
  
  switch (timer){
    case 8:
        sword_trail = create_sword_trail2(self.id,4,6,10,5,30,sword_texture);
        sword_trail.visible_frames = 2;
        sword_trail.per_frame_radius = true;
        sword_trail.tip_radius[2] = 59;
        sword_trail.base_radius[2] = 20;
        sword_trail.tip_radius[1] = 21;
        sword_trail.base_radius[1] = 9;
        sword_trail.tip_radius[0] = 10;
        sword_trail.base_radius[0] = 5;
        sword_trail.color_blend = sword_color;
        with(sword_trail) interpolate_sword_trail();
        break;
    case 10:
        sword_trail.index = 1; 
        break;
    case 11: case 12:
        sword_trail.visible_frames -= (1/3);
    case 13:
        sword_trail.index = 2;
        sword_trail.visible_frames = 2;
        break;
    case 14: case 15: case 16: case 17: case 18: 
      sword_trail.visible_frames -= (1/6)*2;
      break;
    case 19:
        with (sword_trail){
            instance_destroy();
        }
        break;
  }

  if (timer >= 3 && timer <= 13)
    hspeed = size * (2 - facing * 4);
  if (timer >= 13 && timer <= 19)
    hspeed = size * (2 - facing * 4);
  if (timer >= 20 && timer <= 22)
    hspeed = size * (1.5 - facing * 3);
  if (timer = 23)
    hspeed = 0;
  if (timer = 13) {
    play_attack_voice();
    sound_play(swing_sound2);
    create_hitbox(12, 18 + facing * 144, 4.9, 5.8, 11, 7, slash2, obj_spark_slash1, 1, 1.5, 21, 23, self.id, 7, 3);
  }

  if (timer == 16) {
    hitbox.damage = 4 * size;
    hitbox.dir = 20 + facing * 140;
    hitbox.bkb = 4 * size;
    hitbox.kbg = 4 * size;
    hitbox.shield_damage = 6 * size;
    hitbox.hitlag_frames = 4 * size;
    hitbox.sfx = slash1;
    hitbox.hitbox_x = size * (24 - facing * 48);
    hitbox.hitbox_y = 11 * size;
    hitbox.image_yscale = 0.7
    hitbox.image_xscale = 0.8
  }
}


   if (timer >= 13){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 150)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   



if (timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch") {
  dontrepeat = 0;
  state_type = "stand";
  attack_type = "none";
  timer = 0;
  time = -1;
}