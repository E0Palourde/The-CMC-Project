if ( state_type = "down" )
  {
    state_type = "attack";
    attack_type = "down_attack";
    timer = 1;
    time = 43;
    sprite_index = down_sprite;
    image_speed = 0;
    image_index = 0;
	create_hurtbox_precise(self.id, 29, down_attack_mask)

  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 2: image_index = 1; break;
	//case 4: image_index = 2; break;
	case 6: image_index = 2; break;
	case 8: image_index = 3; break;
	case 10: image_index = 4; sprite_index = down_attack_sprite; break;
	//case 12: image_index = 6; break;
	case 14: image_index = 5; break;
	case 15: image_index = 6; break;
	case 16: image_index = 7; break;
	case 17: image_index = 8; break;
	case 18: image_index = 9; break;
	case 19: image_index = 10; break;
	case 20: image_index = 11; break;
	case 21: image_index = 12; break;
	case 22: image_index = 13; break;
	case 24: image_index = 14; break;
	case 25: image_index = 15; break;
	case 28: image_index = 16; break;
	case 30: image_index = 17; break;
	case 32: image_index = 18; break;
	case 34: image_index = 19; break;
      }
    switch (timer){
  case 10:  sword_trail = create_sword_trail2(self.id,4,9,1,4,30,sword_texture);
            sword_trail.per_frame_radius = true;
            sword_trail.index = 0;
            sword_trail.tip_radius[4] = -7;
            sword_trail.base_radius[4] = 0;
            sword_trail.color_blend = sword_color;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[3] = -20;
            sword_trail.base_radius[3] = 0;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[2] = 18;
            sword_trail.base_radius[2] = 0;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[1] = 30;
            sword_trail.base_radius[1] = -11;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[0] = 1;
            sword_trail.base_radius[0] = 1;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.visible_frames = 1; break;
  case 14: sword_trail.index += 1; break;
  case 15: sword_trail.index += 1; sword_trail.depth=depth+1; break;
  case 16: sword_trail.index += 1; sword_trail.visible_frames = 2; break;
  case 17: sword_trail.index += 1; sword_trail.visible_frames = 1; break;
  case 18: with (sword_trail) instance_destroy(); break;
  case 21:  sword_trail = create_sword_trail2(self.id,12,16,1,4,30,sword_texture);
            sword_trail.per_frame_radius = true;
            sword_trail.index = 0;
            sword_trail.color_blend = sword_color;
            sword_trail.tip_radius[3] = -12;
            sword_trail.base_radius[3] = 0;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[2] = 30;
            sword_trail.base_radius[2] = -6;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[1] = 30;
            sword_trail.base_radius[1] = -11;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[0] = 1;
            sword_trail.base_radius[0] = 1;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.visible_frames = 1; break;
  case 22: sword_trail.index += 1; break;
  case 24: sword_trail.index += 1;  break;
  case 25: sword_trail.depth=depth+1; sword_trail.index += 1; sword_trail.visible_frames = 2; break;
  case 26: sword_trail.visible_frames = 1; break;
  case 27: sword_trail.visible_frames = 0.5; break;
  case 28: with (sword_trail) instance_destroy(); break;
    }
    if timer = 1
	intangible = 1
    if ( timer = 14 )
      {
	play_attack_voice();
	sound_play(swing_sound1);
	create_hitbox(7,145+facing*110,5.4,4.9,4,3,slash2,obj_spark_slash2,1,0.4,-40,6,self.id,4,3);
      }
    if ( timer = 22 )
      {
	sound_play(swing_sound2);
	create_hitbox(7,35-facing*110,5.4,4.9,4,3,slash2,obj_spark_slash2,1,0.4,35,6,self.id,4,3);
      }
    if timer = 25
	intangible = 0
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }