if hiddenskills = 0 {
if ( ( state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump" ) && held_item < 0 )
  {
    state_type = "air_attack";
    attack_type = "downb";
    timer = 0;
    time = 33;
    sprite_index = downb_sprite;
    image_speed = 0;
    image_index = 0;
	if air=0
	{
		hurtboxtemp=1
		create_hurtbox_precise(self.id, 33, downb_mask)
	}
	else
	{
		hurtboxtemp=2
		create_hurtbox_precise(self.id, 33, downb_air_mask)
	}
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 8: image_index = 2; break;
	case 12: image_index = 3; break;
	//case 16: image_index = 4; break;
	//case 20: image_index = 5; break;
	case 24: image_index = 4; break;
	case 28: image_index = 5; break;
      }
    if timer >= 0 {
	     if air > 0 {
				if hurtboxtemp=1 && instance_exists(hurtbox)
				{
					with(hurtbox)
						instance_destroy()
					create_hurtbox_precise(self.id, 33, downb_air_mask)
					hurtboxtemp=0
				}
                sprite_index = downb_air_sprite;
                }
              else {
				if hurtboxtemp=2 && instance_exists(hurtbox)
				{
					with(hurtbox)
						instance_destroy()
					create_hurtbox_precise(self.id, 33, downb_mask)
					hurtboxtemp=0
				}
                sprite_index = downb_sprite;
              }
	}
    if timer = 20
	sound_play(bomb_sound);
    if ( timer = 30 )
      {
	bomb = instance_create(x,y-10*size,bomb_item);
	bomb.sprite_index = bomb_sprite;
	bomb.sprite_air = bomb_sprite;
	bomb.sprite_held = bomb_sprite;
	held_item = bomb.id;
	bomb.held = self.id;
      }
    if ( air = 0 )
	hspeed = 0;
  }
}
if hiddenskills = 1 {
if ( state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump" )
  {

    state_type = "air_attack";
    attack_type = "downb";
    timer = 0;
    if air = 0 {
	special = 1
        state_type = "attack";
	mortal = 1;
        hspeed = 0;
	slide = 0;
	time = 85;
	sprite_index = mortaldrawstart_sprite;
        image_index = 1;
	temp3 = 0
    }
    else {
		create_hurtbox_precise(self.id, 230, dair_mask)
        state_type = "air_attack";
	vspeed = -3*size;
	air_move = 0;
	mortal = 0;
        hspeed = 0;
	time = 55;
	sprite_index = dair_sprite;
        image_index = 1;
    }
    image_speed = 0;
  }
if mortal = 0 {
    switch ( timer )
      {
	case 1: image_index = 1; break;
	case 5: image_index = 2; break;
	case 10: image_index = 3; break;
	case 14: image_index = 4; break;
	case 40: image_index = 20; break;
	case 45: image_index = 21; break;
	case 101: image_index = 6; break;
	case 103: image_index = 7; break;
	case 105: image_index = 6; break;
	case 104: image_index = 7; break;
      }
	fast_fall = 0;
	fast_fall_temp = 0;
	if timer < 6
	    hspeed = size * (2.5-facing*5);
	if ( timer = 5 )
	  {
	    sound_play(dsmash_voice);
	    heavy_armor = 15;
	  }
	if ( timer >= 6 && timer <= 13 )
	  {
	    hspeed = size * (2.5-facing*5);
	    image_blend = c_white;
	  }
	if ( timer = 14 )
	  {
	    sound_play(swingsnd2);
	    create_homing_bubble(0.7 , 0.7 , 15 , 17 , self.id , 20);
	    heavy_armor = 0;
	  }
	if ( timer >= 15 && timer <= 35)
	  {
	    hspeed *= 0.99;
	    if ( timer mod 3 = 0 )
		after_image(2,c_green,0.5);
	    if ( instance_exists(proj) )
	      {
		proj.x = x + size * (15-facing*30) + hspeed;
		proj.y = y - 19*size + vspeed;
	      }
	    if ( target > 0 )
	    if ( !target.intangible && target.attack_type != "final_smash" )
	      {
		timer = 100;
		time = 132;
		sound_play(slash2);
		slide = 0;
		instance_create(x,y-9*size,obj_grab_spark);
		target.state_type = "air_flinch";
		target.attack_type = "none";
		target.timer = 0;
		target.time = 50;
		target.timer_speed = 0;
		target.sprite_index = target.flinch_sprite;
		target.alarm[0] = 60;
		target.facing = 1-facing;
		target.x = x + size * (4-facing*8);
		target.y = y;
	      }
	  }
	if ( timer >= 1 && air = 0 && ( timer < 100 || timer > 110 ) )
	  {
	    if ( timer <= 34 ) || timer > 100
	      {
		sound_play(dair_land_sound);
		instance_create(x,y,obj_down_impact);
		shaker = instance_create(0,0,obj_shakescreen3);
		shaker.ampl = 4;
		shaker.time = 10;
	      }
	    state_type = "land";
	    attack_type = "none";
	    timer = 0;
	    time = 26;
	    sprite_index = dairland_sprite;
	    image_index = 0;
	    image_speed = 0.3; //0.1
	  }
	if timer > 100 {
	    target.x = x + size * (8-facing*16);
	    target.y = y;
	    target.alarm[0] += 1;
	}
	if ( timer = 105 )
	  {
	    hspeed = 0.5-facing*1;
	    vspeed = 6.8*size;
	    temp_fall_speed = 7;
	    target.alarm[0] += 1;
	    target.x = x + size * (8-facing*16);
	    target.y = y;
	    if ( ( on_floor || on_platform ) && ( target.on_floor || target.on_platform ) )
	      {
		create_throw_box(19,90,4.95,7.5,18,9,slash3,obj_spark_slash3,0.4,1.1,8,4,self.id,37,4);
		hitbox.hit_stun = 8;
		vspeed = 0;
		hspeed = 0;
		screen_shake(6,5);
		timer = 106;
	      }
	    else
		timer = 104;
	  }
    }
if mortal = 1 {
	if timer<100 && !instance_exists(hurtbox)
	{
		create_hurtbox_precise(self.id, 100, mortaldrawstart_mask)
	}
    switch ( timer )
      {
	case 3: image_index = 2; break;
	case 10: image_index = 3; break;
	case 13: image_index = 4; break;
	case 16: image_index = 5; break;
	case 20: image_index = 6; break;
	case 23: image_index = 7; break;
	case 25: image_index = 8; break;
	case 101: 
		image_index = 2; 
		sprite_index = mortaldrawslash_sprite; 
		with (hurtbox)
			{instance_destroy()}
		create_hurtbox_precise(self.id, 90, mortaldrawslash_mask)
		break;
	case 102: image_index = 3; break;
	case 103: image_index = 4; break;
	case 104: image_index = 5; break;
	case 105: image_index = 6; break; //slash 1
	case 108: image_index = 7; break; //old slash 2
	//case 110: image_index = 3; break;
	case 114: image_index = 8; break;
	/*case 118: image_index = 5; break;
	case 121: image_index = 6; break;
	case 124: image_index = 7; break;
	case 127: image_index = 8; break;
	case 140: image_index = 11; break;
	case 143: image_index = 12; break;
	case 146: image_index = 8; break;*/
	case 149: image_index = 9; break;
	case 152: image_index = 10; break;
	case 155: image_index = 11; break;
      }
    switch (timer){
  case 104: sword_trail = create_sword_trail2(self.id,5,8,1,4,30,sword_texture2);
            sword_trail.per_frame_radius = true;
            sword_trail.index = 0;
            sword_trail.tip_radius[3] = 5;
            sword_trail.base_radius[3] = 0;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[2] = 34;
            sword_trail.base_radius[2] = 5;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[1] = 32;
            sword_trail.base_radius[1] =0;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.tip_radius[0] = 10;
            sword_trail.base_radius[0] = 5;
            with(sword_trail) interpolate_sword_trail();
            sword_trail.visible_frames = 1; break;
	case 105: sword_trail.index += 1; break;
	case 108: sword_trail.index += 1; sword_trail.depth=depth+1; break; 
	case 114: sword_trail.index += 1; sword_trail.visible_frames = 2; break;
	case 118: sword_trail.visible_frames = 1; break;
	case 122: with (sword_trail) instance_destroy(); break;
      }
    if ( ai && distance_to_object(enemy) < 5 + random(7) )
	special = 0;
    if ( timer = 74 && special = 1 ) {
	timer = 72
	}
    if timer = 10 {
    sound_play(taunt_sound);
    }
    if ( !special && timer >= 20 && timer < 100 )
      {
	hspeed = 4-facing*8
	timer = 100;
	time = 168;
	sound_play(sword_sound);
	sound_play(dsmash_voice);
	sound_stop(taunt_sound);
      }
    if timer = 105 {
	hspeed = 0
	sound_play(swingsnd2);
        create_hitbox2(8+temp3*20,40+facing*100,5.1+temp3*2,7+temp3*2.5,70+temp3*35,10+temp3*25,slash3,obj_spark_slash3,1.15,0.8,23,18,self.id,13,4);
	//create_hitbox(5+temp3*5,35+facing*110,0.1,0.1,4+temp3*4,4+temp3*10,slash1,obj_spark_slash1,1.15,0.8,23,18,self.id,2,4);
	hitbox.di = 0
	}
    if timer >= 105
	if target.state_type = "attack" || target.state_type = "air_attack"
	temp3 = 1
   /*if timer = 108 {
	if temp3 = 1 {
	sound_play(clawshot_sound1)
	}
	create_hitbox2(5+temp3*20,40+facing*100,5.1+temp3*2,7+temp3*2.5,70+temp3*35,10+temp3*25,slash3,obj_spark_slash3,1.15,0.8,23,18,self.id,13,4);
	}*/
}
}
if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    intangible = 0
    if ( air = 0 )
	state_type = "stand";
    else {
	if hiddenskills = 0
	state_type = "jump";
	else
	state_type = "fall"
	}
    attack_type = "none";
    timer = 0;
    time = -1;
  }