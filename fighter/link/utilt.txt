if (state_type = "stand" || state_type = "run") {
    state_type = "attack";
    attack_type = "utilt";
    timer = 0;
    time = 33;
    sprite_index = utilt_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
	create_hurtbox_precise(self.id, 35, utilt_mask)

}

if (timer < time) {
    switch (timer) {
        case 5:
            image_index = 1;
            break;
        case 7:
            image_index = 2;
            break;
        case 9:
            image_index = 3;
            break;
        case 16:
            image_index = 4;
            break;
        case 20:
            image_index = 5;
            break;
        case 24:
            image_index = 6;
            break;
        case 28:
            image_index = 7;
            break;
    }

    // Animate VFX
    switch (timer){
      case 5:
		sword_trail = create_sword_trail2(self.id,0,4,10,5,30,sword_texture);
		sword_trail.visible_frames = 3;
		sword_trail.index = 1;
		sword_trail.per_frame_radius = true;
		sword_trail.tip_radius[3] = -28;
		sword_trail.base_radius[3] = -14;
		sword_trail.tip_radius[2] = -54;
		sword_trail.base_radius[2] = -27;
		sword_trail.tip_radius[1] = -53;
		sword_trail.base_radius[1] = -23;
		sword_trail.tip_radius[0] = 10;
		sword_trail.base_radius[0] = 5;
        sword_trail.color_blend = sword_color;
		with (sword_trail) interpolate_sword_trail();
        break;
      case 7:
        sword_trail.index = 2;
        break;
      case 9:
        sword_trail.index = 3;
        break;
      case 11:
		sword_trail.visible_frames = 2;
        break;
      case 13:
        sword_trail.visible_frames = 1;
        break;
      case 15:
        with (sword_trail){
          instance_destroy();
        }
        break;
    }

    if (timer = 6) {
        play_attack_voice();
        sound_play(swing_sound2);
        create_hitbox(10, 95 - facing * 10, 5.8, 4.5, 13, 7, slash2, obj_spark_slash1, 1, 1.3, 20, 18, self.id, 10, 2);
        hitbox.hit_stun = 3;
    }
    if (timer = 7) {
        hitbox.hitbox_x = (18 - facing * 36) * size;
        hitbox.hitbox_y = 40 * size;
    }
    if (timer = 8) {
        hitbox.hitbox_x = 0;
        hitbox.hitbox_y = 50 * size;
    }
    if (timer = 9) {
        hitbox.hitbox_x = size * (-18 + facing * 36);
        hitbox.hitbox_y = 40 * size;
    }
    if (timer = 11) {
        hitbox.damage = 7 * size;
        hitbox.bkb = 6 * size;
        hitbox.shield_damage = 10 * size;
        hitbox.hitlag_frames = 5 * size;
        hitbox.hitbox_x = size * (-27 + facing * 54);
        hitbox.hitbox_y = 20 * size;
    }
}

if (timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch") {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
}