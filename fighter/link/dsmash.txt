if ( state_type = "stand" || state_type = "run" || state_type = "crouch" )
  {
    state_type = "attack";
    attack_type = "dsmash";
    timer = 0;
    time = 49;
    sprite_index = dsmash_sprite;
    image_speed = 0;
    image_index = 0;
    charge_frame = 4;
    hspeed = 0;
	create_hurtbox_precise(self.id, 49, dsmash_mask)

  }

if ( timer < time )
{
	// Animate sword trail
	switch (timer){
		case 2:
			sword_trail = create_sword_trail2(self.id,1,4,10,5,30,sword_texture);
			sword_trail.visible_frames = 2;
			sword_trail.per_frame_radius = true;
			sword_trail.tip_radius[3] = -27;
			sword_trail.base_radius[3] = -10;
			sword_trail.tip_radius[2] = -58;
			sword_trail.base_radius[2] = -11;
			sword_trail.tip_radius[1] = -5;
			sword_trail.base_radius[1] = -3;
			sword_trail.tip_radius[0] = 10;
			sword_trail.base_radius[0] = 5;
			with(sword_trail) interpolate_sword_trail();
			sword_trail.color_blend = sword_color;
			sword_trail.index = 0;
			break;
		case 6: sword_trail.index = 1; break;
        case 7: sword_trail.visible_frames = 1.5; break;
		case 8: sword_trail.index = 2; sword_trail.visible_frames = 2; break;
        case 10: sword_trail.index = 3; sword_trail.depth = depth + 0.1; break;
        case 11: sword_trail.visible_frames = 1; break;
        case 12: with (sword_trail) instance_destroy(); break;
		case 19:	
            sword_trail = create_sword_trail2(self.id,6,12,10,5,30,sword_texture);
            sword_trail.visible_frames = 3;
            sword_trail.per_frame_radius = true;
            sword_trail.tip_radius[6] = 0;
            sword_trail.base_radius[6] = 0;
            sword_trail.tip_radius[5] = -10;
            sword_trail.base_radius[5] = -15;
            sword_trail.tip_radius[4] = 9;
            sword_trail.base_radius[4] = 1;
            sword_trail.tip_radius[3] = 28;
            sword_trail.base_radius[3] = 9;
            sword_trail.tip_radius[2] = 14;
            sword_trail.base_radius[2] = 2;
            sword_trail.tip_radius[1] = 0;
            sword_trail.base_radius[1] = 0;
            sword_trail.tip_radius[0] = 10;
            sword_trail.base_radius[0] = 5;
            with(sword_trail) interpolate_sword_trail();
			sword_trail.color_blend = sword_color;
            sword_trail.index = 1;
            sword_trail.visible_frames = 0.33;
			break;
		case 23:
            //sword_trail.visible_frames += 1;
			sword_trail.index = 2;
			break;
		case 25:
            sword_trail.visible_frames = 2;
			sword_trail.index = 3;
			break;
        case 29: 
            sword_trail.index = 4;
            break;
        case 31:
            with (sword_trail) instance_destroy();
	}	

	// Animate sprite
	switch ( timer )
	{
		case 2: image_index = 1; break;
		case 6: image_index = 2; break;
		case 8: image_index = 3; break;
		case 10: image_index = 4; break;
		case 13: image_index = 5; break;
		case 16: image_index = 6; break;
		case 19: image_index = 7; break;
		case 23: image_index = 8; break;
		case 25: image_index = 9; break;
		case 29: image_index = 10; break;
		case 31: image_index = 11; break;
		case 33: image_index = 12; break;
		case 36: image_index = 13; break;
		case 41: image_index = 14; break;
		case 43: image_index = 15; break;
		case 45: image_index = 16; break;
		case 49: image_index = 16; break;
	}

    if ( timer = 2 )
	instance_create(x+size*(13-facing*26),y-19*size,obj_spark_effect);
    if ( timer = 8 )
      {
	sound_play(dsmash_voice);
	sound_play(swing_sound3);
	create_hitbox(15,40+facing*100,6,8,9,6,slash3,obj_spark_slash3,1.2,0.5,33,4,self.id,5,2);
	hitbox.hitstun = 2;
	hitbox.charge_dmg = 0.5;
	hitbox.charge_kb = 0
	hitbox.shake_type = 1;
	hitbox.shake_ampl = 0.75;
      }
    if ( timer = 25 )
      {
	sound_play(swing_sound4);
	create_hitbox(14,140-facing*100,6.5,8,12,6,slash3,obj_spark_slash3,1.2,0.5,-45,4,self.id,5,3);
	hitbox.hitstun = 4;
	hitbox.charge_dmg = 0.65;
	hitbox.charge_kb = 0.9;
	hitbox.shake_type = 1;
      }
  }


   if (timer >= 25){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 150)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   



if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }