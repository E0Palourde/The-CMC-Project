if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "fthrow";
image_speed = 0;
sprite_index = fthrow_sprite;
image_index=0;
timer = 0;
time = 43;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 47
}
if timer < time {
	 switch (timer)
	 {
		case 2: image_index=1; break;
		case 5: image_index=2; break;
		case 9: image_index=3; break;
		case 13: image_index=4; break;
		case 16: image_index=5; break;		
		case 19: image_index=6; break;
		case 22: image_index=7; break;
		case 24: image_index=8; break;
		case 26: image_index=9; break;
		case 34: image_index=10; break;
		case 37: image_index=11; break;
		case 40: image_index=12; break;
	 }
	 
	 if timer = 2 {
		target.x = x*size;
		target.y = y-5*size;}
		
	 if timer = 5 {
		target.x = (x-12)+(facing*24)*size;
		target.y = y-5*size;}
		
	if timer = 9 {
		target.x = (x-12)+(facing*24)*size;
		target.y = y-5*size;}
		
	if timer = 13 {		
		target.x = (x+12)-(facing*24)*size;
		target.y = y-5*size;
		hspeed = 3-facing*6; 
		sound_play(swingsnd3); 
		create_hitbox(6.25*neutralbcharge,10+facing*160,6,7.1*neutralbcharge,12,0.1,-1,obj_spark_hit2,1,1,12,5,self.id,4,3);}
		
	if timer = 22 {sound_play(thud_sound1);
				
					duster = instance_create(x+6*(1-facing*2),y,obj_dust_effect);
	
			duster.image_xscale *= 0.3*size;
			duster.image_yscale *= 0.3*size;
			duster2 = instance_create(x+6*(1-facing*2),y,obj_dust_effect);
	
			duster2.image_xscale *= -0.3*size;
			duster2.image_yscale *= 0.3*size;}
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none"
    state_type = "stand"
    timer = 0
    time =-1
    }
        
