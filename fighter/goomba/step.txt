if (ai = 1) and (state_type != "attack" and state_type != "air_attack" and sprite_index != entry_sprite) and !instance_exists(obj_training){
	
	if distance_to_object(enemy) < 50 and (enemy.state_type = "attack" or enemy.state_type = "air_attack") and shield_hp > 30 and air = 0 and enemy.facing != facing{
	shieldup = 1
	//state_type = "shielding"
	//attack_type = "none"
    }
	
	if shield_hp <= 30 and state_type = "shielding"
	state_type = "stand"
	
	if enemy <= -1{
		if target <= -1
		create_homing_bubble ( 300 ,300, 0 , 0 , self.id , 1 );
		else
		enemy = target
	}
	//char_ai();
	
}

if ai = 1 and (!instance_exists(obj_training) or (instance_exists(obj_training) and obj_training.ai_type = 5)){
	if state_type = "tumble"
	{
    if held_item = -1 {
    if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x){
    if enemy.y > y -2
    attack_type = choose("dair","dair","dair","nair","fair","nair","nair","fair","nair","downb","dair","downb","fair")
    else if enemy.y < y - 14
    attack_type = choose("uair","fair","uair","uair","uair","uair","uair","nair","fair","nair")
    else
    attack_type = choose("uair","fair","nair","nair","fair","uair","fair","nair","uair","dair","downb","uair","uair")
    }
    else
    attack_type = choose("uair","uair","nair","bair","bair","bair","uair","nair","bair","bair","bair","bair")
    }
    else
    attack_type = "itemfthrow" 
    exit
	}
}
if sprite_index = crouch_sprite and image_index >= 3 {
image_speed = 0 }

if sprite_index = crouch_sprite and image_index = 1 {sound_play(flat_sound2);}

if sprite_index = ukemi_sprite {image_speed = 1}

if attack_type = "edge_climb" {customedgeclimb = 1; sprite_index = edge_climb_sprite; image_speed = 0.23;}

if (state_type = "stand") || (state_type = "land") || (state_type = "edge") || (state_type = "down") || air < 1 || (state_type = "crouch") || (state_type = "grabbed") || (state_type = "fall") {flapcounter = 0; upbflinchtemp = 0}

if neutralbcharge = 2 {after_image(3,c_green,0.5)}

if neutralbtimer > 0 {neutralbtimer -= 1}

if state_type = "air_flinch" && upbflinchtemp = 1 && !instance_exists(wings) {
								wings = create_projectile(0,0,0,0,0,0,0,0,.8,.8,0,5,self.id,60,nothing);
								wings.hit=2;
								wings.parry_nodestroy = 1;
								wings.sprite_index = upb_wings_sprite;
								wings.image_speed = 0.3;
								wings.vspeed = -3;
								wings.depth = depth+1;
								wings.use_palette = number;
								upbflinchtemp = 0;
												}

if neutralbtimer <= 300 {neutralbcharge = 1;
    jump_speed = 6;
    mid_jump_speed = 6;
    short_hop_speed = 3;
    run_speed = 3.45;
	weight = 0.2;
    air_speed = 2.5;}
	
if (state_type == "run") {
	//Walking
	if (sprite_index != walk_sprite){
		image_speed = 0;
	}
	//Dash
	if (runtimer >= 0 and runtimer < 50){
		sprite_index = dash_sprite;
		switch (runtimer){
			case 1: image_index = 0; break;
			case 4: image_index = 1; break;
			case 7: image_index = 2; break;
			case 10: image_index = 3; break;
			case 13: image_index = 4; break;
			case 16: image_index = 5; break;
		}
	//Stop running during the initial dash
	} else if (runtimer >= 60 and runtimer < 90 and dash_end == 1) {
		sprite_index = brake_sprite;
		
	//Stop running (run brake)
	} else if (runtimer >= 60 and runtimer < 90 and dash_end == 0){
		sprite_index = brake_sprite;

		if (runtimer < 62){
			image_index = 0;
		} 
	 }
	//Turn While running
	 else if (runtimer >= -30 and runtimer <= -10) { 
		sprite_index = turn_sprite;
		switch (runtimer){
			case -30: image_index = 0; break;
		}
		if (runtimer >= -20){
			sprite_index = run_sprite;
			image_speed = 0.45;
		}
	} 
	//Run normally
	else if (runtimer >= 50 and runtimer < 60){
		sprite_index = run_sprite;
		image_speed = 0.45;
	} 
	
}


    
