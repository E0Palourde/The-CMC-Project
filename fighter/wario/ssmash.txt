if state_type = "run" || state_type = "stand" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "ssmash";
        image_speed = 0;
        sprite_index = ssmash_sprite;
        image_index = 0;
        timer = 0;
        time = 54;
        timer_speed = 1;
        charge_frame = 6
}
if timer < time {
	switch ( timer )
	{
	case 11: image_index = 1; break;
	case 13: image_index = 2; break;
	case 15: image_index = 3; break;
	case 17: image_index = 4; break;
	case 19: image_index = 5; break;
	case 21: image_index = 6; break;
	case 23: image_index = 7; break;
	case 25: image_index = 8; break;
	case 27: image_index = 9; break;
	case 29: image_index = 10; break;
	case 31: image_index = 11; break;
	case 33: image_index = 12; break;
	case 35: image_index = 13; break;
	case 37: image_index = 14; break;
	case 39: image_index = 15; break;
	case 41: image_index = 16; break;
	case 43: image_index = 17; break;
	case 45: image_index = 18; break;
	case 47: image_index = 19; break;
	case 49: image_index = 20; break;
	
	}
    if timer = 7
        sound_play(choose(ssmash_voice, ssmash_voice2));
    if timer = 8
        super_armor = 1
    if timer = 11 {
		temp = smash_charge * 0.032
        duster = instance_create(x-6+facing*12,y,obj_dust_effect)
        duster.facing = facing
        duster.image_alpha = 0.75
        sound_play(ssmash_sound);
        create_hitbox(17,20+facing*140,5.9,7.9,22,10,kick3,obj_spark_hit3,0.76,0.75,abs(place_x(28)),-place_y(21),self.id,35,2);
    }
    if timer = 15 {
        hitbox.damage = size*13
        hitbox.shield_damage = 16
        hitbox.bkb = size*5
        hitbox.kbg = size*5.9
        hitbox.hitlag_frames = round(size*8)
        super_armor = 0
        //hspeed = 0
    }
    if timer > 11 && timer <= 47{
        hspeed = 2+temp - (facing*((2+temp)*2))
	}
}

 if (timer >= 11){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 110) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 130)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }

if timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        
