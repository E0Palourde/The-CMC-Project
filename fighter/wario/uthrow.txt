if time = -1{
hspeed = 0;
state_type = "attack";
attack_type = "uthrow";
image_speed = 0;
sprite_index = uthrow_sprite;
image_index=0;
timer = 0;
time = 46;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 50
}
	switch ( timer )
	{
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 12: image_index = 4; break;
	case 15: image_index = 5; break;
	case 18: image_index = 6; break;
	case 21: image_index = 7; break;
	case 24: image_index = 8; break;
	case 27: image_index = 9; break;
	case 30: image_index = 10; break;
	case 33: image_index = 11; break;
	case 36: image_index = 12; break;
	case 39: image_index = 13; break;
	case 42: image_index = 14; break;
	}
	if ( timer <= 2 )
	{
	target.x = x + 7 * size * ( 1 - facing * 2 );
	target.y = y - 5 * size;
	}
    if ( timer = 3 || timer = 4 )
	{
	target.x = x + 4 * size * ( 1 - facing * 2 );
	target.y = y - 8 * size;
	}
    if ( timer >= 5 && timer <= 7 )
	{
	target.x = x + 1 * size * ( 1 - facing * 2 );
	target.y = y - 12 * size;
	}
    if ( timer >= 8 && timer <= 26 )
	{
	target.x = x - 4 * size * ( 1 - facing * 2 );
	target.y = y - 16 * size;
	}
     if timer = 27 {
        target.x = x - 4 * size * ( 1 - facing * 2 );
        target.y = y - 26 * size;
        sound_play(attack_sound2);
        create_hitbox(3,90,0.5,0,9,7,kick2,obj_spark_hit1,1.1,0.8,-2,42,self.id,1,5);
    }
    if timer = 28 {
	target.x = x - 4 * size * ( 1 - facing * 2 );
        target.y = y - 26 * size;
        play_attack_voice();
        create_throw_box(6,80+facing*20,5.9,2.1,1,1,-1,-1,1.1,0.8,-2,42,self.id,1);
	hitbox.hit_stun = 4;
    }
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
