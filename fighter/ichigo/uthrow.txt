if time = -1 {
hspeed = 0;
state_type = "air_attack";
attack_type = "uthrow";
image_speed = 0;
if bankai = 1
sprite_index = utilt_spriteB;
else
sprite_index = utilt_sprite;
if bankai = 1
image_speed = 0.15
image_index=0;
timer = 0;
time = 25;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 35
}
if bankai = 0 {
if timer < time {

  state_type = "attack";
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 9: image_index = 4; break;
	case 12: image_index = 5; break;
	case 16: image_index = 6; break;
    case 20: image_index = 7; break;

      }
	//Sword trail shit starts here
    switch (timer) {
		case 2: sword_trail = create_sword_trail(self.id, 6, 30, spread_texture); sword_trail.index = 1; sword_trail.depth = 1; break;
		case 3: sword_trail.end_decay = .2; break;
        case 4: sword_trail.index += 1; sword_trail.end_decay = 0.4; break;
		case 5: sword_trail.end_decay = .6; break;
    	case 6: sword_trail.index += 1; sword_trail.end_decay = 0.8; break;
		case 7: sword_trail.end_decay = 1; break;
		case 8: sword_trail.end_decay = 1.2; break;
    	case 9: sword_trail.index += 1; sword_trail.end_decay = 1.4; break;
		case 10: sword_trail.end_decay = 1.6; break;
		case 11: sword_trail.end_decay = 1.8; break;
    	case 12: sword_trail.index += 1; sword_trail.end_decay = 2; break;
		case 13: sword_trail.end_decay = 2.5; break;
		case 14: sword_trail.end_decay = 3; break;
        case 15:
            with(sword_trail) {
                instance_destroy();
            }
            break;
    } 
    //Sword trail shit ends here
	  
	
	if ( timer >= 0 && timer <= 3 )
	{
	target.x = x + 20 * size * (1-facing*2);
	target.y = y;
	}
	
    if timer = 4 {
        target.x = x +(10 - facing*20)*size;
        target.y = y-10*size;
        instance_create(x,y-19,obj_spark_effect); 
    }
	
    if timer = 6
	{
    target.x = x + 27*(1-facing*2)*size
    target.y = y -22*size
    play_attack_voice()
	sound_play(bleach_sword1);
	create_hitbox(4,70+facing*40,5.5,5,8,4,slash2,obj_spark_hit3,1.3,1.7,27,22,self.id,9,2);
        instance_create(x,y-19,obj_spark_effect);
    }
}
}

if bankai = 1 {

if timer < time {
	if ( timer >= 0 && timer <= 3 )
	{
	target.x = x + 20 * size * (1-facing*2);
	target.y = y;
	}
    if timer = 4 {
        target.x = x +(10 - facing*20)*size;
        target.y = y-10*size;
        play_attack_voice()
        instance_create(x,y-19,obj_spark_effect); 
    }
    if ( timer >= 5 && timer < 13 )
	{
    target.x = x + (10-timer*0.5)*(1-facing*2)*size
    target.y = y -(6+timer*1.25)*size
    }
	if ( timer >= 14 && timer <= 18 )
	{
	target.x = x + 5.5 * size * (1-facing*2);
	target.y = y - 5.25 * size;
	}
    if timer = 15 {

		sound_play(swingsnd2);
        create_hitbox(1,90+facing,1.1,0,4,1,slash3,obj_spark_hit4,0.9,0.9,0,22,self.id,1,5);
    }
    if timer = 18 {
        create_throw_box(4,105-facing*30,5.6,3.8,3,4,-1,-1,0.8,0.8,0,26,self.id,1);
    }
}}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        
