if state_type = "run" || state_type = "stand" || state_type = "jump" {
    attacking = 0
    attack_type = "smashb"
    if air = 0 {
        state_type = "air_attack";
        hspeed = 0;
	if !ktime
        sprite_index = sideb_sprite;
	else
        sprite_index = sideb_continuous_spriteS;
    }
    else {
        state_type = "air_attack";
        hspeed *= 0.4;
	if !ktime
        sprite_index = sideb_sprite;
	else
        sprite_index = sideb_continuous_spriteS;
        }
        image_speed = 0;
        image_index = 0;
        timer = 9;
        time = 80;
        timer_speed = 1;
	temp2 = 0
	temp3 = 0
}
switch (timer)
{
case 4: image_index = 1; break;
case 8: image_index = 2; break;
case 13: image_index = 1; break;
case 16: image_index = 2; break;
case 19: image_index = 1; break;
case 22: image_index = 2; break;
case 25: image_index = 1; break;
case 28: image_index = 2; break;
case 32: image_index = 1; break;
case 36: image_index = 2; break;
case 39: image_index = 3; break;
case 42: image_index = 4; break;
case 45: image_index = 5; break;
case 48: image_index = 6; break;
case 51: image_index = 7; break;
case 52: image_index = 8; break;
case 53: image_index = 9; break;
case 54: image_index = 10; break;
case 56: image_index = 42; break;
case 60: image_index = 43; break;
}

	if timer = 10 {
	if !ktime
	sprite_index = sideb_continuous_sprite
	else
	sprite_index = sideb_continuous_spriteS
	image_index = 2
	sound_play(b_ha_voice);
	sound_play(downb_sound);
        spark = instance_create(x,y,obj_spark)
        spark.snap = self.id
	if !kaioken
        spark.sprite_index = aura_sprite
	else
        spark.sprite_index = aura_spriteS
        spark.image_xscale = 0.7
        spark.image_yscale = 0.7
        spark.image_speed = 0.5
        spark.image_alpha = 0.75
        spark.depth = 0
	}
	if timer > 10 && timer < 63 {
	vspeed = 0
	hspeed = 0
	spark.x = x
	spark.y = y
	}
	if timer = 42
	{
            if kaioken = 1 {
		if air = 0 {
                duster = instance_create(x,y,obj_dust_effect);
                duster.facing = facing; }
                sound_play(sideb_sound2);
            }
            else {
                sound_play(sideb_sound);
                if air = 0 {
                    duster = instance_create(x,y,obj_dust_effect);
                    duster.facing = facing;
                    duster.image_xscale *= size*0.75
                    duster.image_yscale *= size*0.5
                } 
            }
            sound_play(attack_voice2);
            create_projectile(1+kaioken*2.3,30+facing*120,3+kaioken*1,1+kaioken*0.75,5 + kaioken*2,3+kaioken*1,punch3,obj_spark_hit2,(0.45-facing*0.9)+((0.2-facing*0.4)*kaioken),0.5+kaioken*0.2,28,26,self.id,80,char_custom3);
	    proj.hit_stun = 0;
		proj.priority = 1;
	    if temp3
		proj.temp = 1
	    else	
		proj.temp = 0
	}
	if timer = 40 || timer = 49 {
	sound_stop(attack_voice2)
	sound_stop(sideb_sound)
	sound_stop(sideb_sound2)
	}
	if timer = 51 {
	    temp2 += 1
            sound_play(attack_voice2);
            create_projectile(1+kaioken*2.2,30+facing*120,3+kaioken*1,1+kaioken*0.75,5 + kaioken*2,3+kaioken*1,punch3,obj_spark_hit2,(0.45-facing*0.9)+((0.2-facing*0.4)*kaioken),0.5+kaioken*0.2,28,26,self.id,80,char_custom3);
	    proj.hit_stun = 0;
		proj.priority = 2;
	    if temp3
		proj.temp = 1
	    else	
		proj.temp = 0
            if kaioken=1 {
                sound_play(sideb_sound2);
            }
            else {
                sound_play(sideb_sound);
            }
	}
	if timer = 55 && temp2 < 3
	timer = 37
	if timer = 60 {
	if instance_exists(spark) { with (spark) instance_destroy() }
	}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    if instance_exists(spark) { with (spark) instance_destroy() }
    attack_type = "none";
    if air = 0
    state_type = "stand";
    else
    state_type = "jump";
    timer = 0;
    time =-1;
    }