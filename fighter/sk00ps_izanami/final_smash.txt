if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding" {
	hspeed = 0;
	state_type = "air_attack";
	attack_type = "final_smash";
	image_speed = 0;
	sprite_index = final_smash_sprite;
	image_index=0;
	timer = 0;
	time = 150;
	timer_speed=1;
	intangible = 1;
	final_smashes+=1
	smash_power = 0
	air_move=0
	sound_play(super_snd);
	noring = 1;
	izanamisndtemp = choose(1,2);
	ZAWARUDOTOKIWOTOMARE  = instance_create(x,y,obj_freeze)
	ZAWARUDOTOKIWOTOMARE.dontpause = self.id
	ZAWARUDOTOKIWOTOMARE.alarm[0] = 40
	if (instance_exists(stand_ringa)) {with (stand_ringa){instance_destroy();}}
	if (instance_exists(stand_ringg)) {with (stand_ringg){instance_destroy();}}
	if (instance_exists(stand_ringc)) {with (stand_ringc){instance_destroy();}}
}
speed=0
gravity_lock = 1;

if ( timer < time ){
	switch ( timer )
    {
	case 6: image_index = 1; break;
	case 12: image_index = 2; break;
	case 18: image_index = 3; break;
	case 24: image_index = 4; break;
	case 30: image_index = 5; break;
	case 36: image_index = 6; break;
	case 42: image_index = 7; sound_play(blaze_snd2); break;
	case 45: image_index = 8	; break;
	case 48: image_index = 9	; sound_play(blaze_snd); break;
	case 51: image_index = 10	; sound_play(upb_snd2); break;
	case 53: image_index = 11	; break;
	case 55: image_index = 12	; break;
	case 57: image_index = 7	; break;
	case 59: image_index = 8	; break;
	case 61: image_index = 9	; break;
	case 63: image_index = 10	; break;
	case 65: image_index = 11	; break;
	case 67: image_index = 12	; break;
	case 69: image_index = 7	; break;
	case 71: image_index = 8	; break;
	case 73: image_index = 9	; break;
	case 75: image_index = 10	; break;
	case 77: image_index = 11	; break;
	case 79: image_index = 12	; break;
	case 81: image_index = 7	; break;
	case 83: image_index = 8	; break;
	case 85: image_index = 9	; break;
	case 87: image_index = 10	; break;
	case 89: image_index = 11	; break;
	case 91: image_index = 12	; break;
	case 93: image_index = 7	; break;
	case 97: image_index = 8	; break;
	case 101: image_index = 9	; break;
	case 105: image_index = 10	; break;
	case 109: image_index = 11	; break;
	case 113: image_index = 12	; break;
	case 117: image_index = 7	; break;
	case 121: image_index = 8	; break;
	case 125: image_index = 9	; break;
	case 129: image_index = 10	; break;
	case 133: image_index = 11	; break;
	case 137: image_index = 12	; break;
	case 141: image_index = 13	; break;
	case 144: image_index = 14; break;
	case 147: image_index = 15; break;
	
	case 152: image_index = 7; break;
	case 154: image_index = 8	; break;
	case 156: image_index = 9	; break;
	case 158: image_index = 10	; break;
	case 160: image_index = 11	; break;
	case 162: image_index = 12	; break;
	case 164: image_index = 7	; break;
	case 166: image_index = 8	; break;
	case 168: image_index = 9	; break;
	case 170: image_index = 10	; break;
	case 172: image_index = 11	; break;
	case 174: image_index = 12	; break;
	case 176: image_index = 7	; break;
	case 178: image_index = 8	; break;
	case 180: image_index = 9	; break;
	case 182: image_index = 10	; break;
	case 184: image_index = 11	; break;
	case 186: image_index = 12	; break;
	case 188: image_index = 7	; break;
	case 190: image_index = 8	; break;
	case 192: image_index = 9	; break;
	case 194: image_index = 10	; break;
	case 196: image_index = 11	; break;
	case 198: image_index = 12	; break;
	case 200: image_index = 7	; break;
	case 202: image_index = 8	; break;
	case 204: image_index = 9	; break;
	case 206: image_index = 10	; break;
	case 208: image_index = 11	; break;
	case 210: image_index = 12	; break;
	case 212: image_index = 7	; break;
	case 214: image_index = 8	; break;
	case 216: image_index = 9	; break;
	case 218: image_index = 10	; break;
	case 220: image_index = 11	; break;
	case 222: image_index = 12	; break;
	
	case 370: image_index = 16; sound_play(cfhit4_snd); break;
	case 376: image_index = 17; break;
	case 382: image_index = 18; break;
	case 388: image_index = 19; break;
	case 394: image_index = 20; break;
	case 400: image_index = 21; break;
	case 406: image_index = 22; break;
	case 412: image_index = 23; break;
	case 418: image_index = 24; break;
	
	case 670: image_index = 25; sound_play(izanami_snd9); break;
	case 676: image_index = 26; break;
	case 682: image_index = 27; break;
	case 684: sound_play(izanami_snd9); break;
	case 686: image_index = 28; break;
	case 690: image_index = 29; break;
	case 694: image_index = 27; break;
	case 698: image_index = 28; break;
	case 702: image_index = 29; break;
	case 706: image_index = 27; break;
	case 710: image_index = 28; break;
	case 714: image_index = 29; sound_play(izanami_snd9); break;
	case 718: image_index = 27; break;
	case 722: image_index = 28; sound_play(izanami_snd9); break;
	case 726: image_index = 29; break;
	case 730: image_index = 27; break;
	case 734: image_index = 28; sound_play(izanami_snd9); break;
	case 738: image_index = 29; break;
	case 742: image_index = 30; image_speed = 0.3; sound_play(izanami_snd4); break;
	
	case 890: sprite_index = win_sprite; image_index = 0; image_speed = 0; break;
	case 897: image_index = 1; break;
	case 914: image_index = 2; break;
	case 921: image_index = 3; break;
	case 928: image_index = 4; break;
	case 935: image_index = 5; break;
	case 942: image_index = 6; break;
	case 949: image_index = 7; break;
	case 956: image_index = 8; break;
	case 963: image_index = 9; break;
	case 970: image_index = 10; break;
	case 977: image_index = 11; break;
	case 984: image_index = 12; break;
    }
	if timer = 890 {
		if izanamisndtemp = 1 {
			sound_play(fs_winvoice1);
		}
		if izanamisndtemp = 2 {
			sound_play(fs_winvoice2);
		}
	}
	
	if timer = 6 {
		sound_play(downb2_snd);
		if izanamisndtemp = 1 {
			sound_play(fs_voice1);
		}
		if izanamisndtemp = 2 {
			sound_play(fs_voice2);
		}
	}
	if timer = 42 {
	fshitproj = create_projectile (3,90,3,0,-1,4,cfhit4,obj_spark_hit3,1,1,0,-10,self.id,3000,char_custom6);
	fshitproj.image_alpha = 0.6
	fshitproj.depth = -33;
	fshitproj.sprite_index = tornado_sprite;
	fshitproj.alarm[0] = 3000;
	}
	if timer >= 42 && timer <= 144 && fshitproj.hit = 1 {
	timer = 151;
	time = 1000; 
	visible = 0;
	target.visible = 0;
	spark = instance_create ( 0 , 0 , obj_camerazoom );
	spark.camera_boundary_zoom = 350;
	spark.alarm[0] = 700;
	spark.camera_l = x - 8;
	spark.camera_r = x + 8;
	spark.camera_u = y - 100 - actual_height;
	spark.camera_d = y + 4;
	ZAWARUDOTOKIWOTOMARE  = instance_create(x,y,obj_freeze)
	ZAWARUDOTOKIWOTOMARE.dontpause = self.id
	ZAWARUDOTOKIWOTOMARE.alarm[0] = 700
	
	player_dummy = instance_create(x,y,obj_spark);
	player_dummy.image_speed = 0;
	player_dummy.image_alpha = 1;
	player_dummy.depth = -32;
	player_dummy.image_yscale = ysize;
	player_dummy.image_xscale = xsize*(1-facing*2);
	player_dummy.alarm[0] = 99999
	player_dummy.number = number	
	
	enemy_dummy = instance_create(target.x,y,obj_spark);
	enemy_dummy.image_speed = 0;
	enemy_dummy.image_alpha = 1;
	enemy_dummy.depth = -31;
	enemy_dummy.image_yscale = target.ysize;
	enemy_dummy.image_xscale = target.xsize*(1-facing*2);
	enemy_dummy.alarm[0] = 99999
	enemy_dummy.number = target.number
	enemy_dummy.sprite_index = target.flinch_sprite;
	enemy_dummy.image_index = target.image_index;
	
	blackscreen = create_spark(0,0,self.id);
	blackscreen.depth = -25;
	blackscreen.image_alpha = 0;
	blackscreen.image_speed = 0;
	blackscreen.sprite_index = blackscreen_sprite;
	blackscreen.image_yscale = view_hview * 1000;
	blackscreen.image_xscale = view_hview * 1000;
	}
	if timer >= 151 && timer <= 161 {
	blackscreen.image_alpha += 0.1;
	}
	blackscreen.x = view_xview - 30;
	blackscreen.y = view_yview - 30;
	player_dummy.sprite_index = sprite_index;
	player_dummy.image_index = image_index;
	if timer >= 152 && timer <= 247 && timer mod 4 = 0 {
	screen_shake(3,3);
	}
	if timer >= 152 && timer <= 247 {
	enemy_dummy.vspeed = -7
	}
	if timer = 251 {
	fs_transition = create_spark ( 0 , -60 , fs_transition_sprite , 0 , 0.7*(1-facing*2)*size , 0.7*size );
	fs_transition.snap = self.id;
	fs_transition.depth = -100
	sound_play(timestop_snd);
	}
	if timer >= 251 && timer <= 263 && timer mod 3 = 0 {
	fs_transition.image_index += 1;
	}
	if timer = 266 {
		blackscreen.depth = -101
	}
	if timer = 276 {
	enemy_dummy.speed = 0;
	enemy_dummy.x = x;
	enemy_dummy.y = y;
	player_dummy.y = y+200;
	fshitproj.y = y+150;
	fshitproj.image_xscale = 2*(1-facing*2)*size;
	fshitproj.image_yscale = 2*size;
	sprite_index = jump_sprite;
	image_index = 0;
	spark.camera_l = x - 8;
	spark.camera_r = x + 8;
	spark.camera_u = y - 4 - actual_height;
	spark.camera_d = y + 4;
	spark.camera_boundary_zoom = 350;
	}
	if timer >= 344 && timer < 424 && fs_transition.image_index <= 13 && timer mod 3 = 0 {
	fs_transition.image_index += 1;
		blackscreen.depth = -25
	}
	if timer >= 344 && timer <= 360 {
		player_dummy.vspeed = -8;
		sprite_index = final_smash_sprite;
	}
	if timer = 370 {
		player_dummy.speed = 0;
		player_dummy.y = y-target.actual_height;
	}
	if timer = 424 {
		blackscreen.depth = -101
	}
	if timer = 430 {
	sound_play(izanami_snd3);
	fs_portrait = create_spark ( 0 , 0 , fs_portrait_sprite , 0 , 0.4*(1-facing*2)*size , 0.4*size );
	fs_portrait.snap = self.id;
	fs_portrait.depth = -104
	screen_shake(7,7);
	}
	if timer = 470 {
	fs_portraitblack = create_spark ( 0 , 0 , fs_portrait_sprite , 0 , 0.4*(1-facing*2)*size , 0.4*size );
	fs_portraitblack.snap = self.id;
	fs_portraitblack.depth = -105
	fs_portraitblack.image_alpha = 0;
	fs_portraitblack.image_blend = c_black;
	fs_portrait_eyes = create_spark ( 0 , 0 , fs_portrait_eyes_sprite , 0 , 0.4*(1-facing*2)*size , 0.4*size );
	fs_portrait_eyes.snap = self.id;
	fs_portrait_eyes.depth = -106
	fs_portrait_eyes.image_alpha = 0;
		if izanamisndtemp = 1 {
			sound_play(fs_voice3);
		}
		if izanamisndtemp = 2 {
			sound_play(fs_voice4);
		}
	}
	if timer >= 470 && timer <= 477 {
	fs_portraitblack.image_alpha += 0.1;
	}
	if timer >= 470 && timer <= 480 {
	fs_portrait_eyes.image_alpha += 0.1;
	}
	if timer = 474 {
	sound_play(blood_snd);
	sound_play(upb_snd3);
	fs_bg = create_spark ( -20 , -100 , fs_bg1_sprite , 0 , 0.7*(1-facing*2)*size , 0.7*size );
	fs_bg.depth = -103;
	}
	if timer >= 474 && timer mod 4 = 0 && fs_bg.image_index < 7 {
		fs_bg.image_index += 1
	}
	if timer >= 630 {
	fs_portrait.image_xscale += 0.1*(1-facing*2);
	fs_portrait.image_yscale += 0.1;
	fs_portrait.image_blend = c_black;
	fs_portraitblack.image_xscale += 0.1*(1-facing*2);
	fs_portraitblack.image_yscale += 0.1;
	fs_portrait_eyes.image_xscale += 0.1*(1-facing*2);
	fs_portrait_eyes.image_yscale += 0.1;
	}
	if timer = 640 {
	spark.camera_boundary_zoom = 250;
	}
	if timer = 670 {
	if (instance_exists(fs_portrait)) {with (fs_portrait){instance_destroy();}}
	if (instance_exists(fs_portraitblack)) {with (fs_portraitblack){instance_destroy();}}
	if (instance_exists(fs_portrait_eyes)) {with (fs_portrait_eyes){instance_destroy();}}
	if (instance_exists(fs_bg)) {with (fs_bg){instance_destroy();}}
	blackscreen.depth = -25
	}
	if timer >= 742 && timer < 860 && image_index >= 32 {
	image_index = 30;
	screen_shake(3,3);
	}
	if timer = 742 {
	sound_play(cf_quake);
	sound_play(cf_explode3);
	}
	if timer >= 742 {
	player_dummy.vspeed = -0.3
	enemy_dummy.vspeed = -0.3
	}
	if timer >= 742 && timer <= 860 && timer mod 24 = 0 {
	sound_play(cf_quake);
	}
	if timer = 802 {
	sound_play(cf_quake);
	}
	if timer >= 820 && timer < 827 {
	player_dummy.vspeed = 10
	enemy_dummy.vspeed = 10
	}
	if timer = 827 {
	player_dummy.vspeed = 0
	enemy_dummy.vspeed = 0
	sound_play(cf_explode);
	sound_play(cf_quake);
	player_dummy.image_alpha = 0;
	enemy_dummy.image_alpha = 0;
	}
	if timer = 860 {
	fs_cutscene = create_spark ( 0 , -100 , fs_cutscene_sprite , 0.7 , 0.5*(1-facing*2)*size , 0.5*size );
	fs_cutscene.depth = -26;
	}
	if timer = 890 {
	visible = 1;
	sound_play(cfcounterhit);
	fsproj2 = create_projectile(15,angle_correct(40),8,8,-1,60,-1,obj_spark_hit4,1 , 1, 40 , 5 ,self.id,2,no_script);
	if (instance_exists(player_dummy)) {with (player_dummy){instance_destroy();}}
	if (instance_exists(blackscreen)) {with (blackscreen){instance_destroy();}}
	if (instance_exists(enemy_dummy)) {with (enemy_dummy){instance_destroy();}}
	if (instance_exists(fs_transition)) {with (fs_transition){instance_destroy();}}
	if (instance_exists(spark)) {with (spark){instance_destroy();}}
	if (instance_exists(fs_cutscene)) {with (fs_cutscene){instance_destroy();}}
	if (instance_exists(fs_portrait)) {with (fs_portrait){instance_destroy();}}
	if (instance_exists(fs_portraitblack)) {with (fs_portraitblack){instance_destroy();}}
	if (instance_exists(fs_portrait_eyes)) {with (fs_portrait_eyes){instance_destroy();}}
	if (instance_exists(fs_bg)) {with (fs_bg){instance_destroy();}}
	}
}

	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    smash_power = 0
    attack_type = "none";
    intangible = 0;
    if air > 0
    state_type = "jump";
    else
    state_type = "stand";
    timer = 0;
    time =-1;
	noring = 0;
	if (instance_exists(player_dummy)) {with (player_dummy){instance_destroy();}}
	if (instance_exists(blackscreen)) {with (blackscreen){instance_destroy();}}
	if (instance_exists(enemy_dummy)) {with (enemy_dummy){instance_destroy();}}
	if (instance_exists(fs_transition)) {with (fs_transition){instance_destroy();}}
    }