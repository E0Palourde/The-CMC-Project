fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" && sidebtemp = 0  {
        state_type = "air_attack"
        attack_type = "sideb"
        image_speed = 0
        sprite_index = sideb_sprite
        image_index=0
        timer = 0
        time = 44
		hspeed = 0;
		air_move = 0;
		sideblow = 0;
	special = 1;
    }
vspeed = 0;
gravity = 0;
gravity_lock = 1;
if ( timer < time )
  {
	switch (timer)
	{
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 7: image_index = 3; break;
	case 10: image_index = 4; break;
	case 13: image_index = 3; break;
	case 16: image_index = 5; break;
	case 18: image_index = 6; break;
	case 20: image_index = 7; break;
	case 22: image_index = 8; break;
	case 24: image_index = 9; break;
	case 28: image_index = 10; break;
	case 30: image_index = 11; break;
	case 32: image_index = 12; break;
	case 34: image_index = 13; break;
	case 36: image_index = 14; break;
	case 38: image_index = 15; break;
	case 40: image_index = 16; break;
	case 42: image_index = 17; break;
	
	case 106: image_index = 19; break;
	case 109: image_index = 20; break;
	case 112: image_index = 19; break;
	case 115: image_index = 20; break;
	case 118: image_index = 19; break;
	case 121: image_index = 20; break;
	case 124: image_index = 19; break;
	case 127: image_index = 20; break;
	case 130: image_index = 21; break;
	case 132: image_index = 22; break;
	case 134: image_index = 23; break;
	case 136: image_index = 24; break;
	case 138: image_index = 25; break;
	case 140: image_index = 26; break;
	case 142: image_index = 27; break;
	case 144: image_index = 28; break;
	}
	if timer < 5 {
	image_alpha -= 0.2;
	}
	if timer > 12 {
	image_alpha += 0.2;
	}
	sidebfx4.image_alpha = image_alpha;
	if timer = 7 {
	if izanamitimestoptemp = 0 {
	create_hitbox(0.1,361,1,0,0.1,1,-1,-1,0.83 , 0.83 , 5.91 , 15.08,self.id,17,5);
	}
	sidebfx3 = create_spark ( 0 , 20 , sidebfx3_sprite , 0.3 , 0.29*(1-facing*2)*size , 0.29*size );
	sound_play(izanami_snd2); 
	if movedown != 1{
	sound_play(choose(sideb_voice1,sideb_voice2));
	}
	if movedown = 1 {
	sideblow = 1;
	sound_play(choose(sideb2_voice1,sideb2_voice2));
	}		
	}
	sideb2proj.x = x+5.91*(1-facing*2)*size;
	sideb2proj.y = y-15.08*size;
	if timer > 12 {
	image_alpha += 0.2;
	}
	if timer = 12 && sideblow = 1 {
	timer = 100;
	time = 146;
	image_index = 18;
	}
	sidebfx3.image_alpha -= 0.1;
	sidebfx3.image_xscale += 0.025*(1-facing*2);;
	sidebfx3.image_yscale += 0.025;
	if timer < 15  {
	speed += 0.5*(1-facing*2);
	direction = 0*(1-facing*2);
	}
	if timer >= 16 && timer < 100 {
	speed *= 0.75;
	}
	if timer < 24 && (hitbox.hit = 1 || (izanamitimestoptemp = 1 && sideb2proj.hit = 1)) {
		x = enemy.x-15*(1-facing*2);
		
	}
	if timer = 24 {
	sidebfx1 = create_spark ( 22 , 22 , sidebfx1_sprite , 0.5 , 0.29*(1-facing*2)*size , 0.29*size );
	sidebfx1.depth = -1;
	speed = 0;
	screen_shake(3,3);
	sound_play(cfswing7);
	if izanamitimestoptemp = 0 {
	create_hitbox(12,angle_correct(15),8,4,5,10,cfhit4,obj_spark_hit4,0.60 , 0.83 , 22.91 , 15.08,self.id,4,2);
	hitbox.execute_on_hit = "sidebfx2 = instance_create ( x , y-5 , obj_spark ); sidebfx2.sprite_index = attacker.sidebfx2_sprite; sidebfx2.image_xscale = (0.29*attacker.size)*(1-attacker.facing*2); sidebfx2.image_yscale = (0.29*attacker.size); sidebfx2.image_speed = 0.5; sidebfx2.image_alpha = 0.8;"
	}
	if izanamitimestoptemp = 1 {
	sideb1proj = create_projectile(12,361,1,0,5,10,cfhit4,obj_spark_hit4,0.60 , 0.83 , 22.91 , 15.08,self.id,4,no_script);
	sideb1proj.execute_on_hit = "sidebfx2 = instance_create ( x , y-5 , obj_spark ); sidebfx2.sprite_index = attacker.sidebfx2_sprite; sidebfx2.image_xscale = (0.29*attacker.size)*(1-attacker.facing*2); sidebfx2.image_yscale = (0.29*attacker.size); sidebfx2.image_speed = 0.5; sidebfx2.image_alpha = 0.8;"
	}
	duster = instance_create(x,y,obj_dust_effect);
	duster.facing = facing;
	duster.depth = 1;
	}
	sidebfx2.x = x+22.91*(1-facing*2)*size
	sidebfx2.y = y-34.62 *size
	if timer = 109 {
	sidebfx4_1 = create_spark ( 15 , 5 , sidebfx4_sprite , 0.7 , 0.29*(1-facing*2)*size , 0.29*size );
	sidebfx4_1.depth = -1;
	sidebfx4_1.loop = 999;
	sidebfx4_1.alarm[0] = 21;
	sidebfx4_1.snap = self.id;
	sidebfx4_2 = create_spark ( 25 , -3 , sidebfx4_sprite , 0.7 , 0.29*(1-facing*2)*size , 0.29*size );
	sidebfx4_2.depth = depth - 0.1;
	sidebfx4_2.loop = 999;
	sidebfx4_2.alarm[0] = 21;
	sidebfx4_2.snap = self.id;
	sound_play(dthrow_snd);
	create_hitbox(15,angle_correct(35),6,5,70,6,cfhit4,obj_spark_hit4,0.82 , 0.36 , 17.11 , 2.61,self.id,21,2);
	}
	if timer >= 100 && timer < 130 {
	speed = 5*(1-facing*2);
	direction = 0*(1-facing*2);
	}
	if timer >= 130 {
	speed *= 0.75;
	}
	
  }


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
	sidebtemp = 1;
	if (instance_exists(izanamiplatformS)) {with (izanamiplatformS){instance_destroy();}}
}