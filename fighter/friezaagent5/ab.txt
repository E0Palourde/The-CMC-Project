// This is the script for Mach Rider's taunt action.
if (state_type = "stand" || state_type = "crouch" || state_type = "run" || state_type = "jump") && ((charge= 280 && ktimer=0) || (charge > 0 && charge < 260 && ktimer > 1)) {
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "ab";
        image_speed = 0;
        if ktimer = 0{
        sprite_index = transformation_sprite;
        timer = 0;
        time = 84;
        ktimer=1;
        }
        else{
        sprite_index = untransformation_sprite;
        timer = 100;
        time = 170;
        ktimer=0;}
        image_index=0;
        timer_speed=1;
        sound_play(taunt_sound);
        intangible=1;
        air_move=0;
}
switch ( timer )
      {
    case 1: image_index = 0; break;
    case 35: image_index = 1; break;
    case 39: image_index = 2; break;
    case 43: image_index = 3; break;
    case 47: image_index = 4; break;
    case 51: image_index = 5; break;
    case 100: image_index = 0; break;
    case 118: image_index = 1; break;
    case 126: image_index = 2; break;
    case 134: image_index = 3; break;
    case 165: image_index = 4; break;
      }
    if timer < time {
    vspeed=0;
    hspeed=0;
    gravity_lock=1;

    if timer = 35{
    dangitaurawork = instance_create(x+size, y + size, obj_spark);
    dangitaurawork.sprite_index = transformation_effect_sprite;
    dangitaurawork.image_xscale = 0.01*( 1 - facing * 2 )*size;
    dangitaurawork.image_yscale = size*0.01;
    dangitaurawork.image_speed=0;
    dangitaurawork.alarm[0]=49;
    dangitaurawork.image_alpha=0;
    dangitaurawork.depth=depth+1;
    ktime = 2100
    }
    if timer = 0{
    duster = instance_create ( 0 , 0 , obj_freeze );
    duster.dontpause = self.id;
    duster.alarm[0] = 84;
    camerazoomstuff = instance_create ( 0 , 0 , obj_camerazoom );
    camerazoomstuff.camera_l = x - 8;
    camerazoomstuff.camera_r = x + 8;
    camerazoomstuff.camera_u = y - 4 - actual_height;
    camerazoomstuff.camera_d = y + 4;
    camerazoomstuff.camera_boundary_zoom = 80;
    camerazoomstuff.alarm[0] = 84;
    }
    if timer = 100{
    duster = instance_create ( 0 , 0 , obj_freeze );
    duster.dontpause = self.id;
    duster.alarm[0] = 70;
    camerazoomstuff = instance_create ( 0 , 0 , obj_camerazoom );
    camerazoomstuff.camera_l = x - 8;
    camerazoomstuff.camera_r = x + 8;
    camerazoomstuff.camera_u = y - 4 - actual_height;
    camerazoomstuff.camera_d = y + 4;
    camerazoomstuff.camera_boundary_zoom = 80;
    camerazoomstuff.alarm[0] = 70;
    }
    if timer < 56{
    dangitaurawork.image_alpha += 0.1;
    dangitaurawork.image_xscale += 0.01*( 1 - facing * 2 )*size;
    dangitaurawork.image_yscale +=0.01*size;}
    if timer mod 4 = 0{
    if dangitaurawork.image_index=1{
    dangitaurawork.image_index=0;
    }
    else {
    dangitaurawork.image_index=1;
    }
    }
}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    intangible=0;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
