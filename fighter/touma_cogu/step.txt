has_abs = 1 
imagine_breaker = 1

if global.gs_palette[number-1] = 7 or global.gs_palette[number-1] = 8 or global.gs_palette[number-1] = 9 {
imaginebreaker.image_blend = make_color_rgb(255,0,0);
}

if global.gs_palette[number-1] = 3 or global.gs_palette[number-1] = 6 {
imaginebreaker.image_blend = make_color_rgb(0,0,255);
}

if againstaccelerator = 1 {
	target.super_armor = 0
}

if air = 0 {
	sidebtemp = 0
}

if sprite_index == stand_sprite {
	image_speed = 0.1
}

if sprite_index = walk_sprite {
	image_speed = 0.2
}

if sprite_index = hold_sprite {
	image_index = 2
	image_speed = 0
}

///////////////////////////////////Crouch thing for crouching and getting up from crouch visually
if ( state_type = "crouch" ){
    
    sprite_index = crouch_sprite;
    image_speed = 0;
    crouchgetuptimer = min(6,timer) //replace the 12 by the number the last case you add below has
    switch (timer){
        case 0: image_index = 0; break;
        case 3: image_index = 1; break;
        case 6: image_index = 2; break;
		//put as many cases as frames your crouch animation has
    }
}

if ( state_type = "stand" && crouchgetuptimer > 0 ){
    image_speed = 0;
    crouchgetuptimer -= 1;
    sprite_index = crouch_sprite;
    crouchtemp = 1;
}

if ( state_type = "stand" && crouchgetuptimer = 0 && crouchtemp = 1 ){
    sprite_index = stand_sprite;
    image_index = 0;
    crouchtemp = 0;
}

if ( state_type = "stand" && crouchgetuptimer >= 1 and crouchgetuptimer <= 2 ){
    image_index = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 3 ){
    image_index = 1;
}

if ( state_type = "stand" && crouchgetuptimer >= 6 ){
    image_index = 2;
}


if ( state_type != "stand" && state_type != "crouch" && crouchgetuptimer > 0 ){
    crouchgetuptimer = 0;
    crouchtemp = 0;
}
///////////////////////////////////////End of Crouch thing for crouching and getting up from crouch visually
							
if ( state_type = "jump" && sprite_index == jump_sprite )
{
  if ( timer = 0 )
    image_index = 0; //start out the jump from the jump sprite's very first frame instead of any later ones
  if ( vspeed < 0 && image_index >= 7 )
    image_index = 7; //stay in that first frame as long as you're going up (you can change the image index in the condition to a later one to loop back)
  if ( vspeed >= 0 && image_index < 1 )
    image_index = 8; //the moment you start falling, continue the animation
  if ( image_index >= 9 )
    image_index = 8; //remove the comment thing if you want to loop the jump animation back to a previous frame when falling*/
}

if (!instance_exists(MeterHud)){
    hud_x = obj_game_control.hud_x[other.number-1];
    hud_y = window_h-128+lengthdir_y(obj_game_control.hudp_shake[i]*0.8,obj_game_control.hudp_shake[i]*60);    
    MeterHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    MeterHud.step_script = hudThing_step_script;
    MeterHud.draw_script = hudThing_draw_script;
    MeterHud.owner = self.id;
    MeterHud.keepmain = self.keepmain;
	MeterHud.sprite_index = meter_sprite;
    MeterHud.image_index = meter;
}


if (!instance_exists(CircleHud)){
    hud_x = obj_game_control.hud_x[other.number-1];
    hud_y = window_h-128+lengthdir_y(obj_game_control.hudp_shake[i]*0.8,obj_game_control.hudp_shake[i]*60);    
    CircleHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    CircleHud.step_script = hudThing_step_script;
    CircleHud.draw_script = hudThing_draw_script;
    CircleHud.owner = self.id;
    CircleHud.keepmain = self.keepmain;
	CircleHud.sprite_index = circle_sprite;
}

if laststand = 1
CircleHud.sprite_index = circle_sprite;
else
CircleHud.sprite_index = -1;
CircleHud.image_speed = 0.23;

if laststand = 1 {
	aaa = after_image ( 3 , c_purple , 0.5 );
 aaa.image_xscale *= 1.15;
 aaa.image_yscale *= 1.15;
 aaa.x += -1 + floor ( random ( 3 ) );
 aaa.y += -1 + floor ( random ( 3 ) );
}

if laststand = 1 and meter = 0 {
laststand = 0
}

if laststand = 1 and meter > 0 {
	meter -= 0.02333333333
}

MeterHud.image_index = meter;
if(MeterHud.image_index <= 0) {MeterHud.image_index = 0}
MeterHud.image_speed = 0;



if(MeterHud.image_index <= 0) {MeterHud.image_index = 0}
MeterHud.image_speed = 0;



if meter >= 55
meter = 55

if meter <= 0{
meter = 0
}