if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding" {
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0;
        sprite_index = final_smash_sprite;
        image_index=0;
        timer = 1;
        time = 230;
        timer_speed=1;
		intangible = 0
        final_smashes+=1
        smash_power = 0
        air_move=0
		countered = 0
		laughloop = 0
		moreloops = 0
		evenmoreloops = 0
		shaketimer = 0

}
speed=0
gravity_lock = 1;
if ( timer < time ){

switch ( timer )
    {
	case 0: image_index = 0; break;
	case 5: image_index = 1; break;
	case 11: image_index = 2; break;
	case 17: image_index = 3; break;
	case 23: image_index = 4; break;
	case 29: image_index = 5; break;
	case 35: image_index = 6; break;
	case 41: image_index = 7; break;
	case 47: image_index = 8; break;
	case 55: image_index = 9; break;
	case 63: image_index = 10; break;
	case 71: image_index = 11; break;
	case 79: image_index = 12; break;
	case 87: image_index = 13; break;
	case 95: image_index = 14; break;
	case 103: image_index = 15; break;
	case 115: image_index = 16; break;
	case 130: image_index = 17; break;
	case 148: image_index = 18; break;
	case 151: image_index = 19; break;
	case 153: image_index = 20; break;
	case 155: image_index = 21; break;
	case 161: image_index = 22; break;
	case 211: image_index = 23; break;
	case 217: image_index = 24; break;
	case 221: image_index = 25; break;
	
	case 300: image_index = 0; break;
	case 615: image_index = 1; break;
	case 635: image_index = 2; break;
	case 665: image_index = 3; break;
	case 670: image_index = 4; break;
	case 675: image_index = 5; break;
	
	case 400: glass.image_index = 0; break;
	case 402: glass.image_index = 1; break;
	case 594: glass.image_index = 2; break;
	case 596: glass.image_index = 3; break;
	case 598: glass.image_index = 4; break;
	case 600: glass.image_index = 5; break;
	case 602: glass.image_index = 6; break;
	case 604: glass.image_index = 7; break;
	case 606: glass.image_index = 8; break;
	case 608: glass.image_index = 9; break;
	case 610: glass.image_index = 10; break;
	case 612: glass.image_index = 11; break;
	case 614: glass.image_index = 12; break;
	
	
	case 1000: image_index = 0; break;
	case 1003: image_index = 1; break;
	case 1006: image_index = 2; break;
	case 1009: image_index = 3; break;
	case 1012: image_index = 4; break;
	
	case 1260: image_index = 0; break;
	case 1265: image_index = 1; break;
	case 1268: image_index = 2; break;
	case 1271: image_index = 3; break;
	case 1275: image_index = 4; break;
	case 1283: image_index = 5; break;
	case 1291: image_index = 6; break;
	case 1294: image_index = 7; break;
	case 1298: image_index = 8; break;
	
	case 2000: image_index = 0; break;
	case 2005: image_index = 1; break;
	case 2009: image_index = 2; break;
	case 2013: image_index = 3; break;
	case 2017: image_index = 4; break;
	case 2021: image_index = 5; break;
	case 2025: image_index = 6; break;
	case 2075: image_index = 7; break;
	
	case 3030: image_index = 0; break;
	case 3110: image_index = 1; break;
	case 3150: image_index = 2; break;
	case 3154: image_index = 3; break;
	
	case 3158: image_index = 0; break;
	case 3165: image_index = 1; break;
	case 3172: image_index = 0; break;
	case 3179: image_index = 1; break;
	case 3186: image_index = 0; break;
	case 3193: image_index = 1; break;
	case 3200: image_index = 0; break;
	case 3207: image_index = 1; break;
	case 3214: image_index = 0; break;
	case 3221: image_index = 1; break;
	case 3228: image_index = 0; break;
	case 3235: image_index = 1; break;
	
	case 3245: image_index = 0; break;
	case 3249: image_index = 1; break;
	case 3252: image_index = 2; break;
	case 3255: image_index = 3; break;
	case 3258: image_index = 4; break;
	case 3261: image_index = 1; break;
	case 3264: image_index = 2; break;
	case 3267: image_index = 3; break;
	case 3270: image_index = 4; break;
	case 3273: image_index = 1; break;
	case 3276: image_index = 2; break;
	case 3279: image_index = 3; break;
	case 3282: image_index = 4; break;
	case 3285: image_index = 1; break;
	case 3288: image_index = 2; break;
	case 3291: image_index = 3; break;
	case 3294: image_index = 4; break;
	case 3297: image_index = 1; break;
	case 3300: image_index = 2; break;
	case 3303: image_index = 3; break;
	case 3306: image_index = 4; break;
	
	case 3309: image_index = 0; break;
	case 3313: image_index = 1; break;
	case 3323: image_index = 2; break;
	case 3326: image_index = 3; break;
	case 3329: image_index = 4; break;
	case 3332: image_index = 5; break;
	case 3362: image_index = 6; break;
	case 3367: image_index = 7; break;
	case 3371: image_index = 8; break;
	case 3376: image_index = 9; break;
	case 3381: image_index = 10; break;
	case 3385: image_index = 11; break;
	case 3389: image_index = 12; break;
	case 3393: image_index = 13; break;
	
	case 3430: image_index = 0; break;
	case 3434: image_index = 1; break;
	case 3438: image_index = 2; break;
	case 3442: image_index = 3; break;
	case 3446: image_index = 0; break;
	case 3450: image_index = 1; break;
	case 3454: image_index = 2; break;
	case 3458: image_index = 3; break;
	case 3462: image_index = 0; break;
	case 3466: image_index = 1; break;
	case 3470: image_index = 2; break;
	case 3474: image_index = 3; break;
	case 3478: image_index = 0; break;
	case 3482: image_index = 1; break;
	case 3486: image_index = 2; break;
	case 3490: image_index = 3; break;
	case 3494: image_index = 0; break;
	case 3498: image_index = 1; break;
	case 3502: image_index = 2; break;
	case 3506: image_index = 3; break;
	
	case 3510: image_index = 0; break;
	case 3514: image_index = 1; break;
	case 3518: image_index = 2; break;
	case 3512: image_index = 3; break;
	case 3516: image_index = 4; break;
	case 3520: image_index = 5; break;
    }
	
	if percent < 80 {
		
	
	
	
	if timer = 2 {
		freezer = instance_create(x,y,obj_freeze);
  freezer.alarm[0] = 148;
  freezer.dontpause = self.id;
		sound_play(fs_voice);
	}
	
	if timer = 151 {
		create_hitbox ( 11 , 90 , 0 , 0 , -1 , 1 , ibsound , obj_spark_hit4 , 0.9 , 0.79 , 20.12 , 12.96 , self.id , 5 , 2 );
		sound_play(swingsnd2);
		hitbox.di = 0
	}
	
	if attack_success = 1 and timer >= 151 and timer < 300 {
		timer = 300
		time = 680
		sprite_index = final_smash_sprite2
		image_index = 0
		sound_play(imaginebreaker_sound);
		screen_shake(6,9);
		
		imaginebreaker = create_blur(x - 28 * (1-facing*2),y - 91,self.id);
    imaginebreaker.sprite_index = finalsmasheffect_sprite;
    imaginebreaker.anim_speed = 0.7;
    imaginebreaker.image_alpha = 1;
    imaginebreaker.image_xscale = 0.7 * (1-facing*2);
    imaginebreaker.image_yscale = 0.7;
    imaginebreaker.depth = depth - 0.1;
    imaginebreaker.snap = self.id
	imaginebreaker.image_blend = make_color_rgb(151,0,217);
	
	zoom = instance_create ( 0 , 0 , obj_camerazoom );
  zoom.camera_l = x - 8;
  zoom.camera_r = x + 8;
  zoom.camera_u = y - 4 - actual_height;
  zoom.camera_d = y + 4;
  zoom.camera_boundary_zoom = 120;
  zoom.alarm[0] = 294;
  
  freezer = instance_create(x,y,obj_freeze);
  freezer.alarm[0] = 294;
  freezer.dontpause = self.id;
  
  target1 = target
  
	}
	
	if timer >= 300 and timer < 595 {
		target1.sprite_index=target1.flinch_sprite
target1.state_type = "flinch"
target1.depth = -17;
target1.speed = 0;
target1.gravity_lock = 0;
target1.ignore_physics = 1;
target1.y = y * size;
	}
	
	if timer = 330 {
		sound_play(fs_voice2);
	}
	
	if timer = 400 {
		  glass = create_blur(x - 110 * (1-facing*2),y - 130,self.id);
    glass.sprite_index = glass_sprite;
    glass.anim_speed = 0;
    glass.image_alpha = 1;
    glass.image_xscale = 0.7 * (1-facing*2);
    glass.image_yscale = 0.7;
    glass.depth = depth - 20;
    glass.snap = self.id
	glass.image_blend = make_color_rgb(151,0,217);
	  }
		
	if timer = 402 {
		sound_play(glass_break_sound);
	}
	
	if timer = 594 {
		sound_play(glass_shatter_sound);
	}
	
	if timer = 595 {
	create_hitbox ( 30 , angle_correct(30) , 9 , 7 , -1 , 30 , ibsound , obj_spark_hit4 , 0.9 , 0.79 , 20.12 , 12.96 , self.id , 5 , 2 );
	sound_play(imaginebreaker_sound);
	sound_play(imaginebreaker_sound);
	imaginebreaker = create_blur(x - 100 * (1-facing*2),y - 142,self.id);
    imaginebreaker.sprite_index = finalsmasheffect_sprite2;
    imaginebreaker.anim_speed = 0.7;
    imaginebreaker.image_alpha = 1;
    imaginebreaker.image_xscale = 0.7 * (1-facing*2);
    imaginebreaker.image_yscale = 0.7;
    imaginebreaker.depth = depth - 0.1;
    imaginebreaker.snap = self.id
	imaginebreaker.image_blend = make_color_rgb(151,0,217);
	screen_shake(9,10);
	}
	
	////////// FINAL SMASH 2 //////////
	
	if timer = 329 and laststand = 1 {
		timer = 1000
		time = 1360
		sound_play(cool_sound);
		sound_play(epic_sound);
		sound_play(fsEX_voice);
		sprite_index = final_smashEX_sprite
		image_index = 0
		zoom.alarm[0] = 300
		freezer.alarm[0] = 273
	}
	
	if timer >= 1000 and timer < 1291 {
		target1.sprite_index=target1.flinch_sprite
target1.state_type = "flinch"
target1.depth = -17;
target1.speed = 0;
target1.gravity_lock = 0;
target1.ignore_physics = 1;
target1.y = y * size;
	}
	
	if timer >= 1012 and timer < 1500 and timer mod 10 = 0 {
		effect_create_above(ef_ring,x + 1,y - 20,1.5,c_purple)
	}
	
	if timer >= 1012 and timer < 1500 and timer mod 20 = 0 {
		screen_shake(5,-7);
	}
	
	if timer = 1009 {
		imaginebreaker = create_blur(x - 17 * (1-facing*2),y - 43,self.id);
    imaginebreaker.sprite_index = ibaura_sprite;
    imaginebreaker.anim_speed = 0.4;
    imaginebreaker.image_alpha = 0.9;
    imaginebreaker.image_xscale = 0.5 * (1-facing*2);
    imaginebreaker.image_yscale = 0.5;
    imaginebreaker.depth = depth - 0.1;
    imaginebreaker.snap = self.id
	imaginebreaker.loop = 9999
	imaginebreaker.alarm[0] = 251
	imaginebreaker.image_blend = make_color_rgb(151,0,217);
	}
	
	
	
	if timer = 1200 {
sound_play(fsEX_voice2);
	}
	
	if timer = 1260 {
		sprite_index = final_smashEX_sprite2
		image_index = 0
	}
	
	if timer = 1275 {
		create_hitbox ( 11 , 90 , 0 , 0 , -1 , 6 , ibsound , obj_spark_hit4 , 0.9 , 0.79 , 20.12 , 12.96 , self.id , 5 , 2 );
        imaginebreaker = create_blur(x - 100 * (1-facing*2),y - 142,self.id);
    imaginebreaker.sprite_index = finalsmasheffect_sprite2;
    imaginebreaker.anim_speed = 0.7;
    imaginebreaker.image_alpha = 1;
    imaginebreaker.image_xscale = 0.7 * (1-facing*2);
    imaginebreaker.image_yscale = 0.7;
    imaginebreaker.depth = depth - 0.1;
    imaginebreaker.snap = self.id
	imaginebreaker.image_blend = make_color_rgb(151,0,217);
	screen_shake(9,10);
	sound_play(imaginebreaker_sound);
	}
	
	if timer = 1291 {
				create_hitbox ( 39 , angle_correct(20) , 9 , 7 , -1 , 10 , ibsound , obj_spark_hit4 , 0.9 , 0.79 , 20.12 , 12.96 , self.id , 5 , 2 );
				imaginebreaker = create_blur(x - 130 * (1-facing*2),y - 165,self.id);
    imaginebreaker.sprite_index = finalsmasheffectEX_sprite;
    imaginebreaker.anim_speed = 1;
    imaginebreaker.image_alpha = 1;
    imaginebreaker.image_xscale = 2 * (1-facing*2);
    imaginebreaker.image_yscale = 2;
    imaginebreaker.depth = depth - 0.1;
    imaginebreaker.snap = self.id
	imaginebreaker.image_blend = make_color_rgb(151,0,217);
	screen_shake(9,10);
	sound_play(earrape_sound);
	sound_play(vroom_sound);
	}
	
	}
	
	///////// FINAL SMASH 3 /////////
	if percent >= 80 and timer = 1 {
		timer = 3000
		time = 3650
		image_index = 0
		sprite_index = flinch_sprite
		  image_index = 0
		  
		  maxdepth = max(depth,target.depth)
		  
		  freezer = instance_create(x,y,obj_freeze);
  freezer.alarm[0] = 9999;
  freezer.dontpause = self.id;
  create_homing_bubble(700,700,30,15,self.id,6);
  
  zoom = instance_create ( 0 , 0 , obj_camerazoom );
  zoom.camera_l = x - 8;
  zoom.camera_r = x + 8;
  zoom.camera_u = y - 4 - actual_height;
  zoom.camera_d = y + 4;
  zoom.camera_boundary_zoom = 120;
  zoom.alarm[0] = 9999;
  
  thevoid = create_spark(x,y,self.id);
thevoid.depth =  maxdepth + 0.1
thevoid.image_alpha = 0;
thevoid.alarm[0] = 9999;
thevoid.x = view_xview - 120;
thevoid.y = view_yview - 120;
thevoid.sprite_index = black_screen_sprite;
thevoid.image_yscale = view_hview * 30;
thevoid.image_xscale = view_hview * 30;
	  }
	  
	  if thevoid.image_alpha < 0.6 {
		  thevoid.image_alpha += 0.1
		  thevoid.image_blend = c_purple
	  }
	
	with (obj_stage_extra) {
if depth < maxdepth 
visible = 0
}

	
	
		
		
	
	 if ( target > 0 && target != self.id ) {
	    target1 = target;
	  }
	  
	
	  
	  if timer >= 3000 and timer < 3530 {
	target1.sprite_index=target1.flinch_sprite
target1.state_type = "flinch"
target1.depth = -17;
target1.speed = 0;
target1.gravity_lock = 0;
target1.ignore_physics = 1;
target1.y = y * size;
target1.x = x + 76 * (1-facing*2)

}
	
if timer = 3030 {
	sprite_index = dragonamputee_sprite
	image_index = 0
}

if timer = 3110 {
	blood = instance_create(x,y,obj_spark);
blood.sprite_index = blood_sprite;
blood.image_index = 0;
blood.image_speed = 0.3;
blood.image_xscale = -0.6*(1-facing*2)*size;
blood.image_yscale = 0.6*size;
blood.snap = target.id
blood.depth = -11;
blood.x = x - 4 * (1 - facing * 2) *size;
blood.y = y - 20 *size ;
blood.loop = 999
blood.alarm[0] = 3158 
sound_play(severing_sound);
sound_play(die_voice1);
screen_shake(6,-7);
}



if timer = 3157 {
	with (blood) {instance_destroy()}
}

if timer = 3158 {
	sprite_index = dragonlaugh_sprite
	image_index = 0
	blood = instance_create(x,y,obj_spark);
blood.sprite_index = blood_sprite;
blood.image_index = 0;
blood.image_speed = 0.3;
blood.image_xscale = -0.6*(1-facing*2)*size;
blood.image_yscale = 0.6*size;
blood.snap = target.id
blood.depth = -11;
blood.x = x - 4 * (1 - facing * 2) *size;
blood.y = y - 14 *size ;
blood.loop = 999
blood.alarm[0] = 3242 - 3158
sound_play(villainlaugh_voice);
}

if timer = 3241 {
	with (blood) {instance_destroy()}
}

if timer = 3242 {
	sprite_index = dragonlaugh2_sprite
	image_index = 0
	blood = instance_create(x,y,obj_spark);
blood.sprite_index = blood_sprite;
blood.image_index = 0;
blood.image_speed = 0.3;
blood.image_xscale = -0.6*(1-facing*2)*size;
blood.image_yscale = 0.6*size;
blood.snap = target.id
blood.depth = -11;
blood.x = x - 13 * (1 - facing * 2) *size;
blood.y = y - 20 *size ;
blood.loop = 999
blood.alarm[0] = 3309
sound_play(villainlaugh2_voice);
}

if timer >= 3306 and laughloop < 1 {
	timer = 3249
	laughloop += 1
}

if timer = 3308 {
 with (zoom) {instance_destroy()}
}

if timer = 3309 {
	with (blood) {instance_destroy()}
	sprite_index = dragonragna_sprite
	image_index = 0
	zoom = instance_create ( 0 , 0 , obj_camerazoom );
zoom.camera_l = x - 16;
zoom.camera_r = x + 16;
zoom.camera_u = y - 4 - actual_height;
zoom.camera_d = y + 4;
zoom.camera_boundary_zoom = 250;
zoom.alarm[0] = 3520
sound_play(edgy_voice);
}

if timer >= 3000 {
	shaketimer += 1
}

if timer >= 3376 and timer < 3510 and shaketimer mod 6 = 0 {
	screen_shake(3,-3);
}


if timer = 3376 {
	dragon = create_spark(0,0,self.id);
dragon.depth = -17
dragon.image_alpha = 1;
dragon.alarm[0] = 3430;
dragon.sprite_index = dragon_sprite;
dragon.image_yscale = 0.4 ;
dragon.image_xscale = 0.4* (1-facing*2);
dragon.image_blend = make_color_rgb(255,0,255);
dragon.image_speed = 0.7
dragon.loop = 999
sound_play(dragon_sound);
}

if timer >= 3393 and moreloops < 120 {
	timer = 3393
	moreloops += 1
}

if dragon.image_index >= 12 {
	dragon.image_index = 9
	
}


	

if timer = 3430 {
	with (dragon) {instance_destroy()}
	sprite_index = dragoncharge_sprite
	image_index = 0
	dragon2 = create_spark(-4,27,self.id);
dragon2.depth = -17
dragon2.image_alpha = 1;
dragon2.alarm[0] = 3510;
dragon2.sprite_index = dragon2_sprite;
dragon2.image_yscale = 0.4;
dragon2.image_xscale = 0.4* (1-facing*2);
dragon2.image_blend = make_color_rgb(255,0,255);
dragon2.image_speed = 0.7
dragon2.loop = 999
}

if timer >= 3506 and evenmoreloops < 2 {
	timer = 3434
	evenmoreloops += 1
}

if timer = 3510 {
	sprite_index = dragonlaunch_sprite
	image_index = 0
	with (dragon2) {instance_destroy()}
}

if timer = 3514 {
	thedragon = create_projectile(5, angle_correct(90), 0, 0, -1, 5, magic3, obj_spark_darkness, 0.6, 0.6, 15, 30, self.id, 1000, char_custom1);
	thedragon.image_blend = make_color_rgb(255,0,255);
	thedragon.depth = -17
	with (zoom) {instance_destroy()}
}

if timer = 3528 {
	thedragon.hit = 2
}

if timer = 3530 {
		theBOOM = create_projectile(35, angle_correct(10), 8, 7, -1, 50, ibsound, obj_spark_darkness, 2, 2, -50, 200, self.id, 1000, char_custom2);
		theBOOM.image_alpha = 0
        sound_play(earrape_sound);
		theBOOM.image_blend = make_color_rgb(255,0,255);
		theBOOM.is_solid = true;
		with (freezer) {instance_destroy()}
		with (thevoid) {instance_destroy()}
		fireburst = create_spark(-500,340,self.id);
    fireburst.sprite_index = fireburst_sprite;
    fireburst.image_speed = 1;
    fireburst.image_alpha = 1;
    fireburst.image_xscale = 5 * (1-facing*2);
    fireburst.image_yscale = 5;
    fireburst.depth = depth - 9;
    fireburst.snap = self.id
	fireburst.image_blend = make_color_rgb(255,0,255);
}
	
	  
	


}

	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	with (obj_stage_extra){visible = 1}
    smash_power = 0
    attack_type = "none";
    intangible = 0;
    if air > 0
    state_type = "jump";
    else
    state_type = "stand";
    timer = 0;
    time =-1;
    }