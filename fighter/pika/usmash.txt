if state_type = "stand" || state_type = "run" {
    hspeed = 0;
    state_type = "attack";
    attack_type = "usmash";
    image_speed = 0;
    sprite_index = usmash_sprite;
    image_index = 0;
    timer = 0;
    time = 39;
    timer_speed = 1;
    charge_frame = 7
}
if timer < time {
    switch (timer) {
        case 2:
            image_index = 1;
            break;
        case 4:
            image_index = 2;
            break;
        case 6:
            image_index = 3;
            break;
        case 8:
            image_index = 4;
            break;
        case 10:
            image_index = 5;
            break;
        case 12:
            image_index = 6;
            break;
        case 14:
            image_index = 7;
            break;
        case 16:
            image_index = 8;
            break;
        case 18:
            image_index = 9;
            break;
        case 22:
            image_index = 10;
            break;
        case 26:
            image_index = 11;
            break;
        case 30:
            image_index = 12;
            break;
        case 34:
            image_index = 13;
            break;
        case 38:
            image_index = 14;
            break;
        case 42:
            image_index = 15;
            break;
    }
	
	// Animate VFX
	switch (timer){
		
		case 12:
			blur = create_itmpnt_blur( /*Attacker*/ self.id, /*Texture*/ blur_texture, /*Start frame*/ 6, /*Apex Frame*/ 8, /*End frame*/ 11, /*CCW*/ 1, /*girth*/ 10, 15);
			blur.index = 0;
			blur.image_index = 3;
			blur.v_squish = -2;
			blur.h_squish = -2;
			blur.image_index = 0;
		
			break;
		case 13:
			blur.index = 0.5;
			break;
		case 14:
			blur.index = 1;
			blur.image_index = 1;
			break;
		case 15:
			blur.index = 1.5;
		case 16:
			blur.index = 2;
			blur.image_index = 2;
			break;
		case 17:
			blur.index = 2.5;
			break;
		case 18:
			blur.index = 3;
			blur.image_index = 3;
			break;
		case 19:
			blur.index = 3.25;
			break;
		case 20:
			blur.index = 3.5;
			break;
		case 21:
			blur.index = 3.75;
			break;
		case 22:
			blur.index = 4;
			//blur.start_index = 2;
			blur.image_index = 3;
			break;
		case 23:
			blur.index = 5;
			//blur.start_index = 2;
			blur.image_index = 4;
			break;
		case 24:
			blur.image_index = 5;
			break;
		case 25:
			with (blur){
				instance_destroy();
			}
			break;
	}
	
    if (timer = 6)
        instance_create(x + 10 - facing * 26, y - 10, obj_spark_effect)
    if (timer = 8)
        sound_play(usmash_voice);
    if (timer = 11)
        sound_play(tail_sound);
    if (timer = 14) {
        create_hitbox(13, 95 - facing * 10, 4.8, 6, 19, 10, slap_l, obj_spark_shock, 0.7, 0.35, 19, 23, self.id, 6, 2);
        hitbox.hit_stun = 18;
        create_hitbox2(13, 95 - facing * 10, 4.8, 6, 19, 10, slap_l, obj_spark_shock, 0.45, 0.30, 10.20, 33.60, self.id, 6, 2);
        hitbox2.hit_stun = 8;
        create_hitbox3(13, 95 - facing * 10, 4.8, 6, 19, 10, slap_l, obj_spark_shock, 0.75, 0.65, 10, 13, self.id, 2, 2);
        hspeed = 0
    }
    if (timer = 16) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * 12
        hitbox.hitbox_y = size * 46.40
        hitbox.image_xscale = size * 0.47
        hitbox.image_yscale = size * 0.54
        hitbox.damage = 11 * size;
        hitbox.bkb = 5 * size;
        hitbox.kbg = 5.25 * size;
        hitbox.dir = 140 - facing * 100;
        hitbox.sfx = slap_m;
        hitbox.gfx = obj_spark_hit3;
        hitbox.hitlag_frames = 8;
        hitbox2.hitbox_x = size * (1 - (facing * 2)) * 1.60
        hitbox2.hitbox_y = size * 37.60
        hitbox2.image_xscale = size * 0.37
        hitbox2.image_yscale = size * 0.47
        hitbox2.damage = 11 * size;
        hitbox2.bkb = 4 * size;
        hitbox2.kbg = 4 * size;
        hitbox2.dir = 140 - facing * 100;
        hitbox2.sfx = slap_m;
        hitbox2.gfx = obj_spark_hit3;
        hitbox2.hitlag_frames = 8;
    }
    if (timer = 18) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * -15.20
        hitbox.hitbox_y = size * 30.40
        hitbox.image_xscale = size * 0.39
        hitbox.image_yscale = size * 0.49
        hitbox.damage = 9 * size;
        hitbox.bkb = 5 * size;
        hitbox.kbg = 4 * size;
        hitbox.dir = 150 - facing * 120
        hitbox.hitlag_frames = 7 * size;
        hitbox2.hitbox_x = size * (1 - (facing * 2)) * -7.20
        hitbox2.hitbox_y = size * 24.80
        hitbox2.image_xscale = size * 0.25
        hitbox2.image_yscale = size * 0.25
        hitbox2.damage = 9 * size;
        hitbox2.bkb = 4.5 * size;
        hitbox2.kbg = 3 * size;
        hitbox2.dir = 150 - facing * 120
        hitbox2.hitlag_frames = 7 * size;
    }
}

if (timer >= 14){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 &&  obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 140) || (target.weight > .22 && target.weight < .3 && target.percent > 150) || (target.weight > .3 && target.percent > 160)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

if timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time = -1;
}