if state_type = "jump" {
    vspeed -= 0.1;
    state_type = "air_attack";
    attack_type = "fair";
    image_speed = 0;
    sprite_index = fair_sprite;
    image_index = 0;
    timer = 0;
    time = 41;
    timer_speed = 1;
}
if timer < time {
    switch (timer) {
        case 1:
            image_index = 1;
            break;
        case 2:
            image_index = 2;
            break;
        case 3:
            image_index = 3;
            break;
        case 4:
            image_index = 4;
            break;
        case 5:
            image_index = 5;
            break;
        case 6:
            image_index = 6;
            break;
        case 7:
            image_index = 7;
            break;
        case 8:
            image_index = 8;
            break;
        case 10:
            image_index = 9;
			head_spin = create_blur(place_x(45)+x,y+place_y(27),self.id);
			head_spin.sprite_index = spr_spin_blur;
			head_spin.image_xscale = 0.13 * size * (1-facing*2);
			head_spin.image_yscale = 0.2 * size ;
			head_spin.snap = self.id;
			head_spin.alarm[0] = 40;
			head_spin.image_index = 0;
			head_spin.anim_speed = 1;
			head_spin.image_angle = angle_correct(90);
			head_spin.loop = 1;
			head_spin.image_alpha = 0.3;
			
			torso_spin = create_blur(place_x(37)+x,y+place_y(27),self.id);
			torso_spin.sprite_index = spr_spin_blur;
			torso_spin.image_xscale = 0.17 * size * (1-facing*2);
			torso_spin.image_yscale = 0.19 * size ;
			torso_spin.snap = self.id;
			torso_spin.alarm[0] = 40;
			torso_spin.image_index = 2;
			torso_spin.anim_speed = 0.8;
			torso_spin.image_angle = angle_correct(90);
			torso_spin.loop = 1;
			torso_spin.image_alpha = 0.3;
            break;
        case 12:
            image_index = 10;
            break;
        case 14:
            image_index = 11;
            break;
        case 16:
            image_index = 12;
            break;
        case 18:
            image_index = 13;
            break;
        case 20:
            image_index = 14;
            break;
        case 22:
            image_index = 15;
            break;
        case 24:
            image_index = 16;
            break;
        case 26:
            image_index = 17;
            break;
        case 28:
            image_index = 18;
            break;
        case 30:
            image_index = 19;
            break;
        case 32:
            image_index = 20;
            break;
        case 33:
            image_index = 21;
            break;
        case 34:
            image_index = 22;
            break;
        case 35:
            image_index = 23;
            break;
        case 36:
            image_index = 24;
            break;
        case 37:
            image_index = 25;
            break;
        case 38:
            image_index = 26;
            break;
        case 39:
            image_index = 27;
            break;
    }
    multiangle = point_direction(tempx, tempy, x + 2.4, y);
    multispd = sqrt(sqr(abs(hspeed)) + sqr(abs(vspeed - 1)));
    tempx = x;
    tempy = y;

    if timer = 8 {
        if random(10)>6
			play_attack_voice()
        sound_play(electric_sound);
        instance_create(x + 14 - facing * 28, y - 16, obj_spark_effect2)
        spark = create_spark(-4.5 * (1 - facing * 2) * size, 3, global.electricity_spark, 0.3, 0.23, 0.3)
        spark.xscale = 1 * size;
        spark.yscale = 1 * size;
        spark.image_speed = 0.5;
        spark.image_alpha = 0.8;
        spark.snap = self.id;
        create_hitbox(2, /*60+facing*60*/ multiangle, multispd, 0, 5, 3, shock2, obj_spark_shock, 0.75, 0.6, 5, 4.80, self.id, 3, 3);
        hitbox.di = 0.7
        hitbox.hit_stun = 4;
    }
    if timer = 11 || timer = 14 || timer = 18 || timer = 21 {
        create_hitbox(1, /*60+facing*60*/ multiangle, multispd, 0, 4, 3, shock2, obj_spark_shock, 0.75, 0.6, 5, 4.80, self.id, 3, 3);
        hitbox.di = 0.7
        hitbox.hit_stun = 4;
    }
    if timer = 24
    create_hitbox(5, 25 + facing * 130, 5.3, 4.7, 6, 5, shock2, obj_spark_shock, 0.775, 0.625, 5, 4.80, self.id, 5, 3);
    if (timer = 9 || timer = 12 || timer = 15 || timer = 19 || timer = 23) && attack_success = 1 {
        target.x += hspeed * .75
        target.y += vspeed * 1
    }
    if air = 0 {
        state_type = "land";
        attack_type = "none";
        sprite_index = land_sprite;
        timer = 0;
        time = 8;
    }
}
if timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    sprite_index = jump_sprite;
    image_index = 17;
    image_speed = 0;
    if air > 0
    state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time = -1;
}