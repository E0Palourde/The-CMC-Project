if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "dthrow";
image_speed = 0;
sprite_index = dthrow_sprite;
image_index = 0;
timer = 0;
time = 43;
timer_speed = 1;
target.timer_speed = 0.01;
target.alarm[0] = 100;
}
if timer < time {
switch ( timer )
  {
  case 2: image_index=1;  break;
  case 4: image_index=2;  break;
  case 6: image_index=3;  break;
  case 8: image_index=4;  break;
  case 10: image_index=5;  break;
  case 12: shakey=-22*size; image_index=6;  break;
  case 13: shakey=-18*size;  break;
  case 14: shakey=-14*size;  break;
  case 15: shakey=-8*size;  break;
  case 16: shakey=-4*size;  break;
  case 17: shakey=1*size;  break;
  case 18: shakey=6*size;  break;
  case 19: shakey=2*size; image_index=7;  break;
  case 24: image_index=8; shakex=0; shakey=0; break;
  case 25: image_index=9;  break;
  case 26: image_index=10;  break;
  case 27: image_index=11;  break;
  case 28: image_index=12;  break;
  case 29: image_index=13;  break;
  case 30: shakex=-3*size*(1-facing*2); shakey=-1*size; image_angle=325*(1-facing*2);  break;
  case 31: shakex=-4*size*(1-facing*2); shakey=-7*size; image_angle=270*(1-facing*2);  break;
  case 32: shakex=4*size*(1-facing*2); shakey=1*size; image_index=17; image_angle=40*(1-facing*2);  break;
  case 33: shakex=0; shakey=0; image_angle=0;  break;
  case 34: image_index=18;  break;
  case 35: image_index=19;  break;
  case 36: image_index=20;  break;
  case 37: image_index=21;  break;
  case 38: image_index=22;  break;
  case 39: image_index=23;  break;
  case 40: image_index=24;  break;
  case 41: image_index=25;  break;
  case 42: image_index=26;  break;
  }
	if ( timer <= 3 )
	{
	target.x = x + 12 * size * (1-facing*2);
	target.y = y;
	}
    if ( timer >= 4 && timer <= 7 )
		{
        target.x = x -2 + facing*4;
        target.y = y -3 ;	
		}
    if timer = 4 
		{
		target.sprite_index = target.down_sprite;
		target.shakex = 0;
		target.shakey = 0;
		target.image_index = 0;
		target.image_speed = 0;
		}
    if ( timer >= 8 && timer <= 20 )
		{
		target.x = x -2 + facing*4;
        target.y = y - 1;
		}
    if timer = 12
        sound_play(swingsnd4);
    if timer = 19 {
    play_attack_voice();
    create_hitbox(2,90,2,0,1,8,kick2,obj_down_impact,0.75,0.5,0,5,self.id,1,5);
	hitbox.di = -1;
	target.gethit = 0
        }
    if timer = 20 {
        create_throw_box(5,50+facing*80,6.2,3.85,1,1,-1,obj_spark_shock,0.7,0.7,0,4,self.id,1); 
        hitbox.hit_stun = 7;
        hitbox.di = 0.8 }
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }