if state_type = "jump" {
    vspeed -= 0.1;
    state_type = "air_attack";
    attack_type = "uair";
    image_speed = 0;
    sprite_index = uair_sprite;
    image_index = 0;
    timer = 0;
    time = 26;
    timer_speed = 1;
}
if timer < time {
    switch (timer) {
        case 3:
            image_index = 1;
            break;
        case 4:
            image_index = 2;
            break;
        case 6:
            image_index = 3;
            break;
        case 7:
            image_index = 4;
            break;
        case 8:
            image_index = 5;
            break;
        case 9:
            image_index = 6;
            break;
        case 11:
            image_index = 7;
            break;
        case 12:
            image_index = 8;
            break;
        case 14:
            image_index = 9;
            break;
        case 16:
            image_index = 10;
            break;
        case 18:
            image_index = 11;
            break;
        case 20:
            image_index = 12;
            break;
        case 22:
            image_index = 13;
            break;
        case 24:
            image_index = 14;
            break;
        case 26:
            image_index = 15;
            break;
    }
	
	// Animate VFX
	switch (timer){
		case 4:
			blur = create_itmpnt_blur( /*Attacker*/ self.id, /*Texture*/ blur_texture, /*Start frame*/ 1, /*Apex Frame*/ 4, /*End frame*/ 7, /*CCW*/ 0, /*girth*/ 7.5, 15);
			blur.image_index = 0;
			blur.push_x = 1*size*(1-facing*2);
		case 6: 
			blur.image_index = 0;
			blur.index = 0;
			break;
		case 7:
			blur.index = 2;
			blur.image_index = 3;
			break;
		case 8:
			blur.index = 3;
			break;
		case 9:
			blur.index = 4;
			break;
		case 10:
			blur.index = 5;
			blur.image_index = 4;
			break;
		case 11:
			blur.index += 6;
			blur.image_index = 5;
			break;
		case 12:
			with (blur){
				instance_destroy();
			}
			break;
	}
	
    if timer = 3
    sound_play(tail_sound);
    if timer = 4 {
		if random(10)>7
			play_attack_voice()
        create_hitbox(7, 80 + facing * 20, 4.5, 4.25, 9, 5, slap_m, obj_spark_hit2, 0.55, 0.55, -19.20, 14.00, self.id, 5, 1);
        create_hitbox2(7, 80 + facing * 20, 4.5, 4.55, 9, 5, slap_m, obj_spark_hit2, 0.25, 0.37, -11.20, 12.00, self.id, 5, 1);
        hitbox.hit_stun = 4;
        hitbox2.hit_stun = 4;
    }
    if (timer = 6) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * -12
        hitbox.hitbox_y = size * 34.40
        hitbox.image_xscale = size * 0.42
        hitbox.image_yscale = size * 0.45
        hitbox.damage = 5 * size;
        hitbox.bkb = 3.65 * size;
        hitbox.kbg = 2 * size;
        hitbox.dir = 350 - facing * 160 * size;
        hitbox.shield_damage = 8 * size;
        hitbox.hitlag_frames = 5 * size;
        hitbox.sfx = slap_s;
        hitbox2.hitbox_x = size * (1 - (facing * 2)) * -8.80
        hitbox2.hitbox_y = size * 23.20
        hitbox2.image_xscale = size * 0.25
        hitbox2.image_yscale = size * 0.36
        hitbox2.damage = 5 * size;
        hitbox2.bkb = 3.65 * size;
        hitbox2.kbg = 2 * size;
        hitbox2.shield_damage = 8 * size;
        hitbox2.hitlag_frames = 5 * size;
        hitbox2.sfx = slap_s;
    }
    if (timer = 7) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * 2.40
        hitbox.hitbox_y = size * 35.20
        hitbox.image_xscale = size * 0.35
        hitbox.image_yscale = size * 0.45
        hitbox2.hitbox_x = size * (1 - (facing * 2)) * -3.20
        hitbox2.hitbox_y = size * 26.40
        hitbox2.image_xscale = size * 0.30
        hitbox2.image_yscale = size * 0.40
    }
    if (timer = 8) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * 11.20
        hitbox.hitbox_y = size * 28
        hitbox.image_xscale = size * 0.58
        hitbox.image_yscale = size * 0.40
        hitbox.dir = 130 - facing * 80;
        hitbox.bkb = 4.4 * size;
        hitbox2.dir = 350 - facing * 160 * size;
        hitbox2.hitbox_x = size * (1 - (facing * 2)) * 0
        hitbox2.hitbox_y = size * 24
        hitbox2.image_xscale = size * 0.30
        hitbox2.image_yscale = size * 0.24
        hitbox2.bkb = 4.4 * size;
    }
    if (timer = 9) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * 16.80
        hitbox.hitbox_y = size * 15.20
        hitbox.image_xscale = size * 0.56
        hitbox.image_yscale = size * 0.30
        hitbox2.hitbox_x = size * (1 - (facing * 2)) * 5.60
        hitbox2.hitbox_y = size * 19.20
        hitbox2.image_xscale = size * 0.30
        hitbox2.image_yscale = size * 0.19
    }
    if air = 0 {
        state_type = "land";
        sprite_index = land_sprite;
        attack_type = "none";
        timer = 0;
        time = 7;
    }
}
if timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    sprite_index = jump_sprite;
    image_index = 17;
    image_speed = 0;
    if air > 0
    state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time = -1;
}