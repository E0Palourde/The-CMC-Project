if set_point = 0
stick_point = 5

facing = held.facing

if notSaved = 0{
	saved_state = held.state_type
	notSaved = 1

}



if held.state_type != saved_state{
	alarm[0] = 1
	instance_destroy();
}
else{
	alarm[0] = 2
}

item_stick_to_point(held,stick_point)

image_angle = sprite_angle

if facing = 1{
	image_angle -= 180
}

  /*
  xx = held.spr_cx + itmpnt_frame_get_x ( held.data_slot_occupied , held.sprite_index-held.sprite_start , floor(held.image_index) , stick_point ) * sign ( held.image_xscale );
  yy = held.spr_cy + itmpnt_frame_get_y ( held.data_slot_occupied , held.sprite_index-held.sprite_start , floor(held.image_index) , stick_point ) * sign ( held.image_yscale );
  x = held.spr_lx + xx * held.spr_dxx + yy * held.spr_dyx;
  y = held.spr_uy + xx * held.spr_dxy + yy * held.spr_dyy;
  
  
  var f;
  f = itmpnt_frame_get_p ( hld.data_slot_occupied , hld.sprite_index-hld.sprite_start , floor(hld.image_index) , stick_point );
  if ( f == 8 )
    visible = 0;
    else
    {
    visible = 1;
    image_index = floor ( f / 2 );
    if ( f mod 2 == 1 )
      depth = hld.depth + 1;
      else
      depth = hld.depth - 1;
    }
  sprite_angle = itmpnt_frame_get_a ( hld.data_slot_occupied , hld.sprite_index-hld.sprite_start , floor(hld.image_index) , stick_point );
  image_yyscale = 1;
  facing = hld.facing;
  if ( hld.facing == 1 )
    {
    sprite_angle = 180 - sprite_angle;
    image_yyscale = -1;
    }
  sprite_angle += hld.sprite_angle;
  
  
  image_angle = sprite_angle
  */