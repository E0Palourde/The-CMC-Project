facing = !facing
char_fthrow();
exit;
break;


if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = bthrow_sprite;
image_index=0;
timer = 0;
time = 31;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 25
}
if timer < time {
	if ( timer = 0 || timer = 1 )
	{
	target.x = x + 20 * size * (1-facing*2);
	target.y = y;
	}
if timer = 3 {
target.x = x + (18 - facing*36)*size;
target.y = y-6*size;
}
if timer = 6 {
target.x = x + (17 - facing*34)*size;
target.y = y-4*size;
}
if timer = 9 {
target.x = x + (13 - facing*26)*size;
target.y = y-1*size;
}

if timer < 9
target.depth = depth + 1


if timer = 12 {
target.x = x + (-5 + facing*10)*size;
target.y = y-8*size;
}

	
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 12: image_index = 4; break;
	case 15: image_index = 5; break;
	case 18: image_index = 6; break;
	case 21: image_index = 7; break;

      }
			
if timer = 13 {
    sound_play(swingsnd1);
    create_throw_box(8,155-facing*130,5.7,6.5,16,0,-1,obj_spark_hit1,1.0,1.0,-12,16,self.id,4,2);
	
}	

    
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    facing = 1-facing
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
