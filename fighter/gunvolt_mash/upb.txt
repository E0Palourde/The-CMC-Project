fast_fall = 0;
fast_fall_temp = 0;
gravity_lock = 1;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" && air < max_jumps )
  {
  attacking = 0;
  vspeed = 0;
  special = 0;
  air_move = 0;
  attack_type = "upb";
  time = 40;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = upb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  if moveright
  {
  facing = 0;
  }
  else if moveleft
  {
  facing = 1;
  }
  }

    switch ( timer )
    {
	case 02: image_index = 1; break;
	case 04: image_index = 2; break;
	case 14: image_index = 3; break;
	case 16: image_index = 4; break;
	case 18: image_index = 5; break;
	case 20: image_index = 6; break;
	case 22: image_index = 7; break;
	case 24: image_index = 8; break;
	} 
	
	switch ( timer )
    {
	case 15: joule.image_index = 1; break;
	case 17: joule.image_index = 2; break;
	case 19: joule.image_index = 1; break;
	case 21: joule.image_index = 1; break;
	case 23: joule.image_index = 2; break;
	case 25: joule.image_index = 1; break;
	case 27: joule.image_index = 2; break;
	case 29: joule.image_index = 1; break;
	case 31: joule.image_index = 1; break;
	case 33: joule.image_index = 2; break;
	case 35: joule.image_index = 1; break;
	case 37: joule.image_index = 2; break;
	case 39: joule.image_index = 1; break;
	} 

    //Blur shit starts here
    switch ( timer )
      {
	case 10:  
    blur = create_itmpnt_blur(/*Attacker*/self.id, /*Texture*/blur_texture, /*Start frame*/2, /*Apex Frame*/5, /*End frame*/5, /*CCW*/1, /*girth*/7, 15);
    blur.index = 0;
    blur.image_index = 1;
    blur.depth -= 0.1;
	blur.push_x = -6*size*(1-facing*2);
	blur.h_squish = 7;
	blur.v_squish = -5;
    break;
    case 14:
    blur.index = 1;
    blur.image_index = 2;
    break;
    case 16:
    blur.index = 2;
    blur.image_index = 2;
    break;
	case 18:
	blur.index = 3;
    blur.image_index = 2;
    break;
    case 20: 
    blur.start_index = 1;
    blur.image_index = 3;
    break;
    case 22: 
    blur.start_index = 1;
    blur.image_index = 3.33;
    break;
    case 24:
    blur.start_index = 1;
    blur.image_index = 3.5;
    break;
	case 26: 
    blur.start_index = 3;
    blur.image_index = 4; 
    break;
    case 28:  
    blur.start_index = 4;
    blur.image_index = 4; 
    break;
    case 30: with (blur) instance_destroy(); break;
      }
    //Blur shit ends here

if timer = 4
{
  joule = instance_create(x,y,obj_spark);
  joule.sprite_index = joule_sprite;
  joule.image_index = 0;
  joule.image_speed = 0;
  joule.image_xscale = 0.7*(1-facing*2)*size;
  joule.image_yscale = 0.7*size;
  joule.snap = self.id
  joule.depth = depth - 1;
  joule.x = x - 15 * (1- facing * 2) * size;
  joule.y = y - 15 * size;
  joule.image_alpha = 0; 
  sound_play(joule_voice);
}

if timer >= 4 and timer <=14
{
joule.image_alpha += 0.1; 
}

if timer = 14
{
  vspeed = -5 * size;
  hspeed =  1 * (1-facing*2) * size;
  impacto = instance_create(x,y,obj_down_impact)
  impacto.image_blend = c_aqua;
  spark = instance_create(x*size,y - 20 *size,obj_spark_shockwave)
  spark.image_xscale *= 0.8*size
  spark.image_yscale *= 0.8*size
  spark.image_blend = c_aqua
  spark.image_alpha = 0.8
  create_hitbox ( 9 , 85 + facing * 10 , 6 , 5.5 , 3 , 5 , punch3 , obj_spark_hit4 , 0.42 , 0.79 , 6.30 , 17.50 , self.id , 16 , 3 );
  hitbox.image_angle = ( 1 - facing * 2 ) * 0;
  sound_play(attack_voice5);
  sound_play(attacksnd4);
  sound_play(super_sound);
}

if timer = 16
{
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7
    hitbox.hitbox_y = size * 30.45
    hitbox.image_xscale = size * 0.41
    hitbox.image_yscale = size * 0.67
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
}

if timer >=30 && timer <=40
{
joule.image_alpha -= 0.2; 
}

if timer = 40
{
with (joule)
{
instance_destroy();
}
}

if timer > 14
{
force_edge_grab = 1;
repeat ( 2 )
    {
    a = after_image ( 2 , c_aqua , .25 );
    a.image_xscale *= 1.15;
    a.image_yscale *= 1.15;
    a.x += -1 + floor ( random ( 3 ) );
    a.y += -1 + floor ( random ( 3 ) );
    }
if cos(timer*pi)>0.5
after_image(6,c_aqua,0.5)
}

if ( timer >= time - 1 )
  {
  vspeed *= 0.75;
  attack_type = "none";
  if ( air > 0 )
    state_type = "fall";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }