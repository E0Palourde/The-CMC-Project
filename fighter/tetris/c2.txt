
if hit = 1{
	time = 90
	
}

if image_index >= 2
image_speed = 0

if timer <= 1{
	adamsandler = attacker.id
	while (!collision_point(x,y,obj_floor,1,1) and !collision_point(x,y,obj_platform,1,1) 
		and y < obj_game_control.camera_boundary_d){
		y += 1
	}
	
	image_alpha = 1
	hit = 0
}

if y >= obj_game_control.camera_boundary_d - 10{
	instance_destroy();
}

/*
if timer <= 60{
	
	if adamsandler.moveleft 
	and (
	    collision_rectangle ( x - 4 , y - 4 , x  , y + 8 , obj_floor , 1 , 1 )
	or  collision_rectangle ( x - 4 , y - 4 , x  , y + 8 , obj_platform , 1 , 1 )
	)
	{
		x -= 4
	}
	if adamsandler.moveright 
	and (
	    collision_rectangle ( x + 4 , y - 8 , x  , y + 8 , obj_floor , 1 , 1 )
	or  collision_rectangle ( x + 4 , y - 8 , x  , y + 8 , obj_platform , 1 , 1 )
	)
	{
		x += 4
	}
	
	
}
*/


on_floor = 0;
on_platform = 0;


while ( collision_rectangle ( x - 2 , y - 2 , x + 2 , y-1  , obj_floor , 1 , 1 ) )
    y -= 1;
if ( vspeed >= 0 )
    while ( collision_rectangle ( x - 2 , y - 2 , x + 2 , y-1, obj_platform , 1 , 1 ) )
	y -= 1;




if adamsandler.special = 0 and timer < 60{
	//timer = 60
}


if timer = 61{
	/*
	create_projectile(6,90+facing*0,6,5,20,30,kick3,obj_spark_hit1,0.6,1.5,6,30,adamsandler.id,12,-1)
	charge_eff = create_spark(0,0,adamsandler.id);
	charge_eff.sprite_index = adamsandler.gaia_rock_sprite;
	charge_eff.image_speed = 0.4;
	charge_eff.image_alpha = 1;
	charge_eff.image_xscale = image_xscale * 1.0 ;
	charge_eff.image_yscale = image_yscale * 1.0 ;
	charge_eff.depth = depth - 3;
	charge_eff.xscale_add = 0//0.02 * (1-facing*2);
	charge_eff.yscale_add = 0.5
	charge_eff.alarm[0] = 30;	
	charge_eff.alpha_add = -0.05
	*/
	
	
}

image_alpha += alpha_add