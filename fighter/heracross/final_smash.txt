if ( state_type == "stand" || state_type == "run" || state_type == "jump" || state_type == "shielding" )
  {
  hspeed = 0;
  size = csize;
  state_type = "air_attack";
  attack_type = "final_smash";
  image_speed = 0;
  image_index = 0;
  sprite_index = final_smash_sprite;
  timer = 0;
  time = 253;
  timer_speed = 1;
  intangible = 1;
  final_smashes += 1;
  smash_power = 0;
  air_move = 0;
  sound_play(attack_voice11);
  freezer = instance_create(x,y,obj_freeze);
  freezer.alarm[0] = 140;
  freezer.dontpause = self.id;
  ledge_grab = 0;
  has_hit = 0;
  }
  
gravity = 0;
gravity_lock = 1;
vspeed = 0;  

switch (timer)
{
case 3: image_index = 1; sound_play(fs_sound1); break;
case 6: image_index = 2; break;
case 7: fsfx1.image_index = 0; break;
case 8: fsfx1.image_index = 1; break;
case 9: fsfx1.image_index = 2; break;
case 10: fsfx1.image_index = 3; break;
case 11: fsfx1.image_index = 0; break;
case 12: fsfx1.image_index = 1; break;
case 13: fsfx1.image_index = 2; break;
case 14: fsfx1.image_index = 3; break;
case 15: fsfx1.image_index = 0; break;
case 16: fsfx1.image_index = 1; break;
case 17: fsfx1.image_index = 2; break;
case 18: fsfx1.image_index = 3; break;
case 19: fsfx1.image_index = 0; break;
case 20: fsfx1.image_index = 1; break;
case 21: fsfx1.image_index = 2; break;
case 22: fsfx1.image_index = 3; break;
case 23: fsfx1.image_index = 0; break;
case 24: fsfx1.image_index = 1; break;
case 25: fsfx1.image_index = 2; break;
case 26: fsfx1.image_index = 3; break;
case 27: fsfx1.image_index = 0; break;
case 28: fsfx1.image_index = 1; break;
case 29: fsfx1.image_index = 2; break;
case 30: fsfx1.image_index = 3; break;
case 31: fsfx1.image_index = 0; break;
case 32: fsfx1.image_index = 1; break;
case 33: fsfx1.image_index = 2; break;
case 34: fsfx1.image_index = 3; break;
case 35: fsfx1.image_index = 0; break;
case 36: fsfx1.image_index = 1; break;
case 37: fsfx1.image_index = 2; break;
case 38: fsfx1.image_index = 3; break;
case 39: fsfx1.image_index = 0; break;
case 40: fsfx1.image_index = 1; break;
case 41: fsfx1.image_index = 2; break;
case 42: fsfx1.image_index = 3; break;
case 43: fsfx1.image_index = 0; break;
case 44: fsfx1.image_index = 1; break;
case 45: fsfx1.image_index = 2; break;
case 46: fsfx1.image_index = 3; break;
case 47: fsfx1.image_index = 0; break;
case 48: fsfx1.image_index = 1; break;
case 49: fsfx1.image_index = 2; break;
case 50: fsfx1.image_index = 3; break;
case 51: fsfx1.image_index = 0; break;
case 52: fsfx1.image_index = 1; break;
case 53: fsfx1.image_index = 2; break;
case 55: fsfx1.image_index = 3; break;
case 56: fsfx1.image_index = 0; break;
case 57: fsfx1.image_index = 1; break;
case 58: fsfx1.image_index = 2; break;
case 59: fsfx1.image_index = 3; break;
case 60: fsfx1.image_index = 0; break;
case 61: fsfx1.image_index = 1; break;
case 62: fsfx1.image_index = 2; break;
case 63: fsfx1.image_index = 3; break;
case 64: fsfx1.image_index = 0; image_index = 3; break;
case 65: fsfx1.image_index = 1; break;
case 66: fsfx1.image_index = 2; image_index = 4; break;
case 67: fsfx1.image_index = 3; break;
case 68: sprite_index = final_smash_sprite2; image_index = 0; sound_play(mega_voice); sound_play(fs_sound2); with (fsfx1) {instance_destroy();} break;
case 69: fsfx3.image_index = 1; break;
case 70: fsfx3.image_index = 2; image_index = 1; break;
case 71: fsfx3.image_index = 3; break;
case 72: fsfx3.image_index = 4; image_index = 2; break;
case 73: fsfx3.image_index = 5; break;
case 74: fsfx3.image_index = 6; break;
case 76: fsfx3.image_index = 7; break;
case 77: fsfx3.image_index = 8; break;
case 78: fsfx3.image_index = 9; break;
case 79: fsfx3.image_index = 10; break;
case 80: fsfx3.image_index = 11; break;
case 81: fsfx3.image_index = 12; break;
case 82: fsfx3.image_index = 0; break;
case 83: fsfx3.image_index = 1; break;
case 84: fsfx3.image_index = 2; break;
case 85: fsfx3.image_index = 3; break;
case 86: fsfx3.image_index = 4; break;
case 87: fsfx3.image_index = 5; break;
case 88: fsfx3.image_index = 6; break;
case 89: fsfx3.image_index = 7; break;
case 90: fsfx3.image_index = 8; break;
case 91: fsfx3.image_index = 9; break;
case 92: fsfx3.image_index = 10; break;
case 93: fsfx3.image_index = 11; break;
case 94: fsfx3.image_index = 12; break;
case 95: fsfx3.image_index = 0; break;
case 96: fsfx3.image_index = 1; break;
case 97: fsfx3.image_index = 2; break;
case 98: fsfx3.image_index = 3; break;
case 99: fsfx3.image_index = 4; break;
case 100: fsfx3.image_index = 5; break;
case 101: fsfx3.image_index = 6; break;
case 102: fsfx3.image_index = 7; break;
case 103: fsfx3.image_index = 8; break;
case 104: fsfx3.image_index = 9; break;
case 105: fsfx3.image_index = 10; break;
case 106: fsfx3.image_index = 11; break;
case 107: fsfx3.image_index = 12; break;
case 108: fsfx3.image_index = 0; break;
case 109: fsfx3.image_index = 1; break;
case 110: fsfx3.image_index = 2; break;
case 111: fsfx3.image_index = 3; break;
case 112: fsfx3.image_index = 4; break;
case 113: fsfx3.image_index = 5; break;
case 114: fsfx3.image_index = 6; break;
case 115: fsfx3.image_index = 7; break;
case 116: fsfx3.image_index = 8; break;
case 117: fsfx3.image_index = 9; break;
case 118: fsfx3.image_index = 10; break;
case 119: fsfx3.image_index = 11; break;
case 120: fsfx3.image_index = 12; break;
case 123: with (fsfx3) {instance_destroy();} break;
case 126: image_index = 3; break;
case 129: image_index = 4; break;
case 132: image_index = 5; break;
case 135: image_index = 6; break;
case 138: image_index = 7; break;
case 141: image_index = 8; sound_play(fs_sound4); sound_play(attack_voice9); break;
case 144: fsfx4.image_index = 1; break;
case 147: fsfx4.image_index = 2; break;
case 150: fsfx4.image_index = 3; break;
case 153: fsfx4.image_index = 0; break;
case 156: fsfx4.image_index = 1; break;
case 159: fsfx4.image_index = 2; break;
case 162: fsfx4.image_index = 3; break;
case 165: fsfx4.image_index = 0; break;
case 168: fsfx4.image_index = 1; break;
case 171: fsfx4.image_index = 2; break;
case 174: fsfx4.image_index = 3; break;
case 181: image_index = 9; break;
case 183: image_index = 10; break;
case 185: image_index = 11; sound_play(fs_sound5); sound_play(attack_voice12); break;
case 187: image_index = 12; break;
case 227: image_index = 13; break;
case 229: image_index = 14; break;
case 231: image_index = 15; break;
case 233: image_index = 16; break;
case 235: image_index = 17; break;
}

if timer = 6
{
    fsfx1 = create_blur(x,y,self.id);
    fsfx1.sprite_index = fs_fx1;
	fsfx1.image_xscale = 0.7 * (1-facing*2) * size;
    fsfx1.image_yscale = 0.7*size;
    fsfx1.x = x + (1 - facing * 2) *size;
    fsfx1.y = y - 13.95 *size;
    fsfx1.image_speed = 0;
    fsfx1.image_index = 0;
	fsfx1.snap = self.id;
    fsfx1.depth = depth - 1;
}

if timer = 68
{
    fsfx2 = create_blur(x,y,self.id);
    fsfx2.sprite_index = fs_fx2;
	fsfx2.image_xscale = 0.7 * (1-facing*2) * size;
    fsfx2.image_yscale = 0.7*size;
    fsfx2.x = x + (1 - facing * 2) *size;
    fsfx2.y = y - 13.95 *size;
    fsfx2.image_speed = 0.7;
    fsfx2.image_index = 0;
	fsfx2.snap = self.id;
    fsfx2.depth = depth - 1;
    fsfx3 = create_blur(x,y,self.id);
    fsfx3.sprite_index = fs_fx3;
	fsfx3.image_xscale = 0.25 * (1-facing*2) * size;
    fsfx3.image_yscale = 0.25*size;
    fsfx3.x = x + (1 - facing * 2) *size;
    fsfx3.y = y - 50 *size;
    fsfx3.image_speed = 0;
    fsfx3.image_index = 0;
	fsfx3.snap = self.id;
    fsfx3.depth = depth - 1;
}

if timer = 141
{
    fsfx4 = create_blur(x,y,self.id);
    fsfx4.sprite_index = fs_fx4;
	fsfx4.image_xscale = 0.7 * (1-facing*2) * size;
    fsfx4.image_yscale = 0.45*size;
    fsfx4.x = x + 26 * (1 - facing * 2) *size;
    fsfx4.y = y + 15 *size;
    fsfx4.image_speed = 0;
    fsfx4.image_index = 0;
	fsfx4.snap = self.id;
    fsfx4.depth = depth - 1;
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.35*size;
	duster.image_yscale = 0.35*size;
}

if timer >= 141 and timer < 174
{
    hspeed = 5.7 * (1-facing * 2) * size;
}

if timer > 141 && timer < 181 && !instance_exists(hitbox2)
{
    create_hitbox2 ( 2 , 10 + facing * 160 , 6 , 0 , -1 , 1 , crush , obj_spark_hit3 , 2.24 , 1.04 , 26.60 , 14.70 , self.id , 4 , 5 );
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0;
    hitbox2.di = 0;
	hitbox2.armor_break = 1;
    hitbox2.hit_stun = 15;
    hitbox2.weight_kb = 1;
	hitbox2.execute_on_hit = "attacker.has_hit = 1"
}

if timer = 181
{
hspeed = 0;
with(fsfx4) {instance_destroy();}
}

if ( has_hit = 1 and timer < 185 )
{
target.direction = point_direction(target.x,target.y, x + 45 * (1-facing*2) * size , y - actual_height + ( 10 * size ) )
}

if timer = 185
{
    screen_shake(0.8,12);
    fsfx5 = create_blur(x,y,self.id);
    fsfx5.sprite_index = fs_fx5;
	fsfx5.image_xscale = 0.7 * (1-facing*2) * size;
    fsfx5.image_yscale = 0.7*size;
    fsfx5.x = x + 74.20 * (1 - facing * 2) *size;
    fsfx5.y = y - 20.30 *size;
    fsfx5.image_speed = 0.5;
    fsfx5.image_index = 0;
	fsfx5.snap = self.id;
    fsfx5.depth = depth - 1;
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.7*size;
	duster.image_yscale = 0.7*size;
    create_hitbox ( 17 , 25 + facing * 130 , 8.5 , 3.5 , -1 , 30 , fire3 , obj_spark_fire1 , 3.41 , 1.96 , 98.70 , 23.10 , self.id , 3 , 10 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
}

if timer = 231
{
  sound_play(fs_sound3);
  fsfx2 = create_blur(x,y,self.id);
  fsfx2.sprite_index = fs_fx2;
  fsfx2.image_xscale = 0.7 * (1-facing*2) * size;
  fsfx2.image_yscale = 0.7*size;
  fsfx2.x = x + (1 - facing * 2) *size;
  fsfx2.y = y - 13.95 *size;
  fsfx2.image_speed = 0.7;
  fsfx2.image_index = 0;
  fsfx2.snap = self.id;
  fsfx2.depth = depth - 1;
}

if ( timer >= time - 1 )
  {
  smash_power = 0;
  attack_type = "none";
  intangible = 0;
  if ( air > 0 )
    state_type = "jump"; 
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }