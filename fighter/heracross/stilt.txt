if ( state_type == "stand" || state_type == "run" )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "stilt";
  image_speed = 0;
  image_index = 0;
  sprite_index = stilt_sprite;
  timer = 0;
  time = 31;
  timer_speed = 1;
  }

switch (timer) 
{
	case 03: image_index = 1; break;
	case 06: image_index = 2; break;
	case 16: image_index = 3; sound_play(attack_sound3); play_attack_voice(); break;
	case 18: image_index = 4; break;
	case 20: image_index = 5; break;
	case 22: image_index = 6; break;
	case 27: image_index = 7; break;
}

if timer = 16
{
    create_hitbox ( 9 , 20 + facing * 140 , 4.5 , 5.5 , 16 , 9 , slash2 , obj_spark_slash2 , 0.60 , 0.52 , 15.40 , 11.20 , self.id , 4 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
    create_hitbox2 ( 11 , 45 + facing * 90 , 1.7 , 0.9 , 12 , 7 , slash3 , obj_spark_slash3 , 0.39 , 0.41 , 31.50 , 11.20 , self.id , 4 , 3 );
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox2.hit_stun = 23;
	hitbox2.di = 0;
	
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.15*size;
	duster.image_yscale = 0.15*size;
}

if timer = 18
{
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 19.60
    hitbox.hitbox_y = size * 11.20
    hitbox.image_xscale = size * 0.77
    hitbox.image_yscale = size * 0.53
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 36.40
    hitbox2.hitbox_y = size * 10.50
    hitbox2.image_xscale = size * 0.35
    hitbox2.image_yscale = size * 0.52
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0
	
    eff = instance_create(place_x(69)+x,place_y(25)+y,obj_smash_charge);
    eff.image_yscale = 0.4 * ysize;
    eff.image_xscale = eff.image_yscale * (1-facing*2);
    eff.depth = depth - 0.1;
    eff.image_speed = 2;
	
}

if ( timer >= 16 and timer < 19 )
	hspeed = size * (4-facing*8);
    else
	hspeed = 0;	

if ( timer >= time - 1 )
  {
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }