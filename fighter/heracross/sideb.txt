fast_fall = 0;
fast_fall_temp = 0;
if sidebtimer > 0{
    exit;
}

if ( state_type == "run" || state_type == "stand" || state_type == "jump" || state_type == "crouch" )
  {
  attacking = 0;
  special = 0;
  attack_type = "sideb";
  time = 42;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = sideb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  air_move = 0;
  has_hit = 0;
  }

if air > 0 
		{
			vspeed = .5; 
			gravity_lock=1;
		}

switch(timer)
{
case 02: image_index = 01; break;
case 04: image_index = 02; break;
case 14: image_index = 03; break;
case 16: image_index = 04; break;
case 18: image_index = 05; sound_play(attack_sound7); sound_play(attack_voice4); break;
case 24: image_index = 06; break;
case 39: image_index = 07; break;
}

if timer = 18
{
    create_hitbox ( 4 , 45 + facing * 90 , 3 , 0 , 7 , 7 , punch2 , obj_spark_hit2 , 1.12 , 0.82 , 21 , 12.60 , self.id , 5 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.di = 0.2;
	hitbox.execute_on_hit = "attacker.has_hit = 1"
	hspeed = 8.5 * (1-facing*2) * size;
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.25*size;
	duster.image_yscale = 0.25*size;
}



if timer = 24
{
hspeed = 0;
}

if ( has_hit = 1 and timer < 26 )
{
target.x = x + 21 * (1-facing*2)
target.y = y;
}

if timer >= 18 and timer <= 26 and (attack_success = 1 or distance_to_object(target)<size*10)
{
target.state_type = "air_flinch";
target.attack_type = "none";
target.timer = 0;
target.time = 50;
target.timer_speed = 0;
target.sprite_index = target.flinch_sprite;
target.alarm[0] = 2;
target.facing = 1-facing;
timer = 100
time = 136
sprite_index = sideb_sprite2;
image_index = 0;
hspeed = 0;
target.x = x + 21 * (1-facing*2)
target.y = y;
has_hit = 1;
sound_play(attack_voice9); 
}

switch(timer)
{
case 101: image_index = 01; sound_play(attack_sound2); break;
case 102: image_index = 02; break;
case 103: image_index = 03; break;
case 104: image_index = 04; sound_play(attack_sound2); break;
case 105: image_index = 05; break;
case 106: image_index = 00; break;
case 107: image_index = 01; sound_play(attack_sound2); break;
case 108: image_index = 02; break;
case 109: image_index = 03; break;
case 110: image_index = 04; sound_play(attack_sound2); break;
case 111: image_index = 05; break;
case 112: image_index = 00; break;
case 113: image_index = 01; sound_play(attack_sound2); break;
case 114: image_index = 02; break;
case 115: image_index = 03; break;
case 116: image_index = 04; sound_play(attack_sound2); break;
case 117: image_index = 05; break;
case 118: image_index = 00; break;
case 119: image_index = 01; sound_play(attack_sound2); break;
case 120: image_index = 02; break;
case 121: image_index = 03; break;
case 122: image_index = 04; sound_play(attack_sound2); break;
case 124: image_index = 05; break;
case 125: image_index = 00; break;
case 126: image_index = 01; sound_play(attack_sound2); break;
case 127: image_index = 02; break;
case 128: image_index = 03; break;
case 129: image_index = 04; sound_play(attack_sound2); break;
case 130: image_index = 05; break;
case 131: image_index = 00; break;
}

if timer = 101 or timer = 104 or timer = 107 or timer = 110 or timer = 113 or timer = 116 or timer = 119 or timer = 122 or timer = 125 or timer = 128
{
proj = create_projectile(0.5,75+facing*30,3,0.1,1,3,punch2,obj_spark_hit2,0.7,0.7,12,25,self.id,4,char_custom5); 
proj.direction = 0+facing*180
proj.speed = 9
proj.hit = 2;
proj.hit_stun = 8
proj.hitshake_type = 2
proj.armor_break = 1 
proj.depth = depth - 0.1;
proj.use_palette = number;
proj.sprite_index = arm_spriteR;

proj2 = create_projectile(0.5,75+facing*30,3,0.1,1,3,punch2,obj_spark_hit2,0.7,0.7,12,27,self.id,8,char_custom5); 
proj2.direction = 0+facing*180
proj2.speed = 9
proj2.hit = 2;
proj2.hit_stun = 8
proj2.hitshake_type = 2
proj2.armor_break = 1 
proj2.depth = depth - 0.1;
proj2.use_palette = number;
proj2.sprite_index = arm_spriteL;
}

if timer = 102 or timer = 105 or timer = 108 or timer = 111 or timer = 114 or timer = 117 or timer = 120 or timer = 123 or timer = 126 or timer = 129
{
proj3 = create_projectile(1,75+facing*30,3,0.1,1,3,punch2,obj_spark_hit2,0.7,0.7,12,15,self.id,8,char_custom5); 
proj3.direction = 0+facing*180
proj3.speed = 9
proj3.hit = 2;
proj3.hit_stun = 8
proj3.hitshake_type = 2
proj3.armor_break = 1 
proj3.depth = depth - 0.1;
proj3.use_palette = number;
proj3.sprite_index = arm_spriteR;

proj4 = create_projectile(1,75+facing*30,3,0.1,1,3,punch2,obj_spark_hit2,0.7,0.7,12,17,self.id,4,char_custom5); 
proj4.direction = 0+facing*180
proj4.speed = 9
proj4.hit = 2;
proj4.hit_stun = 8
proj4.hitshake_type = 2
proj4.armor_break = 1 
proj4.depth = depth - 0.1;
proj4.use_palette = number;
proj4.sprite_index = arm_spriteL;
}

if timer = 103 or timer = 106 or timer = 109 or timer = 112 or timer = 115 or timer = 118 or timer = 121 or timer = 124 or timer = 127 or timer = 130
{
proj5 = create_projectile(4,75+facing*30,3,0.1,1,3,punch2,obj_spark_hit2,0.7,0.7,12,5,self.id,4,char_custom5); 
proj5.direction = 0+facing*180
proj5.speed = 9
proj5.hit = 2;
proj5.hit_stun = 8
proj5.hitshake_type = 2
proj5.armor_break = 1 
proj5.depth = depth - 0.1;
proj5.use_palette = number;
proj5.sprite_index = arm_spriteR;

proj6 = create_projectile(4,75+facing*30,3,0.1,1,3,punch2,obj_spark_hit2,0.7,0.7,12,7,self.id,8,char_custom5); 
proj6.direction = 0+facing*180
proj6.speed = 9
proj6.hit = 2;
proj6.hit_stun = 8
proj6.hitshake_type = 2
proj6.armor_break = 1 
proj6.depth = depth - 0.1;
proj6.use_palette = number;
proj6.sprite_index = arm_spriteL;
}

if timer >= 101 and timer < 131 and !instance_exists(hitbox)
{
    create_hitbox ( 3 , 90 , 2 , 0 , 10 , 1 , punch2 , obj_spark_hit3 , 1.38 , 0.97 , 27.30 , 14.70 , self.id , 8 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.hit_stun = 6;
	hitbox.execute_on_hit = "attacker.vspeed = 0"
}

if ( has_hit = 1 and timer >= 101 and timer < 131 )
{
target.x = x + 10 * (1-facing*2)
target.y = y;
}

if timer >= 131 and timer <= 136 and attacking = 0
{
timer = 200
time = 224
sprite_index = sideb_sprite3;
image_index = 0;
}

switch(timer)
{
case 202: image_index = 01; break;
case 204: image_index = 02; break;
case 206: image_index = 03; sound_play(attack_sound8); sound_play(attack_voice10); break;
case 208: image_index = 04; break;
case 220: image_index = 05; break;
}

if timer = 206
{
    create_hitbox ( 3 , 15 + facing * 150 , 7 , 2.5 , 15 , 15 , punch3 , obj_spark_hit4 , 1.22 , 0.72 , 20.30 , 14 , self.id , 4 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.25*size;
	duster.image_yscale = 0.25*size;
}

if timer >= 131 and timer <= 136 and attacking = 1
{
timer = 300
time = 324
sprite_index = sideb_sprite4;
image_index = 0;
}

switch(timer)
{
case 302: image_index = 01; break;
case 304: image_index = 02; sound_play(attack_sound8); sound_play(attack_voice10); break;
case 306: image_index = 03; break;
case 308: image_index = 04; break;
case 320: image_index = 05; break;
}

if timer = 304
{
    create_hitbox ( 5 ,angle_correct(65), 7 , 2.5 , 15 , 15 , punch3 , obj_spark_hit4 , 0.63 , 0.81 , 14 , 14 , self.id , 4 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.25*size;
	duster.image_yscale = 0.25*size;
}

if ( timer >= time - 1 )
  {
sidebtimer  = 40
  attack_type = "none";
  if ( air == 0 )
    state_type = "stand";
    else
    state_type = "jump";
  timer = 0;
  time = -1;
  }