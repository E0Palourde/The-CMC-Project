if ( state_type = "stand" || state_type = "run" || state_type = "jump" )
  {
    hover_timer = hover_time;
    if ( moveright )
	facing = 0;
    if ( moveleft )
	facing = 1;
    state_type = "air_attack";
    attack_type = "upb";
    timer = 0;
    time = 60;
    sprite_index = upb_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 9: image_index = 1; break;
	case 13: image_index = 2; break;
	case 17: image_index = 3; break;
	case 36: image_index = 4; break;
	case 40: image_index = 5; break;
	case 44: image_index = 6; break;
	case 48: image_index = 7; break;
	case 52: image_index = 8; break;
	case 56: image_index = 9; break;
	case 100: image_index = 5; break;
	case 103: image_index = 6; break;
	case 106: image_index = 7; break;
	case 109: image_index = 8; image_xscale *= 1.1; image_yscale *= 1.1; break;
	case 112: image_index = 9; break;
	case 116: image_index = 10; break;
	case 118: image_index = 11; break;
	case 120: image_index = 12; break;
	case 122: image_index = 13; break;
	case 124: image_index = 14; break;
	case 126: image_index = 15; image_xscale *= 1.1; image_yscale *= 1.1; break;
	case 128: image_index = 16; break;
	case 134: image_index = 17; break;
	case 136: image_index = 18; break;
	case 140: image_index = 19; break;
	case 144: image_index = 20; break;
	case 148: image_index = 21; break;
	case 150: image_index = 22; break;
	case 152: image_index = 23; break;
	case 153: image_index = 24; break;
	case 156: image_index = 25; image_xscale *= 1.1; image_yscale *= 1.1; break;
	case 158: image_index = 26; break;
      }

    fast_fall = 0;
    fast_fall_temp = 0;

    if ( timer <= 15 && vspeed > 0 )
	vspeed = 0;
    if ( timer = 5 )
      {
	sound_play(upb_sound2);
	instance_create(x+size*(13-facing*26),y-18*size,obj_spark_effect);
	spark = instance_create(x,y,obj_spark_shockwave);
	spark.image_xscale *= 0.7*size;
	spark.image_yscale *= 0.1*size;
	spark.image_blend = c_yellow;
	spark.image_alpha = 0.8;
      }
    if ( timer = 14 )
      {
	sound_play(upb_sound1);
	create_homing_bubble(1,1,11,28,self.id,3);
	hspeed = size * (1.5-facing*3);
	vspeed = -5.65*size;
	instance_create(x,y,obj_down_impact);
      }
    if timer >= 14 && timer <= 33 {
	if timer = 14 || timer = 18 || timer = 22 || timer = 26 || timer = 30 {
	image_blend = c_red
	alarm[7] = 5
	}
	else if timer = 16 || timer = 20 || timer = 24 || timer = 28 || timer = 32 {
	image_blend = c_yellow;
	alarm[7] = 5
	}
	else {
	image_blend = c_white;
	}
    }
    if ( timer = 17 )
	create_homing_bubble(0.45,0.45,11,28,self.id,15);
    if ( timer >= 16 && timer <= 26 )
	vspeed -= grav * GRAV_MUL * 0.825*size;
    if ( timer = 45 )
	air_move = 1;
    if ( timer >= 15 && timer <= 33 && instance_exists(proj) )
      {
	proj.x = x + size * (11-facing*22) + hspeed * 0.25;
	proj.y = y - 28*size + vspeed * 0.5;
      }
    if timer > 25 && timer < 100 {
	force_edge_grab = 1; }
    if ( target > 0 && distance_to_object(target) < 5*size && timer < 100 )
    if ( !target.intangible )
      {
	timer = 100;
	time = 164;
	force_edge_grab = 0;
	sound_play(catchsnd);
	sprite_index = upb2_sprite;
	instance_create(target.x,target.y-9*target.size,obj_grab_spark);
	x = target.x - target.size * (20-facing*40);
	y = target.y + 6 * target.size;
	if target.air = 0
	target.state_type = "flinch"
	else
	target.state_type = "air_flinch";
	target.attack_type = "none";
	target.timer = 0;
	target.time = 70;
	target.timer_speed = 0;
	target.sprite_index = target.flinch_sprite;
	target.facing = 1-facing;
	target.alarm[0] = 2;
	force_edge_grab = 0;
      }

    if ( timer >= 100 && timer <= 155 )
      {
	target.gethit = 0;
	target.speed = 0
	target.gravity = 0
	target.vspeed = -0.3
	target.alarm[0] = 2;
	speed = 0;
	gravity = 0;
	gravity_lock = 1;
	intangible = 1;
	air_move = 1;
      }
    if ( timer = 109 )
	{
	sound_play(swingsnd1);
	create_hitbox(3,361,0,0,4,2,punch2,obj_spark_hit1,0.54 , 0.97 , 23.25 , 39.75,self.id,2,5);
	hitbox.di = -1
	}
    if ( timer = 126 )
	{
	sound_play(swingsnd2);
	create_hitbox(5,361,0,0,4,2,punch3,obj_spark_hit2,0.70 , 1.11 , 14.25 , 43.50,self.id,2,5);
	hitbox.di = -1
	hitbox.hit_stun = 10; 
	}
    if ( timer = 156 )
      {
	create_throw_box(8,25+facing*130,5,7,23,3,slash3,obj_spark_slash3,1.39 , 0.63 , 30.00 , 28.50,self.id,4,5);
	shaker = instance_create(x,y,obj_shakescreen3);
	shaker.ampl = 3.2;
	shaker.xampl = 0;
	shaker.time = 12;
	spark = instance_create(x+size*(45-facing*90),y-34*size,obj_spark_explode2);
	spark.image_xscale *= size;
	spark.image_yscale *= size;
	intangible = 0;
	speed = 6*size;
	direction = 110 - facing*40;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    image_blend = c_white;
    if ( attack_success )
	state_type = "jump";
    else
	state_type = "fall";
    attack_type = "none";
    timer = 0;
    time = -1;
  }