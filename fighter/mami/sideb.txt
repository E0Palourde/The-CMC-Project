fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" {
        state_type = "air_attack"
        attack_type = "downb"
        image_speed = 0
        sprite_index = sideb_sprite;
        image_index=0
        timer = 0
        time = 197;
		hspeed = 0;
    }

if ( timer < time )
  {
state_type = "air_attack"
	switch (timer)
	{
		//startup of the move
		
	    case 4: image_index = 1; break;
	    case 8: image_index = 2; break;
	    case 12: image_index = 3; break;	
	    case 16: image_index = 4; break;
	    case 19: image_index = 5; break;
	    case 22: image_index = 6; break;
	    case 24: image_index = 7; break;
	    case 26: image_index = 8; break;
        case 31: image_index = 9; break;
	    case 33: image_index = 10; break;
	    case 37: image_index = 11; break;
	    case 42: image_index = 12; break;
	    case 45: image_index = 13; break;
	    case 49: image_index = 14; break;
	    case 52: image_index = 15; break;
			
		//second part
		
		case 59: sprite_index = sideb_attacking_sprite; image_index = 0; break;
		case 61: image_index = 1; break;
		case 63: image_index = 2; break;
		case 70: image_index = 3; break;
		case 73: image_index = 4; break;
		case 78: image_index = 5; break;
		case 81: image_index = 6; break;
		case 83: image_index = 8; break;
		case 89: image_index = 9; break;
		case 92: image_index = 10; break;
		case 95: image_index = 11; break;
		case 98: image_index = 12; break;
		case 100: image_index = 13; break;
		case 106: image_index = 14; break;
		case 110: image_index = 15; break;
		case 114: image_index = 16; break;
		case 117: image_index = 17; break;
		case 123: image_index = 18; break;
		case 126: image_index = 19; break;
		case 131: image_index = 20; break;
		case 134: image_index = 21; break;
		case 137: image_index = 22; break;
		case 142: image_index = 23; break;
		case 146: image_index = 24; break;
		case 151: image_index = 25; break;
		case 155: image_index = 26; break;
		case 159: image_index = 27; break;
		case 162: image_index = 28; break;
		case 165: image_index = 29; break;
		case 168: image_index = 30; break;
		case 173: image_index = 30; break;
		case 175: image_index = 30; break;
		case 180: image_index = 31; break;
		case 183: image_index = 32; break;
		case 190: image_index = 33; break;
	}
	
	if timer >= 1 && timer <= 180 {
	vspeed = 0
	hspeed = 0
	}
	
  if ( timer = 2 ) 
      {
	guncircle = create_spark(15,20,self.id);
    guncircle.sprite_index = guncircle_sprite;
    guncircle.image_speed = 0.1;
    guncircle.image_alpha = 1.0;
    guncircle.image_xscale = image_xscale*1;
    guncircle.image_yscale = image_yscale*1;
    guncircle.depth = depth - 0.1;
	guncircle.snap = self.id
	}

  if ( timer = 3 || timer = 14 ) 
      {
      sound_play(gunrev_sound);
	}	
	
  if ( timer = 61 || timer = 77 || timer = 98 || timer = 117 || timer = 127 || timer = 135 || timer = 145 ) 
      {
	   sound_play(bshoot_sound);
	   create_hitbox(2,90,2,0,2,3,kick2,obj_spark_hit2,2,0.7,53,29,self.id,3,2);
	   hitbox.di = 0.30
	   effectb = create_spark(27,21,self.id);
       effectb.sprite_index = guneff_sprite;
       effectb.image_speed = 0.7;
       effectb.image_alpha = 1.0;
       effectb.image_xscale = image_xscale*1;
       effectb.image_yscale = image_yscale*1;
       effectb.depth = depth - 0.1;
       effectb.snap = self.id
	   duster = instance_create(x,y,obj_dust_effect);
	   duster.facing = facing;
	   duster.image_xscale *= 1*size;
	   duster.image_yscale *= 1*size;	  
      }
	  
	if ( timer = 162 ) 
      {
	  sound_play(bshoot_sound);
	  create_hitbox(8,angle_correct(15),6,7,10,7,kick3,obj_spark_hit3,2,0.7,53,29,self.id,3,2);
	  effectb = create_spark(27,21,self.id);
      effectb.sprite_index = guneff_sprite;
      effectb.image_speed = 0.7;
      effectb.image_alpha = 1.0;
      effectb.image_xscale = image_xscale*1;
      effectb.image_yscale = image_yscale*1;
      effectb.depth = depth - 0.1;
      effectb.snap = self.id
	  duster = instance_create(x,y,obj_dust_effect);
	  duster.facing = facing;
	  duster.image_xscale *= 1*size;
	  duster.image_yscale *= 1*size;	
    
	}
	
  }
 if (timer >= 162){
		if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 90) || (target.weight > .22 && target.weight < .3 && target.percent > 110) || (target.weight > .3 && target.percent > 120)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
				}
  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
	attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}