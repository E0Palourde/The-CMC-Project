fast_fall = 0
fast_fall_temp = 0
if ( state_type == "jump" )
  {
  state_type = "air_attack";
  attack_type = "dair";
  image_speed = 0;
  image_index = 0;
  sprite_index = dair_sprite;
  timer = 0;
  time = 69;
  timer_speed = 1;
  temp = air;
  dair_fallspeed = 0;
  create_hurtbox_precise(self.id,70,dair_mask)
  }
if timer < time {
	switch (timer)
	{
	case 2: image_index = 1; break;
	case 3: image_index = 2; break;
	case 4: image_index = 3; break;
	case 8: image_index = 4; break;
	case 11: image_index = 5; break;
	
	case 14: image_index = 6; break;
	case 20: image_index = 7; break;
	case 24: image_index = 8; break;
	case 27: image_index = 9; break;
	case 30: image_index = 10; break;
	case 34: image_index = 11; break;
	case 37: image_index = 6; break;
	case 40: image_index = 7; break;
	case 44: image_index = 12; break;
	case 58: image_index = 13; break;
	case 62: image_index = 14; break;
	case 66: image_index = 15; break;

	}
            if timer >= 1 && timer <= 13 && timer_speed > 0 {
                vspeed = 0
                hspeed = 0
            }
if ( timer == 14)
	{
	
		spark = create_spark ( 0  , -82  , fire_effect_sprite , 0.25 , 0.43 , 0.43);
		//spark.image_alpha = 0.35;
		spark.image_xscale = spark.image_xscale * (1-facing*2);
		spark.depth = -1;
		spark.alarm[0] = 99999999999
	}
	
	
	if ( timer > 6 && timer <= 15)
	{
		spark.image_alpha += 0.1;
	}
	
	if ( timer == 15)
	{
		spark.image_alpha = 0.85;
	}
if (spark.image_alpha != 0)
	{
		spark.x = (x+21 * (1-facing*2))*size;
		spark.y = y-90*size;
	}
if facing=0
{
spark.image_angle=305+-70*facing*size
}
if facing=1
{
spark.image_angle=125+-70*facing*size
}
            if timer = 14 {
                sound_play(dair_sound);
                temp_fall_speed = 2
               play_attack_voice()
             //35+110*facing
             
                hspeed = (4-facing*8)*size
                vspeed=7*size
            }
if timer = 14 || timer = 18 || timer = 22 || timer = 26 || timer = 30 || timer = 34 || timer = 38
{
  create_hitbox(1,320+-100*facing,6.5,0,5,2,fire2,obj_spark_fire1,1.5,1.5,6,8,self.id,4,3);
  hitbox.hit_stun = 3
	hitbox.di = 0.6;
	hitbox.weight_kb = 1
  create_hitbox2(1.5,326+-112*facing,4,0,5,2,fire2,obj_spark_fire1,1.3,1.3,12,-9,self.id,4,3);
  hitbox2.hit_stun = 3
	hitbox2.di = 0.7;
	hitbox2.weight_kb = 1
}
if timer = 40 {
  create_hitbox2(12,326+-112*facing,6,4,5,16,fire2,obj_spark_fire1,1.1,1.1,12,-9,self.id,4,3);
  hitbox2.hit_stun = 7
	 create_hitbox(9,25+130*facing,6,4,5,12,fire2,obj_spark_fire1,1.4,1.4,4,9,self.id,4,3);
  hitbox.hit_stun = 9
}
if timer = 45
{
with spark
{
instance_destroy()
}
}
            if timer >= 24 && timer <= 42 && timer_speed > 0 {
                vspeed = 7*size
                hspeed = (4-facing*8)*size
		
            }
            if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=22;
		hspeed=0
with spark
{
instance_destroy()
}
		image_speed=0.40 }
}
if ( timer >= time -1 && state_type != "flinch" && state_type != "air_flinch" )
  {
with spark
{
instance_destroy()
}
    attack_type = "none";
	state_type = "stand";
	sound_stop(dair_sound);
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 0;
	}
    timer = 0;
    time =-1;
    }