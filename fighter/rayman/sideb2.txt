if ( state_type == "jump" || state_type == "run" || state_type == "stand" || state_type == "crouch" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "sideb";
  image_speed = 0;
  sprite_index = sideb_sprite;
  image_index = 0;
  timer = 0;
  land_timer = 0;
  time = 257;
  timer_speed = 1;
  special = 1;
  retreat = 0;
  hover = 0;
  target = noone;
  proj = noone;
  temp = 0;
  }

if ( timer < 128 )
  {
    if timer > 30 && timer < 47 && target = noone {
        if collision_rectangle(x+(5-facing*10)*size,y-14*size,x+(50-facing*100)*size,y-34*size,obj_edge_left,1,1) {
            facing = 0
            edge = instance_nearest(x+20*size,y-5*size,obj_edge_left)
            y = edge.y + sprite_get_height(sprite_index)*image_yscale - 13
            x = edge.x-7*size
            temp = 1
            state_type = "jump"
            attack_type = "none"
        }
        if collision_rectangle(x+(5-facing*10)*size,y-14*size,x+(50-facing*100)*size,y-34*size,obj_edge_right,1,1) {
            facing = 1
            edge = instance_nearest(x+20*size,y-5*size,obj_edge_right)
            y = edge.y + sprite_get_height(sprite_index)*image_yscale - 13
            x = edge.x+7*size
            state_type = "jump"
            attack_type = "none"
            temp = 1
        }
    }
  if ( !air ) hspeed *= 0.9;
  switch ( timer )
    {
    case 2: image_index = 1; break;
    case 6: image_index = 2; break;
    case 9: image_index = 3; break;
    case 16:
      create_homing_bubble ( 0.6 , 0.7 , 22 , 17 , self.id , 10 );
      asda = 22 * size;
      image_index = 4;
      break;
    case 18:
      image_index = 5;
      proj . image_xscale *= 2;
      asda = 28 * size;
      break;
    case 20:
      image_index = 6;
      proj . image_xscale *= 1.5;
      asda = 36 * size;
      break;
    case 22:
      image_index = 7;
      break;
    case 24:
      image_index = 8;
      break;
    case 44: image_index = 9; break;
    case 46: image_index = 10; break;
    case 48: image_index = 11; break;
    case 50: image_index = 12; break;
    case 52: image_index = 13; break;
    case 54:
      attack_type = "none";
      if ( air )
        state_type = "jump";
        else
        state_type = "stand";
      timer = 0;
      time = -1;
      break;
    }
  if ( instance_exists ( proj ) )
    {
    proj . x = x + asda - facing * 2 * asda;
    proj . y = y - 17 * size;
    }
  if ( instance_exists ( target ) )
  if ( target != noone && target != self.id && target >= 0 && target . intangible == 0 && string ( target . state_type ) != "final_smash" && target . intangible_frames <= 0 )
    {
    attacking = 0;
    special = 0;
    sound_play ( catchsnd );
    instance_create ( target . x , target . y - 16 , obj_spark_effect );
    timer = 127;
    }
  }

if ( timer == 144 ) timer = 128;
if ( timer >= 128 && timer < 144 )
  {
  target . state_type = "air_flinch";
  target . facing = facing;
  target . x = x + 20 * size - 40 * size * facing;
  target . y = y;
  if ( target . timer > 3 )
    target . timer = 0;
  target . time = 10;
  target . timer_speed = 1;
  target . alarm [ 0 ] = 10;
  target . hspeed = 0;
  target . vspeed = 0;
  image_speed = 0.25;
  if ( ai )
    {
    var _aa;
    _aa = instance_nearest ( x , y , obj_edge );
    special = 0;
    if ( x < room_width / 2 ) moveleft = 1; else moveright = 1;
    if ( _aa.y + 8 < y || distance_to_object ( _aa ) < 10 ) special = 1;
    if ( x < 30 || x > room_width - 30 ) special = 1;
    }
  if ( attacking || special )
    {
    if special
	temp = 1;
    timer = 191;
    exit;
    }
  retreat += 9 / 180;
  if ( target . ai )
    {
    if ( random ( 60 - cpu_level [ other.number-1 ] ) < 5 ) retreat += 0.8;
    }
  if ( target . moveright[1] == 2 || target . moveleft[1] == 2 ) retreat += 1;
  if ( retreat > 4 )
    {
    state_type = "air_flinch";
    hspeed = -3 + facing * 6;
    vspeed = -2;
    target . hspeed = 4 - facing * 8;
    timer = 0;
    time = 20;
    exit;
    }
  if ( air )
    {
    if ( vspeed < 0 )
      sprite_index = sideb_jump_sprite;
      else
      sprite_index = sideb_fall_sprite;
    land_timer = 7;
    hspeed *= 0.97;
    if ( moveright )
      {
      facing = 0;
      hspeed = 1.2;
      }
    if ( moveleft )
      {
      facing = 1;
      hspeed = -1.2;
      }
    }
    else
    {
    if ( land_timer > 0 )
      {
      if ( land_timer == 7 )
        {
        duster = instance_create(x,y,obj_dust_effect);
        duster.facing = facing;
        duster.image_xscale *= 0.7;
        duster.image_yscale *= 0.7;
        duster = instance_create(x,y,obj_dust_effect);
        duster.facing = !facing;
        duster.image_xscale *= 0.7;
        duster.image_yscale *= 0.7;
        }
      land_timer -= 1;
      sprite_index = sideb_land_sprite;
      hspeed *= 0.95;
      exit;
      }
    hspeed *= 0.9;
    if ( moveright || moveleft )
      sprite_index = sideb_walk_sprite;
      else
      sprite_index = sideb_idle_sprite;
    if ( moveright )
      {
      facing = 0;
      hspeed = 2;
      }
    if ( moveleft )
      {
      facing = 1;
      hspeed = -2;
      }
    if ( movejump )
      {
      vspeed = -4.9;
      }
    }
  }

if ( timer > 191 )
  {
  if ( !air ) hspeed *= 0.9;
  if ( timer < 197 )
    {
    target . state_type = "air_flinch";
    target . facing = facing;
    target . x = x + 20 * size - 40 * size * facing;
    target . y = y;
    if ( target . timer > 3 )
      target . timer = 0;
    target . time = 10;
    target . timer_speed = 1;
    target . alarm [ 0 ] = 10;
    target . hspeed = 0;
    target . vspeed = 0;
    }
  switch ( timer )
    {
    case 192: sprite_index = sideb2_sprite; image_index = 0; image_speed = 0; break;
    case 193: image_index = 1; break;
    case 194: image_index = 2; break;
    case 195: image_index = 3; break;
    case 196: image_index = 4; break;
    case 197:
	if !temp
      create_hitbox ( 9 , 45+facing*90 , 5.7 , 3.9 , 14 , 10 , slash3 , obj_spark_slash3 , 0.6 , 0.6 , 24 , 11 , self.id , 8 , 3 );
	else {
      create_hitbox ( 9 , 45+facing*90 , 5.7 , 3.9 , 14 , 10 , slash3 , obj_spark_slash3 , 0.6 , 0.6 , 24 , 11 , self.id , 8 , 3 );
	}
      image_index = 5;
      break;
    case 214: image_speed = 0.5 *temp*0.33; break;
    }
  }

if ( instance_exists ( target ) )
  {
  with ( target )
    {
    if ( place_meeting ( x , y , obj_wall ) )
      {
      x = other.x;
      }
    }
  }

if ( timer >= 224+temp*20 && state_type != "flinch" && state_type != "air_flinch" )
  {
  if ( ai ) special = 0;
  attack_type = "none";
  if ( air )
    state_type = "jump";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }
