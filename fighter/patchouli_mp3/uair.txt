if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "uair";
  image_speed = 0;
  image_index = 0;
  sprite_index = uair_sprite;
  timer = 0;
  time = 55;
  timer_speed = 1;
  }
  
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 6: image_index = 3; break;
  case 8: image_index = 4; break;
  case 10: image_index = 5; break;
  case 40: image_index = 6; break;
  case 43: image_index = 7; break;
  case 47: image_index = 8; break;
  case 51: image_index = 9; break;
  }

//-------------------------------------------------------CREATE BOOK, WIND & HITBOX------------------------------------------------------
if ( timer = 10 )
{
sound_play ( uair_voice );
sound_play ( patchy_wind_sound3 );
create_hitbox(8,65+facing*60, 7 , 6 ,13 , 1 , patchoulislash3 , obj_spark_slash3, 1.54 , 0.8 , 5 , 47 ,self.id, 30 , 3 );

book = instance_create( x + 5 * (1-facing*2) * size , y - 38 * size , obj_spark );
book.sprite_index = uair_book_sprite;
book.image_xscale = 0.4 * (1-facing*2) * size;
book.image_yscale = 0.4 * size;
book.number = number;
book.image_speed = 0.8;
book.snap = self.id;
book.loop = 5;
book.script = char_custom12;
book.owner = self.id;
book.keepmain = self.keepmain

pwind = instance_create( x + 5 * (1-facing*2) * size , y - 45 * size , obj_spark );
pwind.sprite_index = uair_wind_sprite;
pwind.image_xscale = 0.4 * (1-facing*2) * size;
pwind.image_yscale = max ( 0.05 , random(1) - 0.7 ) * size;
pwind.image_speed = 0;
pwind.image_alpha = 1;
pwind.image_angle = choose( random(30) , random(-30) );
pwind.snap = self.id;
pwind.script = char_custom12;
pwind.owner = self.id;
pwind.keepmain = self.keepmain
}

if ( timer = 16 )
{
pwind2 = instance_create( x + 5 * (1-facing*2) * size , y - 45 * size , obj_spark );
pwind2.sprite_index = uair_wind_sprite;
pwind2.image_xscale = 0.4 * (1-facing*2) * size;
pwind2.image_yscale = max ( 0.05 , random(1) - 0.7 ) * size;
pwind2.image_speed = 0;
pwind2.image_alpha = 1;
pwind2.image_angle = choose( random(30) , random(-30) );
pwind2.snap = self.id;
pwind2.script = char_custom12;
pwind2.owner = self.id;
pwind2.keepmain = self.keepmain
}

if ( timer = 22 )
{
pwind3 = instance_create( x + 5 * (1-facing*2) * size , y - 45 * size , obj_spark );
pwind3.sprite_index = uair_wind_sprite;
pwind3.image_xscale = 0.4 * (1-facing*2) * size;
pwind3.image_yscale = max ( 0.05 , random(1) - 0.7 ) * size;
pwind3.image_speed = 0;
pwind3.image_alpha = 1;
pwind3.image_angle = choose( random(30) , random(-30) );
pwind3.snap = self.id;
pwind3.script = char_custom12;
pwind3.owner = self.id;
pwind3.keepmain = self.keepmain
}

if ( timer = 28 )
{
pwind4 = instance_create( x + 5 * (1-facing*2) * size , y - 45 * size , obj_spark );
pwind4.sprite_index = uair_wind_sprite;
pwind4.image_xscale = 0.4 * (1-facing*2) * size;
pwind4.image_yscale = max ( 0.05 , random(1) - 0.7 ) * size;
pwind4.image_speed = 0;
pwind4.image_alpha = 1;
pwind4.image_angle = choose( random(30) , random(-30) );
pwind4.snap = self.id;
pwind4.script = char_custom12;
pwind4.owner = self.id;
pwind4.keepmain = self.keepmain
}

if ( timer = 34 )
{
pwind5 = instance_create( x + 5 * (1-facing*2) * size , y - 45 * size , obj_spark );
pwind5.sprite_index = uair_wind_sprite;
pwind5.image_xscale = 0.4 * (1-facing*2) * size;
pwind5.image_yscale = max ( 0.05 , random(1) - 0.7 ) * size;
pwind5.image_speed = 0;
pwind5.image_alpha = 1;
pwind5.image_angle = choose( random(30) , random(-30) );
pwind5.snap = self.id;
pwind5.script = char_custom12;
pwind5.owner = self.id;
pwind5.keepmain = self.keepmain
}

if ( timer = 40 )
{
pwind6 = instance_create( x + 5 * (1-facing*2) * size , y - 45 * size , obj_spark );
pwind6.sprite_index = uair_wind_sprite;
pwind6.image_xscale = 0.4 * (1-facing*2) * size;
pwind6.image_yscale = max ( 0.05 , random(1) - 0.7 ) * size;
pwind6.image_speed = 0;
pwind6.image_alpha = 1;
pwind6.image_angle = choose( random(30) , random(-30) );
pwind6.snap = self.id;
pwind6.script = char_custom12;
pwind6.owner = self.id;
pwind6.keepmain = self.keepmain
}

     if (timer >= 10){
if (attack_success || target.object_index == obj_enemy) && (temp_spawn >= 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 85) || (target.weight > .22 && target.weight < .3 && target.percent > 105) || (target.weight > .3 && target.percent > 115)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 
//-------------------------------------------------------BOOK CONTROLLER------------------------------------------------------
if ( timer >= 10 && timer <= 40 )
{
vspeed = -0.8 * size;
gravity_lock = 2;
fast_fall = 0;
fast_fall_temp = 0;
}

if ( timer = 43 )
{
with ( book )
	{
	instance_destroy();
	}
}


//-------------------------------------------------------WIND CONTROLLER------------------------------------------------------
if ( instance_exists ( pwind ) )
	{
	pwind.image_alpha -= 0.07;
	pwind.image_xscale += 0.02 * (1-facing*2);
	pwind.image_yscale += 0.01;
	
		if ( pwind.image_alpha <= 0 )
		{
			with ( pwind )
			{
			instance_destroy();
			}
		}
	}

if ( instance_exists ( pwind2 ) )
	{
	pwind2.image_alpha -= 0.07;
	pwind2.image_xscale += 0.02 * (1-facing*2);
	pwind2.image_yscale += 0.01;
	
		if ( pwind2.image_alpha <= 0 )
		{
			with ( pwind2 )
			{
			instance_destroy();
			}
		}
	}
	
if ( instance_exists ( pwind3 ) )
	{
	pwind3.image_alpha -= 0.07;
	pwind3.image_xscale += 0.02 * (1-facing*2);
	pwind3.image_yscale += 0.01;
	
		if ( pwind3.image_alpha <= 0 )
		{
			with ( pwind3 )
			{
			instance_destroy();
			}
		}
	}
	
if ( instance_exists ( pwind4 ) )
	{
	pwind4.image_alpha -= 0.07;
	pwind4.image_xscale += 0.02 * (1-facing*2);
	pwind4.image_yscale += 0.01;
	
		if ( pwind4.image_alpha <= 0 )
		{
			with ( pwind4 )
			{
			instance_destroy();
			}
		}
	}
	
if ( instance_exists ( pwind5 ) )
	{
	pwind5.image_alpha -= 0.07;
	pwind5.image_xscale += 0.02 * (1-facing*2);
	pwind5.image_yscale += 0.01;
	
		if ( pwind5.image_alpha <= 0 )
		{
			with ( pwind5 )
			{
			instance_destroy();
			}
		}
	}
	
if ( instance_exists ( pwind6 ) )
	{
	pwind6.image_alpha -= 0.07;
	pwind6.image_xscale += 0.02 * (1-facing*2);
	pwind6.image_yscale += 0.01;
	
		if ( pwind6.image_alpha <= 0 )
		{
			with ( pwind6 )
			{
			instance_destroy();
			}
		}
	}


//-------------------------------------------------------LAND & END------------------------------------------------------
if ( air = 0 )
  {
if ( instance_exists ( book ) )
	{
	with ( book )
		{
		instance_destroy();
		}
	}
if ( instance_exists ( pwind1 ) )
	{
	with ( pwind1 )
		{
		instance_destroy();
		}
	}
if ( instance_exists ( pwind2 ) )
	{
	with ( pwind2 )
		{
		instance_destroy();
		}
	}
if ( instance_exists ( pwind3 ) )
	{
	with ( pwind3 )
		{
		instance_destroy();
		}
	}
if ( instance_exists ( pwind4 ) )
	{
	with ( pwind4 )
		{
		instance_destroy();
		}
	}
if ( instance_exists ( pwind5 ) )
	{
	with ( pwind5 )
		{
		instance_destroy();
		}
	}
if ( instance_exists ( pwind6 ) )
	{
	with ( pwind6 )
		{
		instance_destroy();
		}
	}
dontrepeat = 0;
state_type = "land";
attack_type = "none";
timer = 0;
time = 9;
sprite_index = land_sprite;
  }

if ( timer >= time - 1 )
  {
	  dontrepeat = 0;
  attack_type = "none";
  if ( air > 0 )
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 11;
	}
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }