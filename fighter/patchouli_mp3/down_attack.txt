if ( state_type = "down" )
  {
  state_type = "attack";
  attack_type = "down_attack";
  image_speed = 0;
  sprite_index = down_sprite;
  image_index = 0;
  timer = 1;
  time = 43;
  timer_speed = 1;
  }

switch ( timer )
  {
  case 2: image_index=1;  break;
  case 4: image_index=2;  break;
  case 6: image_index=3;  break;
  case 8: image_index=4;  break;
  case 10: image_index=5;  break;
  case 12: sprite_index = upb_sprite; image_index=5;  break;
  case 14: image_index=6;  break;
  case 17: image_index=7;  break;
  case 20: image_index=8;  break;
  case 23: image_index=9;  break;
  case 26: image_index=10;  break;
  case 29: image_index=11;  break;
  case 32: image_index=12;  break;
  case 35: image_index=13;  break;
  }  

if ( timer == 1 )
  intangible = 1
 
if ( timer == 14 )
  {
  sound_play(patchy_water_sound);
  
  eff = instance_create( x - 1 * (1-facing*2) * size , y  - 15 * size , obj_spark);
  eff.sprite_index = downb_ring_sprite2;
  eff.image_xscale = 0.3 * (1 - facing * 2) * size;
  eff.image_yscale = 0.3 * size;
  eff.image_alpha = 0.8;
  eff.image_index = 0;
  eff.image_speed = 1;
  eff.depth = -7;
  eff.snap = self.id;
  eff.script = char_custom12;
  eff.owner = self.id;
  eff.keepmain = self.keepmain
  
  splasheffect1 = instance_create( x - 1 * (1-facing*2) * size , y - 10 * size , obj_spark);
  splasheffect1.sprite_index = splash_effect_sprite ;
  splasheffect1.image_xscale = 0.4 * (1 - facing * 2) * size;
  splasheffect1.image_yscale = 0.4 * size;
  splasheffect1.direction = 30;
  splasheffect1.speed = 3;
  splasheffect1.gravity = 0.2;
  splasheffect1.gravity_direction = 270;
  splasheffect1.image_alpha = 0.9;
  splasheffect1.image_index = 0;
  splasheffect1.image_angle = random(360);
  splasheffect1.image_speed = 0.5;
  splasheffect1.depth = -7;

  splasheffect2 = instance_create( x - 1 * (1-facing*2) * size , y - 10 * size , obj_spark);
  splasheffect2.sprite_index = splash_effect_sprite ;
  splasheffect2.image_xscale = 0.4 * (1 - facing * 2) * size;
  splasheffect2.image_yscale = 0.4 * size;
  splasheffect2.direction = 150;
  splasheffect2.speed = 3;
  splasheffect2.gravity = 0.2;
  splasheffect2.gravity_direction = 270;
  splasheffect2.image_alpha = 0.9;
  splasheffect2.image_index = 0;
  splasheffect2.image_angle = random(360);
  splasheffect2.image_speed = 0.5;
  splasheffect2.depth = -7;
  
  create_hitbox(8,30+facing*120,5.4,4.9,4,4,water3,obj_spark_water,1.4 , 0.84 , 14.40 , 14 ,self.id,22,3);
  create_hitbox2(8,150-facing*120,5.4,4.9,4,4,water3,obj_spark_water,1.4 , 0.84 , -14 , 14 ,self.id,22,3);
  }

// Intangible ends the same frame the last hitbox ends
if ( timer == 20 )
  intangible = 0

if ( timer >= time - 1 )
  {
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }