if ( state_type == "stand" || state_type == "run" || state_type == "jump" || state_type == "shielding" )
  {
  hspeed = 0;
  size = csize;
  state_type = "air_attack";
  attack_type = "final_smash";
  image_speed = 0;
  image_index = 0;
  sprite_index = ssmash_sprite;
  timer = 0;
  time = 84;
  timer_speed = 1;
  intangible = 1;
  final_smashes += 1;
  smash_power = 0;
  air_move = 0;
  sound_play(spin_sound);
  freezer = instance_create(x,y,obj_freeze);
  freezer.alarm[0] = 42;
  freezer.dontpause = self.id;
  temp2 = 0;
  }

switch (timer)
{
case 40: image_index = 7; break;
case 43: image_index = 8; break;
case 46: image_index = 9; break;
case 49: image_index = 10; break;
case 81: image_index = 11; break;
}

if timer < 464
{  
gravity = 0;
gravity_lock = 1;
vspeed = 0;
fast_fall = 0;
fast_fall_temp = 0;
}

if timer = 43
{
create_hitbox ( 2 , 25+facing*130 , 3.85 , 0 , -1 , 12 , slash3 , obj_spark_slash4 , 1.23 , 0.85 , 25.55 , 25.55 , self.id , 43 , 6);
hspeed = 6 * (1-facing*2);
}

if timer >= 43 && timer < 84
{
after_image(6,c_red,0.5);
}

if timer > 43 && attack_success = 1 && timer < 84
{
speed = 0;
target1 = target
timer = 100;
time = 467;
target1.y = self.y;
target1.x = x + (30 - facing*60)*size
target1.speed = 0;
target1.gravity_lock = 2;
target1.ignore_physics = 1;
}

if timer = 100
{
image_speed = 0;
image_index = 0;
bfx = create_blur(x,y,self.id);
bfx.sprite_index = telepillar_sprite;
bfx.image_index = 0;
bfx.image_speed = 0.75;
bfx.image_xscale = 0.3*(1-facing*2)*size;
bfx.image_yscale = 0.3*size;
bfx.snap = self.id
bfx.depth = depth - 1;
bfx.x = x + 65 * (1-facing*2) *size;
bfx.y = y *size; 
bfx.image_alpha = 0;
sound_play(teleport_sound);
}

if timer >=100 && timer  <=105
{
bfx.image_alpha += 0.2;
}

if timer = 105 
{
trevor = instance_create(x,y,obj_spark);
trevor.sprite_index = trevor_sprite;
trevor.image_index = 0;
trevor.image_speed = 0;
trevor.image_xscale = -0.83*(1-facing*2)*size;
trevor.image_yscale = 0.83*size;
trevor.snap = self.id
trevor.depth = 1;
trevor.x = x + 65 * (1-facing*2) *size;
trevor.y = y *size;
}

if timer > 100 && timer < 457
{
target1.time = 600;
target1.timer = 0;
target1.sprite_index=target1.flinch_sprite
target1.state_type = "flinch"
target1.speed = 0;
target1.gravity_lock = 2;
target1.ignore_physics = 1;
target1.y = self.y;
target1.x = x + (30 - facing*60)*size
} 

if timer = 145
{
with (bfx)
{
instance_destroy();
}
}

switch (timer)
{
case 145: image_index = 1; sound_play(swingsnd2); break;
case 148: image_index = 2; sound_play(swingsnd2); break;
case 151: image_index = 3; sound_play(swingsnd2); break;
case 154: image_index = 4; sound_play(swingsnd2); break;
case 157: image_index = 5; sound_play(swingsnd2); break;
case 160: image_index = 6; sound_play(swingsnd2); break;
case 166: image_index = 1; sound_play(swingsnd2); break;
case 169: image_index = 2; sound_play(swingsnd2); break;
case 172: image_index = 3; sound_play(swingsnd2); break;
case 175: image_index = 4; sound_play(swingsnd2); break;
case 178: image_index = 5; sound_play(swingsnd2); break;
case 181: image_index = 6; sound_play(swingsnd2); break;
case 184: image_index = 1; sound_play(swingsnd2); break;
case 187: image_index = 2; sound_play(swingsnd2); break;
case 190: image_index = 3; sound_play(swingsnd2); break;
case 193: image_index = 4; sound_play(swingsnd2); break;
case 196: image_index = 5; sound_play(swingsnd2); break;
case 199: image_index = 6; sound_play(swingsnd2); break;
case 202: image_index = 1; sound_play(swingsnd2); break;
case 205: image_index = 2; sound_play(swingsnd2); break;
case 208: image_index = 3; sound_play(swingsnd2); break;
case 211: image_index = 4; sound_play(swingsnd2); break;
case 214: image_index = 5; sound_play(swingsnd2); break;
case 217: image_index = 6; sound_play(swingsnd2); break;
case 220: image_index = 1; sound_play(swingsnd2); break;
case 223: image_index = 2; sound_play(swingsnd2); break;
case 226: image_index = 3; sound_play(swingsnd2); break;
case 229: image_index = 4; sound_play(swingsnd2); break;
case 232: image_index = 5; sound_play(swingsnd2); break;
case 235: image_index = 6; sound_play(swingsnd2); break;
case 238: image_index = 1; sound_play(swingsnd2); break;
case 241: image_index = 2; sound_play(swingsnd2); break;
case 244: image_index = 3; sound_play(swingsnd2); break;
case 247: image_index = 4; sound_play(swingsnd2); break;
case 250: image_index = 5; sound_play(swingsnd2); break;
case 253: image_index = 6; sound_play(swingsnd2); break;
case 256: sprite_index = spelluse_sprite; image_index = 0; break;
case 259: image_index = 1; break;
case 262: image_index = 2; break;
case 265: image_index = 3; break;
case 268: image_index = 4; break;
case 271: image_index = 5; break;
case 274: image_index = 6; sound_play(fs_sound); sound_play(fs_voice); break;
case 277: image_index = 7; break;
case 280: image_index = 6; break;
case 283: image_index = 7; break;
case 286: image_index = 6; break;
case 289: image_index = 7; break;
case 292: image_index = 6; break;
case 295: image_index = 7; break;
case 298: image_index = 6; break;
case 301: image_index = 7; break;
case 304: image_index = 6; break;
case 307: image_index = 7; break;
case 298: image_index = 6; break;
case 301: image_index = 7; break;
case 304: image_index = 6; break;
case 307: image_index = 7; break;
case 310: image_index = 6; break;
case 313: image_index = 7; break;
case 316: image_index = 6; break;
case 319: image_index = 7; break;
case 322: image_index = 6; break;
case 325: image_index = 7; break;
case 328: image_index = 6; break;
case 331: image_index = 7; break;
case 334: image_index = 6; break;
case 337: image_index = 7; break;
case 340: image_index = 6; break;
case 343: image_index = 7; break;
case 346: image_index = 6; break;
case 349: image_index = 7; break;
case 352: image_index = 6; break;
case 355: image_index = 7; break;
case 358: image_index = 6; break;
case 361: image_index = 7; break;
case 364: image_index = 6; break;
case 367: image_index = 7; break;
case 370: image_index = 8; break;
case 373: image_index = 9; break;
case 376: sprite_index = usmash_sprite; image_index = 0; sound_play(attack_voice5); break;
case 379: image_index = 1; break;
case 382: image_index = 2; break;
case 385: image_index = 3; break;
case 388: image_index = 4; break;
case 458: image_index = 3; break;
case 461: image_index = 2; break;
case 464: image_index = 1; break;
}

if (timer >= 274 && timer < 364)
 { 
  if temp = 0 && temp2 = 0 {
		impactspark = instance_create(x,y,obj_down_impact)
		impactspark.image_blend = c_red
		temp2 = 10
		vspeed -= 0.1;
		}
		temp2 -= 1
 }

if timer >= 145 && timer <= 253 && !instance_exists(swordstab)
{
    swordstab = create_projectile ( 0.5 , 90 , 1.5 , 0 , -1 , 1 , slash1 , obj_spark_slash2 , 1.77 , 0.85 , 29.93 , 25.55 , self.id , 3, no_script );
    swordstab.image_angle = ( 1 - facing * 2 ) * 0;
	swordstab.di = 0.2;
}


switch (timer)
{
case 145: trevor.image_index = 1; break;
case 148: trevor.image_index = 2; break;
case 151: trevor.image_index = 3; break;
case 154: trevor.image_index = 4; sound_play(swingsnd2); break;
case 157: trevor.image_index = 5; break;
case 160: trevor.image_index = 6; break;
case 163: trevor.image_index = 1; break;
case 166: trevor.image_index = 2; break;
case 169: trevor.image_index = 3; break;
case 172: trevor.image_index = 4; sound_play(swingsnd2); break;
case 175: trevor.image_index = 5; break;
case 178: trevor.image_index = 6; break;
case 181: trevor.image_index = 1; break;
case 184: trevor.image_index = 2; break;
case 187: trevor.image_index = 3; break;
case 190: trevor.image_index = 4; sound_play(swingsnd2); break;
case 193: trevor.image_index = 5; break;
case 196: trevor.image_index = 6; break;
case 199: trevor.image_index = 1; break;
case 202: trevor.image_index = 2; break;
case 205: trevor.image_index = 3; break;
case 208: trevor.image_index = 4; sound_play(swingsnd2); break;
case 211: trevor.image_index = 5; break;
case 214: trevor.image_index = 6; break;
case 217: trevor.image_index = 1; break;
case 220: trevor.image_index = 2; break;
case 223: trevor.image_index = 3; break;
case 226: trevor.image_index = 4; sound_play(swingsnd2); break;
case 229: trevor.image_index = 5; break;
case 232: trevor.image_index = 6; break;
case 235: trevor.image_index = 1; break;
case 238: trevor.image_index = 2; break;
case 241: trevor.image_index = 3; break;
case 244: trevor.image_index = 4; sound_play(swingsnd2); break;
case 247: trevor.image_index = 5; break;
case 250: trevor.image_index = 6; break;
case 253: trevor.image_index = 1; break;
case 256: trevor.image_index = 2; break;
case 259: trevor.image_index = 3; break;
case 262: trevor.image_index = 4; sound_play(swingsnd2); break;
case 265: trevor.image_index = 5; break;
case 268: trevor.image_index = 6; break;
case 271: trevor.image_index = 1; break;
case 274: trevor.image_index = 2; break;
case 277: trevor.image_index = 3; break;
case 280: trevor.image_index = 4; sound_play(swingsnd2); break;
case 283: trevor.image_index = 5; break;
case 286: trevor.image_index = 6; break;
case 289: trevor.image_index = 1; break;
case 292: trevor.image_index = 2; break;
case 295: trevor.image_index = 3; break;
case 298: trevor.image_index = 4; sound_play(swingsnd2); break;
case 301: trevor.image_index = 5; break;
case 304: trevor.image_index = 6; break;
case 307: trevor.image_index = 1; break;
case 310: trevor.image_index = 2; break;
case 313: trevor.image_index = 3; break;
case 316: trevor.image_index = 4; sound_play(swingsnd2); break;
case 319: trevor.image_index = 5; break;
case 322: trevor.image_index = 6; break;
case 325: trevor.image_index = 1; break;
case 328: trevor.image_index = 2; break;
case 331: trevor.image_index = 3; break;
case 334: trevor.image_index = 4; sound_play(swingsnd2); break;
case 337: trevor.image_index = 5; break;
case 340: trevor.image_index = 6; break;
case 343: trevor.image_index = 1; break;
case 346: trevor.image_index = 2; break;
case 349: trevor.image_index = 3; break;
case 352: trevor.image_index = 4; sound_play(swingsnd2); break;
case 355: trevor.image_index = 5; break;
case 358: trevor.image_index = 6; break;
case 361: trevor.sprite_index = trevor_sprite2; trevor.image_index = 0; break;
case 376: trevor.image_index = 1; break;
case 379: trevor.image_index = 2; break;
}

if timer = 154 || timer = 172 || timer = 190 || timer = 208 || timer = 226 || timer = 244 || timer = 262 || timer = 280 || timer = 298 || timer = 316 || timer = 334 || timer = 352
{
    whip = create_projectile ( 0.5 , 90 , 1.5 , 0 , -1 , 1 , punch2 , obj_spark_hit3 , 1.77 , 0.85 , 29.93 , 25.55 , self.id , 3, no_script );
    whip.image_angle = ( 1 - facing * 2 ) * 0;
	whip.charge_dmg = 0;
	whip.di = 0.2;
}

if timer = 379
{
bfx = create_blur(x,y,self.id);
bfx.sprite_index = telepillar_sprite;
bfx.image_index = 0;
bfx.image_speed = 0;
bfx.image_xscale = 0.85*(1-facing*2)*size;
bfx.image_yscale = 0.85*size;
bfx.snap = self.id
bfx.depth = depth - 1;
bfx.x = x + 30 * (1-facing*2) *size;
bfx.y = y *size; 
bfx.image_alpha = 0;
sound_play(teleport_sound);
}

if timer >=379 && timer  <=384
{
bfx.image_alpha += 0.2;
}

switch (timer)
{
case 380: bfx.image_index = 1; break;
case 381: bfx.image_index = 0; break;
case 382: bfx.image_index = 1; break;
case 383: bfx.image_index = 0; break;
case 384: bfx.image_index = 1; with (trevor) {instance_destroy();} break;
case 385: bfx.image_index = 0; break;
case 386: bfx.image_index = 1; break;
case 387: bfx.image_index = 0; break;
case 388: bfx.image_index = 1; break;
case 389: bfx.image_index = 0; break;
case 390: bfx.image_index = 1; break;
case 391: bfx.image_index = 0; break;
case 392: bfx.image_index = 1; break;
case 393: bfx.image_index = 0; break;
case 394: bfx.image_index = 1; break;
case 395: bfx.image_index = 0; break;
case 396: bfx.image_index = 1; break;
case 397: bfx.image_index = 0; break;
case 398: bfx.image_index = 1; break;
case 399: bfx.image_index = 0; break;
case 400: bfx.image_index = 1; break;
case 401: bfx.image_index = 0; break;
case 402: bfx.image_index = 1; break;
case 403: bfx.image_index = 0; break;
case 404: bfx.image_index = 1; break;
case 405: bfx.image_index = 0; break;
case 406: bfx.image_index = 1; break;
case 407: bfx.image_index = 0; break;
case 408: bfx.image_index = 1; break;
case 409: bfx.image_index = 0; break;
case 410: bfx.image_index = 1; break;
case 411: bfx.image_index = 0; break;
case 422: bfx.image_index = 1; break;
case 423: bfx.image_index = 0; break;
case 424: bfx.image_index = 1; break;
case 425: bfx.image_index = 0; break;
case 426: bfx.image_index = 1; break;
case 427: bfx.image_index = 0; break;
case 428: bfx.image_index = 1; break;
case 429: bfx.image_index = 0; break;
case 430: bfx.image_index = 1; break;
case 431: bfx.image_index = 0; break;
case 432: bfx.image_index = 1; break;
case 433: bfx.image_index = 0; break;
case 434: bfx.image_index = 1; break;
case 435: bfx.image_index = 0; break;
case 436: bfx.image_index = 1; break;
case 437: bfx.image_index = 0; break;
case 438: bfx.image_index = 1; break;
case 439: bfx.image_index = 0; break;
case 440: bfx.image_index = 1; break;
case 441: bfx.image_index = 0; break;
case 442: bfx.image_index = 1; break;
case 443: bfx.image_index = 0; break;
case 444: bfx.image_index = 1; break;
case 445: bfx.image_index = 0; break;
case 446: bfx.image_index = 1; break;
case 447: bfx.image_index = 0; break;
case 448: bfx.image_index = 1; break;
case 449: bfx.image_index = 0; break;
case 450: bfx.image_index = 1; break;
case 451: bfx.image_index = 0; break;
case 452: bfx.image_index = 1; break;
case 453: bfx.image_index = 0; break;
case 454: bfx.image_index = 1; break;
case 455: bfx.image_index = 0; break;
case 456: bfx.image_index = 1; break;
case 457: bfx.image_index = 0; break;
case 463: with (bfx) {instance_destroy();} break;
}

if timer >=458 && timer  <=463
{
bfx.image_alpha -= 0.2;
}

if timer >= 380 && timer < 457 && !instance_exists(pillarproj)
{
    pillarproj = create_projectile ( 0.5 , 90 , 1.5 , 0 , -1 , 1 , magic3 , obj_spark_hit3 , 1.77 , 0.85 , 29.93 , 25.55 , self.id , 3 , no_script );
    pillarproj.image_angle = ( 1 - facing * 2 ) * 0;
	pillarproj.charge_dmg = 0;
	pillarproj.di = 0.2;
}

if timer = 457
{
    create_hitbox ( 9 , 25 + facing * 130 , 10.2 , 6.5 , -1 , 3 , magic3 , obj_spark_hit4 , 1.77 , 0.85 , 29.93 , 25.55 , self.id , 3 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.charge_dmg = 0;
	hitbox.di = 0.2;
}

if ( timer >= time - 1 )
  {
  smash_power = 0;
  attack_type = "none";
  intangible = 0;
  if ( air > 0 )
    state_type = "jump"; 
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }