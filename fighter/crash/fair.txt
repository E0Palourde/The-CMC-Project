if state_type = "jump" {
state_type = "air_attack";
attack_type = "fair";
sprite_index = fair_sprite;
image_index = 0;
image_speed = 0;
timer = 0;
time = 34;
}
if timer < time {
switch ( timer )
	{
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 8: image_index = 4; break;
	case 11: image_index = 5; break;
	case 13: image_index = 6; break;
	case 16: image_index = 7; break;
	case 19: image_index = 8; break;
	case 21: image_index = 9; break;
	case 24: image_index = 10; break;
	}

// Animate VFX	
switch (timer){
	case 11: 			// sprite keyframe
		// We use the logic I determined looking at the sheet to create the blur. 
		// Note that while he faces right, it rotates clockwise, so it is not counter-clockwise.
		blur = create_itmpnt_blur( /*Attacker*/ self.id, /*Texture*/ blur_texture, /*Start frame*/ 4, /*Apex Frame*/ 6, /*End frame*/ 8, /*CCW*/ 0, /*girth*/ 5, 15);
		
		blur.push_x = -4 * size * (1-facing*2);	// Push blur toward crash
		blur.image_index = 0;
		blur.h_squish = 2;	// Thin the blur out a bit
		//blur.depth = depth + 0.1;
		blur.index = 1;		// This will show the blur between the first and second frames. If this was 0, nothing would show at all.
		break;
	case 12:
		blur.image_index = 1;
		break;
	case 13: 			// Sprite keyframe
		blur.index = 1;	// Set the blur index to match with crash's new sprite index.
		blur.image_index = 2;
		break;	
	case 14: 
		blur.index = 1.33;
		break;
	case 15:
		blur.index = 1.66;
		break;
	case 16:			// Sprite end frame
		blur.index = 2; // Set the blur index to match with crash's new sprite index.
		blur.image_index = 3;
		break;
	case 17: 
		blur.index = 2.33;
		break;
	case 18: 
		blur.index = 2.66;
		break;
	case 19: 			
		blur.index = 3;	// Set the blur index to match with crash's new sprite index.
		blur.image_index = 3;
		break;
	case 20:
		blur.index = 3.5;
		blur.image_index = 4;
		break;
	case 21:
		blur.index = 4
		break;
	case 22:
		with (blur){
			instance_destroy();
		}
		break;
}


if timer = 8 {
	sound_play(swing_sound2);
	create_hitbox(10,30+facing*120,6.7,5.2,10,5,punch3,obj_spark_hit2,0.5,0.75,12,32,self.id,7,4);
	}
if timer = 11 {
	hitbox.hitbox_x = 18-facing*36;
	hitbox.hitbox_y = 24;
	hitbox.image_xscale = 0.74;
	hitbox.image_yscale = 0.58;
	}
if timer = 13 {
	hitbox.hitbox_x = 12-facing*24;
	hitbox.hitbox_y = 8;
	hitbox.dmg = 8;
	hitbox.bkb = 5.8;
	hitbox.kbg = 3.6;
	hitbox.dir = -5+facing*190;
	}
if air = 0 {
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 11;
	sprite_index = land_sprite;
	}
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {

	attack_type = "none";
	if ( air > 0 )
		{
        state_type = "jump";
		sprite_index = jump_sprite;
		image_index = 4;
		}
        else

        state_type = "stand";

        timer = 0;

        time =-1;

	    }
