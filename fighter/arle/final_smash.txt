if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding" {
        hspeed = 0;
        size = csize
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0;
        sprite_index = final_smash_sprite; 
        image_index=0;
        timer = 1;
        time = 300;
        timer_speed=1;
        intangible = 1;
        final_smashes+=1
        smash_power = 0
        air_move=0
		target = -99
}
speed=0
gravity_lock = 1;
if ( timer < time )
    {
switch ( timer )
      {
	case 4: image_index = 1; break;
	case 8: image_index = 2; break;
	case 12: image_index = 3; break;
	case 16: image_index = 4; break;
	case 20: image_index = 5; break;
	case 24: image_index = 6; break;
	case 28: image_index = 7; break;

      }
	//if timer = 1
	//     sound_play(b_voice);
	
	
	if timer = 4{
	//sound_play(nair_voice);
	effectjab = create_spark(0*size,16,self.id);
	effectjab.sprite_index = nair_sprite_eff;
    effectjab.image_speed = 0.19;
	effectjab.image_alpha = 1.0;
	effectjab.image_xscale = image_xscale;
    effectjab.image_yscale = image_yscale;
    effectjab.depth = depth - 0.5;
	effectjab.snap = self.id
	}
	
	if ( timer = 8 ) {
	create_hitbox(1,90,0,0,-1,0,magic1,obj_spark_fire1,1.4,1.4,20,15,self.id,12,3);
	hitbox.di = 0
	hitbox.sdi = 0
	hitbox.weight_kb = 1
	hitbox.hit_stun = 30
	hitbox.armor_break = 1
    }
	
	if timer = 20{
if target > -1{
	
with target {
    if air = 0 {
    shield_hp = 160;
    state_type = "broken";   
    timer = 0;               // Enter broken shield stunned state
    time = 300 + round(percent/13);
    attack_type = "none"
    sprite_index = broken_sprite;
    speed = 0 }
    }	
	
}else
timer = time
}

if timer > 21 and timer < 280{
target.y = y
target.gravity = 0
target.vspeed = 0
    target.attack_type = "none"
    target.sprite_index = target.broken_sprite
	target.state_type = "flinch"; 
    target.speed = 0 
}

if timer = 30{
/*
        spark = instance_create ( 0 , 0 , obj_camerazoom );
        spark.camera_l = x + 8;
        spark.camera_r = x + 40;
        spark.camera_u = y - 4 - actual_height;
        spark.camera_d = y + 4;
        spark.camera_boundary_zoom = 120;
        spark.alarm[0] = 270;
*/
}


if timer = 40
sprite_index = utilt_sprite


switch ( timer )
      {
	case 40: image_index = 0; break;
	case 45: image_index = 1; break;
	case 50: image_index = 2; break;
	case 55: image_index = 3; break;
	
      }

if timer >= 45 and timer < 55{
if timer = 45{
theX = 14
theY = 35
}
if timer = 46{
theX = 10
theY = 37
}
if timer = 47{
theX = 6
theY = 39
}
if timer = 48{
theX = 2
theY = 41
}
if timer = 49{
theX = -2
theY = 39
}
if timer = 50{
theX = -6
theY = 37
}
if timer = 51{
theX = -10
theY = 35
}
if timer = 52{
theX = -14
theY = 33
}
if timer = 53{
theX = -18
theY = 31
}
if timer = 54{
theX = -20
theY = 29
}

    flower = create_projectile(0,361,0,0,0,0,-1,-1,0,0,theX,theY,self.id,20,char_custom5);
	flower.sprite_index = bayoen_sprite;
	flower.image_speed = 0
	flower.image_index = 0
	flower.image_xscale = 0.01*size
	flower.image_yscale = 0.01*size
	flower.image_alpha = 1
	flower.facing = facing
	flower.depth = depth -0.5
	flower.hit = 2
}








if timer = 60
sprite_index = downb_sprite


switch ( timer )
      {
	case 60: image_index = 0; break;
	
	case 165: image_index = 1; break;
	case 170: image_index = 2; break;
	case 175: image_index = 3; break;
	case 180: image_index = 4; break;
	case 185: image_index = 5; break;
	case 190: image_index = 6; break;
	
	
	case 240: image_index = 7; break;
	case 245: image_index = 8; break;
	case 290: image_index = 9; break;
	
      }

if timer = 64{
sound_play(bayoen_voice)
for (i=0; i<=18; i+=1){
	bayoen = create_projectile(0,361,0,0,0,0,-1,-1,0,0,0,0,self.id,100,char_custom4);
	bayoen.sprite_index = bayoen_sprite;
	bayoen.image_speed = 0
	bayoen.image_index = 0
	bayoen.image_xscale = 0.12*size;
	bayoen.image_yscale = 0.12*size;
	bayoen.image_alpha = 1.0
	bayoen.hit = 2
	bayoen.depth = depth - 1
	bayoen.facing = 0//facing
	bayoen.basedir = bayoen.direction
	bayoen.basespeed = bayoen.speed
	bayoen.state = "circling"
	bayoen.up = 1
	bayoen.alarm[0] = 99999
	bayoen.orbit_dir = (i*20)//0+facing*180
	bayoen.circler = target

}
}

if timer >= 144 and timer < 164
target.percent += 1

if timer = 170 or timer = 185 or timer = 200{
for (i=0; i<=8; i+=1){
    puyo = create_projectile(3,361,0,0,10,2,kick1,obj_spark_hit4,0,0,i*18,90,self.id,240-timer-10,char_custom6);
	puyo.sprite_index = garb_puyo_sprite;
	puyo.image_speed = 0
	puyo.image_index = 0
	puyo.image_xscale = 1*size
	puyo.image_yscale = 1*size
	puyo.image_alpha = 1
	puyo.facing = facing
	puyo.hspeed = 0
	puyo.vspeed = 2
	puyo.depth = depth -1
	puyo.is_puyo = 1
	puyo.originalOwner = self.id

}
}


if timer = 240{
    flower = create_projectile(10,10+facing*160,4,7,-1,5,magic1,obj_spark_hit1,0,0,theX,theY,self.id,45,char_custom5);
	flower.x = target.x
	flower.y = target.y - 25
	flower.sprite_index = bayoen_sprite;
	flower.image_speed = 0
	flower.image_index = 0
	flower.image_xscale = 0.1*size
	flower.image_yscale = 0.1*size
	flower.image_alpha = 0.7
	flower.facing = facing
	flower.depth = depth -0.5
	flower.hit = 2
	flower.is_epic = 1

}



  
  }

	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    smash_power = 0
    attack_type = "none";
    intangible = 0;
    if air > 0
    state_type = "jump";
    else
    state_type = "stand";
    timer = 0;
    time =-1;
    }