fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump"{
attacking = 0;
special = 0;
timer = 10;
state_type = "air_attack"
attack_type = "upb"
image_speed = 0;
sprite_index = upb_sprite;
image_index = 0;
time = 220;
timer_speed=1;
xemout = x;
yemout = y;
loopcheck=0;
if (moveright = 1 && !ai) || (ai && x < nearest_edge.x) {facing = 0}
if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) {facing = 1}
}

switch ( timer ) {
case 13: image_index = 1; break;
case 16: image_index = 2; heavy_armor = 50; break;
case 31: image_index = 5; break;
case 34: image_index = 4; break;
case 37: image_index = 5; break;
case 40: image_index = 4; break;
case 42: image_index = 6; heavy_armor = 0; break;
case 44: image_index = 7; break;
case 46: image_index = 8; break;
case 48: image_index = 9; break;
case 50: image_index = 6; break;
case 52: image_index = 7; break;
case 54: image_index = 8; break;
case 56: image_index = 9; break;
case 58: image_index = 6; break;
case 60: image_index = 7; break;
case 62: image_index = 8; break;
case 64: image_index = 9; break;
case 66: sprite_index = dair_sprite; image_index = 2;  break;
case 200: image_index = 3; break;
case 204: image_index = 4; break;
case 208: image_index = 5; break;
case 212: image_index = 6; break;
case 216: image_index = 7; break;}

switch ( timer ) {
case 40: swordeff = create_sword_trail(self.id, 9, 30, spread_texture); swordeff.index=1; swordeff.end_decay = 2; break;
case 42: swordeff.index += 1; break;
case 44: swordeff.index += 1; break;
case 46: swordeff.index += 1; break;
case 48: swordeff.index += 1; break;
case 50: swordeff.index += 1; break;
case 52: swordeff.index += 1; break;
case 54: swordeff.index += 1; break;
case 56: swordeff.index += 1; break;
case 58: swordeff.index += 1; break;
case 60: swordeff.index += 1; break;
case 62: swordeff.index += 1; break;
case 64: swordeff.index += 1; break;
case 66: with (swordeff) {instance_destroy();} break;}


if timer >= 66 && timer < 200 && !instance_exists(blurstandin) {
blurstandin = instance_create(x+20*(1-facing*2)*size,y-1*size,obj_spark);
blurstandin.sprite_index = sword_eff;
blurstandin.image_xscale = 0.18*(1-facing*2)*size;
blurstandin.image_yscale = 0.1*size;
blurstandin.image_angle = 270*(1-facing*2);
blurstandin.image_speed = 0;
blurstandin.depth = depth+1;
blurstandin.image_index = 0;
blurstandin.snap = self.id;
blurstandin.alarm[0] = 132;}

if timer < time {

if timer = 16 {

blade = create_projectile(2,92+(-4)*facing,8.5,0,6,1,slash2,obj_spark_slash2,0.4,0.4,12.32,40,self.id,26,char_custom2);
blade.vspeed = -8.6*size;
blade.sprite_index = upb_sword_sprite;
blade.use_palette = number;
blade.hit_stun = 40;
blade.alarm[0] = 26;
blade.maxtime = 26;
blade.hit = 0;
blade.size = size;
blade.hit = 2;
blade.weighed_kb = 1;
sound_play(attack_sound3)
create_hitbox(4,92+(-4)*facing,10,0,6,1,slash2,obj_spark_slash2,1.20,1.66,20.24,23.76,self.id,2,2);
hitbox.hit_stun = 40;
hitbox.di = 0;
hitbox.sdi = 0;
hitbox.weighed_kb = 1;}

if timer = 42 {sound_play(upb_roll_sound);}

if timer = 42 || timer = 50 || timer = 58 {
create_hitbox(2,90,2,0,6,1,slash2,obj_spark_slash1,2.3,2.3,0,28,self.id,8,1);
hitbox.hit_stun = 20;
hitbox.di = 0;
hitbox.sdi = 0.1;
hitbox.weighed_kb = 1;}

if timer = 66 {

if loopcheck = 0{

loopcheck += 1;

if moveleft {hspeed = -3*size;}
if moveright {hspeed = 3*size;}

}

if (moveleft || hspeed < 0) {
sound_play(attack_sound5)
sound_play(attack_heavy1)
create_hitbox(3,254+32*facing,8,1.5,6,2,slash2,obj_spark_slash1,0.88,2.11,22,32,self.id,133,3);
hitbox.hit_stun = 20;}

if (moveright || hspeed >= 0) {
sound_play(attack_sound5)
sound_play(attack_heavy1)
create_hitbox(3,286+(-32)*facing,8,1.5,6,2,slash2,obj_spark_slash1,0.88,2.11,22,32,self.id,132,3);
hitbox.hit_stun = 20;}

}

if timer >= 31 && timer < 41 {
y-=18.90909090909091*size;}

if timer >= 66 && timer < 199 {
vspeed = 20*size;
air_move = 0;
force_edge_grab = 1;

if moveleft && hspeed >-2.5*size {hspeed-=0.5*size;}
if moveright && hspeed < 2.5*size {hspeed+=0.5*size;}

if air = 0 {
timer = 199;
with(hitbox){instance_destroy();}
with(blurstandin){instance_destroy();}}

if timer = 198 {
timer = 62;
with(hitbox){instance_destroy();}
with(blurstandin){instance_destroy();}}

}

if timer >= 200 {
state_type = "attack";
hspeed = 0;
vspeed = 0;}

if timer < 66 {
force_edge_grab = 0;
gravity=0;
gravity_lock = 1;
vspeed=0;
hspeed=0;
air_move=0;
x=xemout;
if timer < 31 && timer > 41
y=yemout;}

}
    if (timer >= 66){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 0) || (target.weight > .22 && target.weight < .3 && target.percent > 0) || (target.weight > .3 && target.percent > 0)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.055;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 100
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
				dontrepeat = 1;
				}
				}
        
  }	   

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
dontrepeat = 0;
attack_type = "none";
if air > 0 {state_type = "fall";}
else {state_type = "stand";}
timer = 0;
time =-1;}