if state_type = "jump" {
state_type = "air_attack";
attack_type = "fair";
image_speed = 0;
sprite_index = jump_sprite;
image_index = 0;
timer = 0;
time = 30;
timer_speed=1;}

if timer < time {

switch ( timer ) {
case 2: sprite_index = fair_sprite; image_index = 0; break;
case 5: image_index = 1; break;
case 8: image_index = 2; break;
case 11: image_index = 3; break;
case 14: image_index = 4; break;
case 17: image_index = 5; break;}

//Sword trail shit starts here

switch ( timer ) {
case 0: sword_trail = create_sword_trail(self.id, 6, 30, spread_texture); sword_trail.index = 1; sword_trail.depth = 1; break;
case 1: sword_trail.end_decay = 0.55; break;
case 2: sword_trail.index += 1; sword_trail.end_decay = 0.6; break;
case 3: sword_trail.end_decay = 0.66; break;
case 5: sword_trail.index += 1; sword_trail.end_decay = 0.8; break;
case 6: sword_trail.end_decay = 0.85; break;
case 7: sword_trail.end_decay = 1; break;
case 8: sword_trail.index += 1; sword_trail.end_decay = 1.2; break;
case 9: sword_trail.end_decay = 1.5; break;
case 10: sword_trail.end_decay = 1.5; break;
case 11: sword_trail.index += 1; sword_trail.end_decay = 1.66; break;
case 12: sword_trail.end_decay = 2; break;
case 13: sword_trail.end_decay = 2.25; break;
case 14:  sword_trail.end_decay = 2.5; break;
case 17: with (sword_trail) {instance_destroy();} break;}

//Sword trail shit ends here

if timer = 10 {
if random(10) > 5 {play_attack_voice()}
else if random(10) <= 5 {sound_play(choose(attack_heavy2,attack_heavy3))}
sound_play(choose(attack_sound1,attack_sound2,attack_sound4,attack_sound6))
create_hitbox(6,20+facing*140,4.23,5.4,10,1,slash2,obj_spark_slash3,1.35,1.75,35,25,self.id,6,2)
hitbox.di = 0
hitbox.weight_kb = 0.8
hitbox.shake_kb = 0.1
hitbox.sdi = 0
hitbox.shake_type = 1
hitbox.shake_ampl = 0.5}

if timer = 11 {
hitbox.hitbox_x -= 20*(1-facing*2)*size
hitbox.hitbox_y += 35*size
hitbox.image_xscale += 0.8*size
hitbox.image_yscale -= 0.75*size
hitbox.image_angle = -20*(1-facing*2)
hitbox.dir = 60+facing*60
hitbox.damage = 4
hitbox.bkb = 5
hitbox.kbg = 6}

if air = 0 {
dontrepeat = 0;
state_type="land";
attack_type="none";
sprite_index = land_sprite;
timer=0;
time=20;}

}

    if (timer >= 8){
if (attack_success || target.object_index == obj_enemy) && ( dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 110) || (target.weight > .22 && target.weight < .3 && target.percent > 125) || (target.weight > .3 && target.percent > 140)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.055;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 100
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
				dontrepeat = 1;
				}
				}
        
  }	   


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
if air > 0 {state_type = "jump";}
else {state_type = "stand";}
dontrepeat = 0;
attack_type = "none";
timer = 0;
time = -1;}