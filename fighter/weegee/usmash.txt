if ( state_type = "stand" || state_type = "run" )
  {
    state_type = "attack";
    attack_type = "usmash";
    timer = 0;
    time = 60;
    sprite_index = usmash_sprite;
    image_speed = 0;
    image_index = 0;
    charge_frame = 11;
    hspeed = 0;
  }

    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 8: image_index = 4; break;
	case 10: image_index = 5; break;
	case 12: image_index = 6; break;
	case 14: image_index = 7; break;
	case 16: image_index = 8; break;
	case 18: image_index = 9; break;
	case 20: image_index = 10; break;
	case 22: image_index = 11; break;
	case 24: image_index = 12; break;
	case 26: image_index = 13; break;
	case 28: image_index = 14; break;
	case 30: image_index = 15; break;
	case 33: image_index = 16; break;
	case 36: image_index = 17; break;
	case 39: image_index = 18; break;
	case 42: image_index = 19; break;
	case 45: image_index = 20; break;
	case 48: image_index = 21; break;
	case 51: image_index = 22; break;
	case 54: image_index = 23; break;
	case 57: image_index = 24; break;
      }

    if ( timer = 12 )
	instance_create(x+size*(10-facing*20),y-20*size,obj_spark_effect);
    if ( timer = 13 )
      {
	sound_play(swingsnd2);
	create_hitbox(3,60+facing*60,5,0,1,4,kick2,obj_spark_hit1,1.02 , 0.78 , -14.40 , 22.50,self.id,14,1);
	hitbox.di = -1;
	hitbox.weight_kb = 1;
	hitbox.charge_dmg = 0;
	hitbox.charge_kb = 0;
      }

    if ( timer = 14 )
      {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -12.60
    hitbox.hitbox_y = size * 27
    hitbox.image_xscale = size * 0.93
    hitbox.image_yscale = size * 0.82
    hitbox.image_angle = ( 1 - facing * 2 ) * 345.17
	  }
	  
    if ( timer = 16 )
      {
	hitbox.bkb = 5 * size;
	hitbox.dir = 90;
	  
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -5.40
    hitbox.hitbox_y = size * 35.10
    hitbox.image_xscale = size * 0.88
    hitbox.image_yscale = size * 0.93
    hitbox.image_angle = ( 1 - facing * 2 ) * 35.37
	  }
	  
    if ( timer = 18 )
      {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 2.70
    hitbox.hitbox_y = size * 35.10
    hitbox.image_xscale = size * 0.85
    hitbox.image_yscale = size * 0.99
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
	 }
	 
    if ( timer = 20 )
      {
	hitbox.dir = 120-facing*60;
	  
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 18
    hitbox.hitbox_y = size * 26.10
    hitbox.image_xscale = size * 0.97
    hitbox.image_yscale = size * 0.88
    hitbox.image_angle = ( 1 - facing * 2 ) * 45
	  }


    if ( timer = 30 )
      {
	sound_play(swingsnd3);
	create_hitbox(15,85+facing*10,6.5,7.1,22,10,punch3,obj_spark_hit4,0.97 , 1.2 , 0.90 , 44.10,self.id,17,3);
	hitbox.shake_ampl = 0;
	duster = instance_create(x-size*(6-facing*12),y,obj_dust_effect);
	duster.facing = facing;
	duster.image_alpha = 0.75;
	duster = instance_create(x+size*(6-facing*12),y,obj_dust_effect);
	duster.facing = 1-facing;
	duster.image_alpha = 0.75;
      }
    if ( timer = 33 )
      {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.90
    hitbox.hitbox_y = size * 50.40
    hitbox.image_xscale = size * 1.2
    hitbox.image_yscale = size * 1.44
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
	  }
    if ( timer = 36 )
      {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0
    hitbox.hitbox_y = size * 52.20
    hitbox.image_xscale = size * 1.2
    hitbox.image_yscale = size * 1.84
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
	  }


if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }