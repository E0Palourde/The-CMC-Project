if ( state_type == "stand" || state_type == "run" || state_type == "jump" || state_type == "shielding" )
  {
  hspeed = 0;
  size = csize;
  state_type = "air_attack";
  attack_type = "final_smash";
  image_index = 0;
  image_speed = 0;
  sprite_index = final_smash_sprite;
  timer = 0;
  time = 40;
  timer_speed = 1;
  intangible = 1;
  final_smashes += 1;
  smash_power = 0;
  air_move = 0;
  }
//-------------------------------------------------------------------------------START-UP-------------------------------------------------------------------------------

speed = 0;
gravity_lock = 1;

switch ( timer )
  {
case 3: image_index = 1; break;
case 6: image_index = 2; break;
case 9: image_index = 3; break;
  }
  
if ( timer = 12 )
{
target = -1;
create_hitbox(5,90,3,0,-1,10,magic3,obj_spark_fire1, 2 , 0.6 , 0 , 35 , self.id,6,5);

eff = create_blur(x + 2 * (1-facing*2) * size , y - 38 * size ,self.id)
eff.sprite_index = final_smash_effect_sprite3;
eff.image_index = 0;
eff.image_alpha = 1;
eff.depth = -7;
eff.image_angle = 90 * (1-facing*2);
eff.image_xscale = 0.3 * (1-facing*2) * size;
eff.image_yscale = 0.3 * size;
eff.snap = self.id;
}

if ( timer = 14 )
{
eff.image_index = 1;

    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0
    hitbox.hitbox_y = size * 35
    hitbox.image_xscale = size * 4.5
    hitbox.image_yscale = size * 1
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
}

if ( timer = 16 )
{
eff.image_index = 2;
eff.image_yscale = 0.7 * size;

    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0
    hitbox.hitbox_y = size * 35
    hitbox.image_xscale = size * 6
    hitbox.image_yscale = size * 1.5
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
}

if ( timer = 19 )
{
eff.image_index = 3;
eff.image_yscale = 0.3 * size;
}

if ( timer = 21 )
{
eff.image_index = 4;
}

if ( timer = 23 )
{
eff.image_index = 5;
}

if ( timer = 24 )
{
eff.image_index = 6;
}

if ( timer = 26 )
{
eff.image_index = 7;
}

if ( timer = 28 )
{
with ( eff )
	{
	instance_destroy();
	}
}

//-------------------------------------------------------------------------------LOAD ASSETS-------------------------------------------------------------------------------
if ( timer >= 12 and attack_success = 1 and timer <= 20 )
{
image_index = 3;
eff.anim_speed = 0.8;

target1 = target;

timer = 200;
time = 870;

target1.sprite_index = target1.flinch_sprite;
target1.state_type = "flinch";
target1.depth = 1;
target1.speed = 0;
target1.gravity_lock = 1;
target1.x = target1.x;
target1.y = target1.y;

nightmare = instance_create ( x , y , obj_spark );
nightmare.depth = -13;
nightmare.image_alpha = 0;
nightmare.image_speed = 0;
nightmare.alarm[0] = 760;
nightmare.sprite_index = black_screen_sprite;
nightmare.image_yscale = 30;
nightmare.image_xscale = 30;

horror = instance_create ( 0 , 0 , obj_custom_gfx );
horror.draw_script = char_custom7;
horror.step_script = char_custom8;
horror.temp = 0;
horror.depth = -15;
horror.image_index = 0;
horror.image_alpha = 0;
horror.image_speed = 0;
horror.x = view_wport - view_wport/2;
horror.y = view_hport - view_hport/2;
horror.owner = self.id;
horror.keepmain = self.keepmain;
horror.number = number;
horror.use_palette = number;
horror.sprite_index = final_smash_horror_sprite;
horror.image_xscale = min ( 0.2 , view_wport/5,760 );
horror.image_yscale = min ( 0.2 , view_wport/5,760 );

crushedliketincan = instance_create ( 0 , 0 , obj_custom_gfx );
crushedliketincan.draw_script = char_custom7;
crushedliketincan.step_script = char_custom8;
crushedliketincan.temp = 0;
crushedliketincan.depth = -15;
crushedliketincan.image_alpha = 0;
crushedliketincan.image_speed = 0;
crushedliketincan.x = view_wport - view_wport/2;
crushedliketincan.y = view_hport - floor( view_hport/2.055 );
crushedliketincan.owner = self.id;
crushedliketincan.keepmain = self.keepmain;
crushedliketincan.number = number;
crushedliketincan.use_palette = number;
crushedliketincan.sprite_index = final_smash_crush_sprite;
crushedliketincan.image_xscale = min( 3 , view_hport/240 );
crushedliketincan.image_yscale = min( 3 , view_hport/240 );

poorsmuck = instance_create ( 0 , 0 , obj_custom_gfx );
poorsmuck.draw_script = char_custom9;
poorsmuck.step_script = char_custom8;
poorsmuck.sprite_index = target1.down_sprite;
poorsmuck.depth = -16;
poorsmuck.image_index = 0;
poorsmuck.image_alpha = 0;
poorsmuck.image_speed = 0;
poorsmuck.x = view_wport - view_wport/2;
poorsmuck.y = view_hport - floor( view_hport/3.6 );
poorsmuck.owner = owner.id;
poorsmuck.target = target1.id;
poorsmuck.keepmain = self.keepmain;
poorsmuck.image_xscale = target1.ysize + min( 3 , view_hport/240 );
poorsmuck.image_yscale = target1.xsize + min( 3 , view_hport/240 );

freeze = instance_create ( 0 , 0 , obj_freeze );
freeze.dontpause = hiteffect;
freeze.dontpause = crushedliketincan;
freeze.dontpause = horror;
freeze.dontpause = nightmare;
freeze.dontpause = poorsmuck;
freeze.dontpause = self.id;
freeze.alarm[0] = 659;
}

//-----------------------------------------------------------------------------KEEP THE TARGET IN PLACE IN ACTUAL GAMEPLAY-----------------------------------------------------------------------
if ( timer >= 200 and timer <= 211 )
{
speed = 0;
target1.sprite_index=target1.flinch_sprite;
target1.image_index = 0;
target1.state_type = "flinch"
target1.speed = 0;
target1.gravity_lock = 1;
target1.ignore_physics = 1;
target1.x = target.x;
target1.y = target.y;
}

if ( timer >= 212 and timer <= 743 )
{
speed = 0;
target1.sprite_index=target1.down_sprite;
target1.image_index = 0;
target1.state_type = "flinch"
target1.speed = 0;
target1.gravity_lock = 1;
target1.ignore_physics = 1;
target1.x = x + 5 * (1-facing*2) * size;
target1.y = y;
}

if ( timer >= 744 and timer < 860 )
{
speed = 0;
target1.sprite_index=target1.flinch_sprite;
target1.image_index = 0;
target1.state_type = "flinch"
target1.speed = 0;
target1.gravity_lock = 1;
target1.ignore_physics = 1;
target1.x = x + 5 * (1-facing*2) * size;
target1.y = y;
}


//-------------------------------------------------------------------------------HORROR SPRITE SEGMENT-------------------------------------------------------------------------------
if ( timer > 200 and timer < 211 )
{
nightmare.image_alpha += 0.1;
}

if ( timer >= 230 and horror.image_alpha < 1 )
{
horror.image_alpha += 0.01;
}
if ( timer >= 230 and timer <= 354 )
{
horror.image_xscale += min(0.003 , view_hport/216000);
horror.image_yscale += min(0.003 , view_hport/216000);
}
if ( timer = 290 )
{
sound_play(final_smash_voice);
}
if ( timer = 348 )
{
horror.image_index = 1;
}
if ( timer = 351 )
{
horror.image_index = 2;
}
if ( timer >= 355 and timer <= 374 )
{
horror.image_xscale += min( 0.7 , view_hport/1020 );
horror.image_yscale += min( 0.7 , view_hport/1020 );
}
if ( timer >= 375 and timer <= 394 )
{
horror.image_xscale += min( 3 , view_hport/240 );
horror.image_yscale += min( 3 , view_hport/240 );
}

if ( timer = 395 )
{
with ( horror )
	{
	instance_destroy();
	}
}

//-------------------------------------------------------------------------------MULTI-HIT-------------------------------------------------------------------------------

if ( timer = 400 || timer = 406 || timer = 412 || timer = 418 || timer = 424 || timer = 430 || timer = 436 || timer = 442 || timer = 448 || timer = 454 || timer = 460 || timer = 466 || timer = 472 || timer = 478 || timer = 484 || timer = 490 || timer = 496 || timer = 502 || timer = 508 || timer = 514 )
{
target1.percent += 1 * size;
sound_play2 ( sf_punch1 )

hiteffect = instance_create ( 0 , 0 , obj_custom_gfx );
hiteffect.draw_script = char_custom7;
hiteffect.step_script = char_custom8;
hiteffect.temp = 1;
hiteffect.temp2 = 1;
hiteffect.depth = -15;
hiteffect.image_alpha = 1;
hiteffect.image_speed = 0.8;
hiteffect.image_index = 0;
hiteffect.x = view_wport - (view_wport/2) + choose ( random (120) , random (-120) );
hiteffect.y = view_hport - (view_hport/2) + choose ( random (120) , random (-120) );
hiteffect.owner = self.id;
hiteffect.keepmain = self.keepmain;
hiteffect.sprite_index = final_smash_effect_sprite2;
hiteffect.image_angle = random(360);
hiteffect.image_yscale = min( 1.2 , view_hport/600 );
hiteffect.image_xscale = min( 1.2 , view_hport/600 );
}

//-------------------------------------------------------------------------------CRUSHED LIKE TIN CAN-------------------------------------------------------------------------------

if ( timer >= 520 && timer <= 529 )
{
crushedliketincan.image_alpha += 0.1;
poorsmuck.image_alpha += 0.1;
}

if ( timer >= 580 && timer <= 680 )
{
crushedliketincan.image_xscale -= min( 0.02 , view_hport/36000 );
crushedliketincan.image_yscale -= min( 0.02 , view_hport/36000 );
crushedliketincan.y += min( 1.4 , view_hport/480 );
poorsmuck.image_xscale -= min( 0.025 , view_hport/28800 + 0.001 );
poorsmuck.image_yscale -= min( 0.025 , view_hport/28800 + 0.001 );
poorsmuck.y += min( 0.4 , view_hport/1800 + 0.05 );
}

if ( timer = 700 )
{
crushedliketincan.image_index = 1;
}

if ( timer = 703 )
{
crushedliketincan.image_index = 2;
}

if ( timer = 706 )
{
crushedliketincan.image_index = 3;
}

if ( timer = 740 )
{
crushedliketincan.image_index = 4;
poorsmuck.depth = -14;
}

if ( timer = 744 )
{
sound_play(bonecrack_sound);
target1.percent += 15 * size;
crushedliketincan.image_index = 6;
with ( poorsmuck )
	{
	instance_destroy();
	}
	
hiteffect = instance_create ( 0 , 0 , obj_custom_gfx );
hiteffect.draw_script = char_custom7;
hiteffect.step_script = char_custom8;
hiteffect.temp = 1;
hiteffect.temp2 = 1;
hiteffect.depth = -16;
hiteffect.image_alpha = 0.9;
hiteffect.image_speed = 0.8;
hiteffect.image_index = 0;
hiteffect.x = view_wport - view_wport/2;
hiteffect.y = view_hport - view_wport/7;
hiteffect.owner = self.id;
hiteffect.keepmain = self.keepmain;
hiteffect.sprite_index = final_smash_effect_sprite;
hiteffect.image_angle = random(360);
hiteffect.image_yscale = min( 4 , view_hport/180 );
hiteffect.image_xscale = min( 4 , view_hport/180 );
}
if ( timer = 748 )
{
crushedliketincan.image_index = 7;
}
if ( timer = 752 )
{
crushedliketincan.image_index = 8;
}
if ( timer = 756 )
{
crushedliketincan.image_index = 9;
}
if ( timer = 760 )
{
crushedliketincan.image_index = 10;
}

//-------------------------------------------------------------------------------SENT FLYING-------------------------------------------------------------------------------

if ( timer = 860 )
{
with ( nightmare )
	{
	instance_destroy();
	}
with ( crushedliketincan )
	{
	instance_destroy();
	}
sprite_index = stand_sprite;
image_index = 0;
create_hitbox(10,25+facing*130,9.5,8.3,-1,10,sf_punch3,obj_spark_hit3,0.95,0.95,0,20,self.id,20,5);
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  smash_power = 0;
  attack_type = "none";
  intangible = 0;
  if ( air > 0 )
	{
    state_type = "jump";
	sprite_index = mid_jump_sprite;
	image_index = 10;
	}
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }