if ( time = -1 )
  {
    state_type = "attack";
    attack_type = "uthrow";
    timer = 0;
    time = 58;
    sprite_index = uthrow_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    target.timer_speed = 0;
    target.alarm[0] = 11;
  }

    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 12: image_index = 4; break;
	case 15: image_index = 5; break;
	case 17: image_index = 6; break;
	case 19: image_index = 7; break;
	case 21: image_index = 8; break;
	case 23: image_index = 9; break;
	case 25: image_index = 10; break;
	case 27: image_index = 11; break;
	case 29: image_index = 12; break;
	case 31: image_index = 13; break;
	case 33: image_index = 14; break;
	case 35: image_index = 15; break;
	case 37: image_index = 16; break;
	case 39: image_index = 17; break;
	case 41: image_index = 18; break;
	case 43: image_index = 19; break;
	case 46: image_index = 20; break;
	case 49: image_index = 21; break;
	case 52: image_index = 22; break;
	case 55: image_index = 23; break;
      }

    if ( timer <= 2 )
      {
	target.x = x + 20 * size * (1-facing*2);
	target.y = y;
      }
    if ( timer >= 3 && timer <= 5 )
      {
	target.x = x + 24 * size * (1-facing*2);
	target.y = y + 2 * size;
      }
    if ( timer >= 6 && timer <= 8 )
      {
	target.x = x + 25 * size * (1-facing*2);
	target.y = y + 4 * size;
      }
    if ( timer >= 9 && timer <= 11 )
      {
	target.x = x + 20 * size * (1-facing*2);
	target.y = y - 15 * size;
      }
    if ( timer = 12 )
      {
	target.x = x + 10 * size * (1-facing*2);
	target.y = y - 25 * size;
	sound_play(swingsnd3);
	create_throw_box(3,93-facing*7,7,0,1,3,-1,obj_spark_hit2,1.15 , 1.53 , 19 , 41.80,self.id,1);
	hitbox.image_angle = ( 1 - facing * 2 ) * 40.82;
	hitbox.di = -1;
	hitbox.hit_stun = 15;
      }

	if ( timer = 23 )
	{
	sound_play ( webball_sound );
	create_projectile( 3 , 90 , 3 , 0 , 5 , 4 , sf_punch1 , obj_spark_hit3 , 0.7 , 0.7 , -10 , 50 , self.id, 100, char_custom3 );
	proj.direction = 90 * (1-facing*2);
	proj.di = -1;
	}
	if ( timer = 31 )
	{
	sound_play ( webball_sound );
	create_projectile( 3 , 90 , 3 , 0 , 5 , 4 , sf_punch1 , obj_spark_hit3 , 0.7 , 0.7 , 15 , 50 , self.id, 100, char_custom3 );
	proj.direction = 90 * (1-facing*2);
	proj.di = -1;
	}
	if ( timer = 39 )
	{
	sound_play ( webball_sound );
	create_projectile( 3 , 75+facing*30 , 4 , 7 , 5 , 4, sf_punch3 , obj_spark_hit3 , 0.7 , 0.7 , -10 , 50 , self.id, 100, char_custom3 );
	proj.direction = 90 * (1-facing*2);
	}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }