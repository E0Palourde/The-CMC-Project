if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "uthrow";
image_speed = 0;
sprite_index = uthrow_sprite;
image_index=0;
timer = 0;
time = 100;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 35
}
if timer < time {
    switch ( timer )
      {
	  case 0: image_index = 0; break;
	  case 3: image_index = 1; break;
	  case 6: image_index = 2; break;
	  case 9: image_index = 3; break;
	  case 12: image_index = 4; break;
	  case 15: image_index = 5; break;
	  case 18: image_index = 6; break;
	  case 21: image_index = 7; break;
	  case 24: image_index = 8; break;
	  case 27: image_index = 9; break;
	  case 30: image_index = 10; break;
	  case 33: image_index = 11; break;
	  case 36: image_index = 12; break;
	  case 39: image_index = 13; break;
	  case 42: image_index = 14; break;
	  case 45: image_index = 15; break;
	  case 48: image_index = 16; break;
	  case 51: image_index = 17; break;
	  case 54: image_index = 18; break;
	  case 57: image_index = 19; break;
	  case 60: image_index = 20; break;
	  case 63: image_index = 21; break;
	  case 66: image_index = 22; break;
	  case 69: image_index = 23; break;
	  case 72: image_index = 24; break;
	  case 75: image_index = 25; break;
	  case 79: image_index = 26; break;
	  case 87: image_index = 27; break;
	  case 92: image_index = 28; break;
	  }
	  if timer > 0 && timer <= 75 {
		target.x = x+3.4*size*(1-facing*2);
		target.y = y; }

	  if timer >= 3 and timer < 75 and timer mod 3 = 0 {
		  create_hitbox ( 0.6 , 90 , 0 , 0 , 1 , 1 , punch2 , obj_spark_hit3 , 1.18 , 1.61 , 10 , 7 , self.id , 2 , 1 );
		  hitbox.di = 0
	  }
	  
	  if timer = 3 {
		   tornado = create_spark(-58,122,self.id);
    tornado.sprite_index = tornado_sprite;
    tornado.image_speed = 0.35;
    tornado.image_alpha = 0.9;
    tornado.image_xscale = image_xscale*2;
    tornado.image_yscale = image_yscale*2;
    tornado.depth = depth - 0.1;
    tornado.snap = self.id
	  }
	  
	  if timer = 75 {
		  create_throw_box( 2 , 90 , 6.0 , 5.0 , 0 , -1 , water3 , obj_spark_hit4 , 1.18 , 1.61 , 10 , 7 , self.id , 2 , 2 );
	  }
	  
	  
	  
	  
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        
