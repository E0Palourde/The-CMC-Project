//--------------------------------------------------------------------------------CROUCH-----------------------------------------------------------
if ( state_type = "crouch" ){
    
    sprite_index = crouch_sprite;
    image_speed = 0;
    crouchgetuptimer = min(8,timer)
    switch (timer){
        case 0: image_index = 0; break;
        case 4: image_index = 1; break;
        case 8: image_index = 2; break;
    }
}

if ( state_type = "stand" && crouchgetuptimer > 0 ){
    image_speed = 0;
    crouchgetuptimer -= 1;
    sprite_index = crouch_sprite;
    crouchtemp = 1;
}

if ( state_type = "stand" && crouchgetuptimer = 0 && crouchtemp = 1 ){
    sprite_index = stand_sprite;
    image_index = 0;
    crouchtemp = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 1 ){
    image_index = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 4 ){
    image_index = 1;
}

if ( state_type = "stand" && crouchgetuptimer >= 8 ){
    image_index = 2;
}


if ( state_type != "stand" && state_type != "crouch" && crouchgetuptimer > 0 ){
    crouchgetuptimer = 0;
    crouchtemp = 0;
}

if ( attack_type = "edge_climb" )
{
customedgeclimb = 1;
image_speed = 0;
switch ( timer )
  {
  case 0: sprite_index = edge_sprite; shakex=0*size*(1-facing*2); shakey=0*size; image_index = 0; break;
  case 4: sprite_index=jump_sprite; shakex=-8*size*(1-facing*2); shakey=15*size; image_index = 1; break;
  case 6: shakey=12*size; image_index = 2; break;
  case 8: image_index = 3; break;
  case 10: shakex=-6*size*(1-facing*2); shakey=8*size; image_index = 4; break;
  case 12: image_index = 5; break;
  case 14: image_index = 6; break;
  case 16: shakex=-4*size*(1-facing*2); shakey=4*size; image_index = 7; break;
  case 18: image_index=8; break;
  case 20: shakex=0*size*(1-facing*2); shakey=0*size; image_index=9; break;
  case 24: sprite_index=land_sprite; image_index=0; shakex=0*size*(1-facing*2); shakey=0*size; break;
  }
}


//-------------------------------------------------------------------------HOVER----------------------------------------------------------------------------------------
if facing = 0 {
if sprite_index = hover_sprite && hspeed > 0 {
	sprite_index = walk_sprite;
}
if sprite_index = hover_sprite && hspeed < 0 {
	sprite_index = hoverL_sprite;
}
}
if facing = 1 {
if sprite_index = hover_sprite && hspeed < 0 {
	sprite_index = walk_sprite;
}
if sprite_index = hover_sprite && hspeed > 0 {
	sprite_index = hoverL_sprite;
}
}
if(state_type != "air_attack" && state_type != "attack")
{
	if (instance_exists(sideb)) {with (sideb){instance_destroy();}}
}
if(state_type != "air_attack" && state_type != "attack")
{
	if (instance_exists(sideb2)) {with (sideb2){instance_destroy();}}
}
if(state_type != "air_attack" && state_type != "attack")
{
	if (instance_exists(finalsmash)) {with (finalsmash){instance_destroy();}}
}
if floattime > 0 { 
if(instance_exists ( CardMeter ) && (state_type = "flinch" || state_type = "air_flinch" || state_type = "respawn"))
{with (CardMeter) {instance_destroy();}}


///variables
floatspeedv = 4;
floatspeedh = 4;
maxfloattime = 200;
///



if (state_type = "flinch" || state_type = "air_flinch" || state_type = "tumble" || state_type = "edge" || state_type = "grabbed" || state_type = "out" || state_type = "respawn" || state_type = "entry" )
{
		floattemp = 1;
}



if (( (moveup && special)&& state_type != "attack" && floattime > 0 && floattemp != 0) && state_type != "tumble" && state_type != "air_flinch" && state_type != "edge" && state_type != "grabbed" && state_type != "dodge" && state_type != "air_dodge" && state_type != "ukemi" && state_type != "locked" && state_type != "broken" && sprite_index != fall_sprite && sprite_index != flinch_sprite  )
{
	floattemp = 0;
} 
if floattemp = 0 
{ 
	if (taunt)
	{
	attack_type = "taunt";
	}
	if (shieldup = 1)
	{
		floattemp = 1;
	}

	gravity = 0;
    gravity_lock = 1;
	if moveup
	{
	vspeed -= 0.2
	}
	if movedown
	{
	vspeed += 0.2
	}
	if moveleft
	{
	hspeed -= 0.2
	}
	if moveright
	{
	hspeed += 0.2
	}
	if (!moveright || !moveleft)
	{
		if hspeed > 0
		{
		hspeed -= 0.1;
		}
		if hspeed < 0
		{
		hspeed += 0.1;
		}
	}
		if (!moveup || !movedown )
	{
		if vspeed < 0
		{
		vspeed += 0.1; 
		}
		if vspeed > 0
		{
		vspeed -= 0.1; 
		}
	}
	if hspeed > floatspeedh
	{
		hspeed = floatspeedh
	}
	if vspeed > floatspeedv
	{
		vspeed = floatspeedv
	}
		if hspeed < -floatspeedh
	{
		hspeed = -floatspeedh
	}
	if vspeed < -floatspeedv
	{
		vspeed = -floatspeedv
	}
}

if (floattime > 0 && ((air > 0 && floattemp = 0) || (hover_timer > 0 && vspeed = 0)))
{
	if scarlet = 0 {
		floattime -= 1
	}
	else if scarlet = 1 {
		floattime -= 0.5;
	}
}


if ( sprite_index == jump_sprite && floattemp == 0 )
{
	sprite_index = hover_sprite;
}
if air = 0 
{
	hover_time = 9999;
	candash = 1 + kaioken;
	if(floattime < maxfloattime ){floattime += 1;} 
	if (moveup != 1) { floattemp = 1;}
}


if state_type = "land" || state_type = "respawn" || state_type = "edge" || state_type = "stand" || state_type = "flinch" || state_type = "air_flinch"
    jumptemp = 0

	if (countertemp = 1) && attack_type = "none"
	{
		intangible = 0;
		countertemp = 0;	
	} 
		if attack_type = "none"
	{
		cgrabtemp = 0;		
	}
	
	if (air = 0)
	{
	upbtemp = 0;
	}
	
if jumping = 1 && jumptemp <= 0
jumptemp = 6

if jumptemp > 0 && jumptemp < 7 {
grav = 0.2
jumptemp -= 1
}

if jumptemp <= 0
grav = 0.355

if(air = 0){upbtemp = 0;}

if(attack_type != "none" ) {ctmp = 0}
}
//if(instance_exists ( CardMeter ) && (state_type = "flinch" || state_type = "air_flinch" || state_type = "respawn"))
//{with (CardMeter) {instance_destroy();}}

///variables
//floatspeedv = 4;
//floatspeedh = 4;
//floatmove = 0.3;
maxfloattime = 150;
airdashcost = maxfloattime/5; //Cost for using an airdash. Equivalent of 1 Meter Orbs.
///

//Prevents float meter from draining if player accidentally floats into the blast zone
if state_type = "entry" || state_type = "respawn" || state_type = "out" || state_type = "dead" 
{floatfixtemp = 1}
else
{floatfixtemp = 0}

if (floattime > 0 && floatfixtemp != 1 && (hover_timer > 0 && vspeed = 0))
{floattime -= 1}

if (floattime < 0)
{floattime = 0}

if(floattime > maxfloattime)
{floattime = maxfloattime;} 

/////////////////Meter Start/////////////////////////////////////
if (!instance_exists(MeterHud)){   
    MeterHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    MeterHud.step_script = hudThing_step_script;
    MeterHud.draw_script = hudThing_draw_script;
	MeterHud.hudalpha = 1;
    MeterHud.owner = self.id;
    MeterHud.keepmain = self.keepmain;
}

MeterHud.sprite_index = meter_sprite;
if(floattime = maxfloattime)
{
MeterHud.image_index = 55;
}
else
{
MeterHud.image_index = floattime*55/maxfloattime;
}
MeterHud.hudalpha = obj_game_control.hud_cover[number-1];
MeterHud.image_speed = 0;

//------------------------------------------------------------------------------------------------------------------------------------------
///////////////////////////////////////////////SCARLET MODE SYSTEM/////////////////////////////////////////////////////////////

//Scarlet Mode Meters
if (!instance_exists(BarHud)){
    BarHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    BarHud.step_script = hudThing_step_script;
    BarHud.draw_script = hudThing_draw_script;
	BarHud.hudalpha = 1;
    BarHud.owner = self.id;
    BarHud.keepmain = self.keepmain;
}
if (!instance_exists(CardHud)){  
    CardHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    CardHud.step_script = hudThing_step_script;
    CardHud.draw_script = hudThing_draw_script;
	CardHud.hudalpha = 1;
    CardHud.owner = self.id;
    CardHud.keepmain = self.keepmain;
}
BarHud.sprite_index = meterbar_sprite;
if ( card_meter = 9 )
{
BarHud.image_index = 250;
}
else
{
BarHud.image_index = bar*251/60;
}
BarHud.hudalpha = obj_game_control.hud_cover[number-1];
BarHud.image_speed = 0;
CardHud.sprite_index = metercard_sprite;
CardHud.image_index = card_meter;
CardHud.hudalpha = obj_game_control.hud_cover[number-1];
CardHud.image_speed = 0;

if(bar < 0 ){ card_meter -= 1; bar = 59;}
if(bar > 59 && card_meter != 9 ){bar = 0; card_meter += 1; }
else if( bar >= 59 && card_meter = 9 ){bar = 58;card_meter = 9; }
if(card_meter > 9 ){card_meter = 9}
if(card_meter < 0 ){card_meter = 0}

//------------------------------------------------------------------------------------------------------------------------------------------
//Meter Gain
if ( scarlet < 1 )
	{
		if ( bar <= 59 && card_meter < 9 )
		{
		if((hitbox.hit = 1 || hitbox2.hit = 1 || hitbox3.hit = 1 || hitbox4.hit = 1 || proj.hit = 1) && zawarudo = 0 && attack_type != "dtilt" && attack_type != "sideb") {bar += 2.5 }///////how fast meter charges
		if((hitbox.hit = 1 || hitbox2.hit = 1 || hitbox3.hit = 1 || hitbox4.hit = 1 || proj.hit = 1) && zawarudo = 0 && (attack_type = "dtilt" ||  attack_type = "sideb")) {bar += 1 }
		}
		if( bar = 58 && card_meter = 9 )
		{
		bar += 1;
		}
	}
//------------------------------------------------------------------------------------------------------------------------------------------
///Servant Flyer System

//------------------------------------------------------------------------------------------------------------------------------------------
//Scarlet Mode Functions: GFX, Meter Drain, & more functions.
if scarlet > 0 && attack_type != "final_smash"
	{ 
		//image_blend = c_red;
		after_image(1,c_red,0.11);
		after_image(2,c_red,0.1);
		after_image(3,c_red,0.09);
		after_image(4,c_red,0.08);
		after_image(5,c_red,0.07);
		after_image(6,c_red,0.06);
		after_image(7,c_red,0.05);
		after_image(8,c_red,0.04);
		after_image(9,c_red,0.03);
		after_image(10,c_red,0.02);
		after_image(11,c_red,0.01);
		offense = 1.25;
		defense = 0.5;
		
		if  attack_type != "final_smash"
			{bar -= 0.75;}
		
		if (card_meter < 1 && bar < 1) 
			{ scarlet = 0;}
	}	
if scarlet < 1
	{
		image_blend = c_white;
		offense = 1;
		defense = 1;		
	}
	
if state_type = "entry" || state_type = "respawn" || state_type = "out" || state_type = "dead" 
	{
		scarlet = 0;
	}
//-----------------------------------------------------------------------------------------------------------------------------------------	
///Hover & Special Regen
if air = 0 
{
	hover_time = 9999;
	candash = 1 + kaioken;
	if(floattime < maxfloattime ){floattime += 1 + scarlet;} 
	//floattemp = 1;
	canzair = 1;
	cansideb = 1;
	upbtemp = 0;
	divekicktemp = 0;
}

if (air = 0 || state_type = "flinch" || state_type = "air_flinch") 
{upb_used = 0;}

if state_type = "land" || state_type = "respawn" || state_type = "edge" || state_type = "stand"
    cansideb = 1;

if ((floattime <= 0 && air > 0) || state_type = "out" || state_type = "respawn" ) 
{
	hover = 0;
	hover_time = 0;
	hover_timer = 0;
}

///Floating During Step (from Skoops)
if godir = 2{
variable -=0.2

if variable < -10
godir = 3

}else if godir = 3{
variable +=0.2

if variable > -2
godir = 2

}
if sprite_index = stand_sprite || sprite_index = walk_sprite || sprite_index = run_sprite || (air = 0 && (sprite_index = air_dodge_sprite)) || sprite_index = roll_sprite {
shakey = variable
}


//-----------------------------------------------------------------------------------------------------------------------------------------	
//-----------------------------------------------------------------------------------------------------------------------------------------	
//-----------------------------------------------------------------------------------------------------------------------------------------	
//-----------------------------------------------------------------------------------------------------------------------------------------	
//-----------------------------------------------------------------------------------------------------------------------------------------	
///extra stuff to patch out later
if shottimer1 >= 1
{
shottimer1 -= 1;
}

if shottimer1 <= 0
{
	shottimer1 = 0;
}

if shottimer2 >= 1
{
shottimer2 -= 1;
}

if ((shottimer2 <= 0) || (air = 0))
{
	shottimer2 = 0;
}

if sidetime >= 1
{
sidetime -= 1
}

if sidetime <= 0
{
	sidetime = 0;
}