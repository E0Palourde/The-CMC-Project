if ( state_type = "stand" || state_type = "run" )
  {
    state_type = "attack";
    attack_type = "usmash";
    timer = 0;
    time = 62;
    sprite_index = usmash_sprite;
    image_speed = 0;
    image_index = 0;
    charge_frame = 6;
    hspeed = 0;
	create_evidence = 0;
	already_created = 0;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 5: image_index = 1; break;
	case 13: image_xscale *= 1.1; image_yscale *= 1.1; break;
	case 14: image_index = 2; shakey = -1; break;
	case 15: shakey = -0.5; break;
	case 16: image_index = 3; shakey = 0; break;
	case 20: image_index = 4; break;
	case 23: image_index = 5; break;
	case 26: image_index = 6; break;
	case 40: image_index = 7; break;
	case 44: image_index = 8; break;
	case 48: image_index = 9; break;
	case 52: image_index = 10; break;
      }
    if timer = 7 && charge = 0
	sound_play(taunt9_voice)
    if timer = 12 && charge > 0
	sound_play(wow_voice)
    if ( timer = 14 )
      {
	sound_play(attacksnd3);
	sound_play(curious_sound);
	create_hitbox(8,100-facing*20,6.2,7.45,13,8,punch3,obj_spark_hit3,0.55,0.8,4.2,30,self.id,6,2);
	if charge > 0 && !instance_exists(evidence) {
	temp4 = choose(3,4,5,8);
	evidencespark = create_projectile(6,100-facing*20,6.2,7.45,10,4,punch2,obj_spark_hit2,1,1,10,30,self.id,34,char_custom8);
	switch (temp4) {
	case 1: evidencespark.sprite_index = evidence_poisonx_sprite;
		break;
	case 2: evidencespark.sprite_index = evidence_poisonz_sprite;
		break;
	case 3: evidencespark.sprite_index = evidence_pistol_sprite;
		evidencespark.image_xscale = 0.3
		evidencespark.image_yscale = 0.3
		break;
	case 4: evidencespark.sprite_index = evidence_spear_sprite;
		evidencespark.image_xscale = 0.4
		evidencespark.image_yscale = 0.4
		break;
	case 5: evidencespark.sprite_index = evidence_phone_sprite;
		evidencespark.image_xscale = 0.2
		evidencespark.image_yscale = 0.2
		break;
	case 6: evidencespark.sprite_index = evidence_knife_sprite;
		break;
	case 7: evidencespark.sprite_index = evidence_jar_sprite;
		break;
	case 8: evidencespark.sprite_index = evidence_statue_sprite;
		evidencespark.image_xscale = 0.5;
		evidencespark.image_yscale = 0.5;
		break;
	}
	evidencespark.image_speed = 0
	evidencespark.absorb = 0
	evidencespark.absorb2 = 0
	evidencespark.no_clash = 1
	evidencespark.priority = 5
	evidencespark.vspeed = 0
	evidencespark.hspeed = 0
	evidencespark_ini_x = evidencespark.x
	evidencespark_ini_y = evidencespark.y
	}
      }
    if timer > 14 && timer < 32 && evidencespark.temp3 != 1 {
	if timer = 15 && !instance_exists(evidencespark) && charge > 0 && !instance_exists(evidence) 
	create_evidence = 1
	evidencespark.image_angle += 15*(1-facing*2)
	if timer < 22
	evidencespark.y -= 3+smash_charge*0.018
	else if timer < 26
	evidencespark.y -= 2.4+smash_charge*0.018
	else
	evidencespark.y -= 1.2+smash_charge*0.018
	evidencespark.vspeed = 0
	evidencespark.hspeed = 0
	if evidencespark.hit = 2
	create_evidence = 1;
	}
	
    if timer > 32 && timer < 50 && evidencespark.temp3 != 1 {
	evidencespark.image_angle += 15*(1-facing*2)
	if timer < 38
	evidencespark.y += 1.2+smash_charge*0.018
	else if timer < 42
	evidencespark.y += 2.7+smash_charge*0.018
	else
	evidencespark.y += 3.6+smash_charge*0.018
	evidencespark.vspeed = 0
	evidencespark.hspeed = 0
	if evidencespark.hit = 2
	create_evidence = 1;
	}
    if timer = 50 && !create_evidence && !already_created {
	create_evidence = 1
	}
	if charge > 0 && !instance_exists(evidence) && create_evidence && !already_created {
	switch (temp4) {
	case 1: evidence = instance_create((instance_exists(evidencespark)*evidencespark.x)+(!instance_exists(evidencespark)*evidencespark_ini_x),(instance_exists(evidencespark)*evidencespark.y)+(!instance_exists(evidencespark)*evidencespark_ini_y),poisonx_item);
		evidence.sprite_index = evidence_poisonx_sprite;
		evidence.sprite_air = evidence_poisonx_sprite;
		evidence.sprite_held = evidence_poisonx_sprite;
		break;
	case 2: evidence = instance_create((instance_exists(evidencespark)*evidencespark.x)+(!instance_exists(evidencespark)*evidencespark_ini_x),(instance_exists(evidencespark)*evidencespark.y)+(!instance_exists(evidencespark)*evidencespark_ini_y),poisonz_item);
		evidence.sprite_index = evidence_poisonz_sprite;
		evidence.sprite_air = evidence_poisonz_sprite;
		evidence.sprite_held = evidence_poisonz_sprite;
		break;
	case 3: evidence = instance_create((instance_exists(evidencespark)*evidencespark.x)+(!instance_exists(evidencespark)*evidencespark_ini_x),(instance_exists(evidencespark)*evidencespark.y)+(!instance_exists(evidencespark)*evidencespark_ini_y),pistol_item);
		evidence.sprite_index = evidence_pistol_sprite;
		evidence.sprite_air = evidence_pistol_sprite;
		evidence.sprite_held = evidence_pistol_sprite;
		break;
	case 4: evidence = instance_create((instance_exists(evidencespark)*evidencespark.x)+(!instance_exists(evidencespark)*evidencespark_ini_x),(instance_exists(evidencespark)*evidencespark.y)+(!instance_exists(evidencespark)*evidencespark_ini_y),spear_item);
		evidence.sprite_index = evidence_spear_sprite;
		evidence.sprite_air = evidence_spear_sprite;
		evidence.sprite_held = evidence_spear_sprite;
		break;
	case 5: evidence = instance_create((instance_exists(evidencespark)*evidencespark.x)+(!instance_exists(evidencespark)*evidencespark_ini_x),(instance_exists(evidencespark)*evidencespark.y)+(!instance_exists(evidencespark)*evidencespark_ini_y),phone_item);
		evidence.sprite_index = evidence_phone_sprite;
		evidence.sprite_air = evidence_phone_sprite;
		evidence.sprite_held = evidence_phone_sprite;
		break;
	case 6: evidence = instance_create((instance_exists(evidencespark)*evidencespark.x)+(!instance_exists(evidencespark)*evidencespark_ini_x),(instance_exists(evidencespark)*evidencespark.y)+(!instance_exists(evidencespark)*evidencespark_ini_y),knife_item);
		evidence.sprite_index = evidence_knife_sprite;
		evidence.sprite_air = evidence_knife_sprite;
		evidence.sprite_held = evidence_knife_sprite;
		break;
	case 7: evidence = instance_create((instance_exists(evidencespark)*evidencespark.x)+(!instance_exists(evidencespark)*evidencespark_ini_x),(instance_exists(evidencespark)*evidencespark.y)+(!instance_exists(evidencespark)*evidencespark_ini_y),jar_item);
		evidence.sprite_index = evidence_jar_sprite;
		evidence.sprite_air = evidence_jar_sprite;
		evidence.sprite_held = evidence_jar_sprite;
		break;
	case 8: evidence = instance_create((instance_exists(evidencespark)*evidencespark.x)+(!instance_exists(evidencespark)*evidencespark_ini_x),(instance_exists(evidencespark)*evidencespark.y)+(!instance_exists(evidencespark)*evidencespark_ini_y),statue_item);
		evidence.sprite_index = evidence_statue_sprite;
		evidence.sprite_air = evidence_statue_sprite;
		evidence.sprite_held = evidence_statue_sprite;
		break;
	}
	charge -= 1 
	create_evidence = 0;
	already_created = 1;
	}
  }

  if (timer >= 14){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0) && obj_score_control.stocks[target.number-1] == 1 {
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 130) || (target.weight > .3 && target.percent > 145)){
                killspark = instance_create(enemy.x-120,enemy.y-115,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.5;
				killspark.image_yscale = size * 0.5;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 90
				freezer2.alarm[0] = 130
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x + 45;
				spark.camera_r = enemy.x - 45;
				spark.camera_u = enemy.y - 15;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
	dontrepeat = 0;
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }