fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump" && air < max_jumps {
    air_move = 0
    temp = 1
    attack_type = "upb"
        state_type = "air_attack";
        hspeed = 0;
    image_speed = 0;
    sprite_index = upb_sprite;
    image_index=0;
    timer = 0;
    time = 61;
    timer_speed=1;
    if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
}
        if timer < time {
  switch ( timer )
    {
    case 3: image_index = 1; break;
    case 6: image_index = 2; break;
    case 9: image_index = 3; break;
    case 12: image_index = 4; break;
    case 15: image_index = 5; break;
    case 18: image_index = 6; break;
    case 26: image_index = 7; break;
    case 30: image_index = 8; break;
    case 33: image_index = 9; break;
    case 41: image_index = 10; break;
    }
             state_type = "air_attack";
	if timer > 5 {
	force_edge_grab = 1
	}
	if (timer == 5 || timer == 6) {
	vspeed = -7.2*size
	super_armor = 2
    sound_play(attackm_sound);
	}
	if timer = 7 {
                create_hitbox(4,90,6.7,0,14,1,kick2,obj_spark_hit2,2.5,2.5,0,20,self.id,10,1);
        hitbox.hit_stun = 25
        hitbox.weight_kb = 1
	temp = 0
	}
	if timer = 12 {
	super_armor = 0
	}
	if timer = 19 {
    sound_play(attackxs_sound);
                create_hitbox(12,72+facing*36,4.4,5.65,14,10,punch3,obj_spark_hit2,6.5,2.5,0,26,self.id,5,3);
}
	if timer > 32 && (vspeed >= 1.4*size) {
	vspeed = 1.4*size
	}
	if timer = 59 {
	timer = 32
	}
	if timer > 29 {
	hspeed = (3.1-(facing*6.2))*size
	}
	if timer >= 33 && timer <= 59 {
	if (movedown) {
	timer = 60
	}
	}
        if air = 0 && temp = 0 {
            state_type="land";
            sprite_index = land_sprite;
            attack_type="none";
            timer=0;
            time=20; 
        }
        }
                   if (timer >= 19){
if (attack_success || target.object_index == obj_enemy) && (temp_spawn >= 1 && dontrepeat = 0 && target.air >= 1 ){
				if ((target.weight <= .22 && target.percent > 100) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 140)){
				killspark = instance_create(enemy.x-250,enemy.y-280,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 1.0;
				killspark.image_yscale = size * 1.0;
				killspark.image_yscale = size * 1.0;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 10
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				timer = 32
                }
				}
  }	   
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        dontrepeat = 0;
        attack_type = "none";
        if air > 0
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
    }
