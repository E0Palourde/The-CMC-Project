has_abs = 1;
if sprite_index = walk_sprite && image_index >= 13 {
	image_index = 1;
}
if sprite_index = run_sprite && image_index >= 16 {
	image_index = 6;
}
/*if sprite_index = run_sprite && image_index < 6 {
	hspeed = 0;
}*/
if (sprite_index = jump_sprite || sprite_index = mid_jump_sprite) && image_index >= 9 {
	image_index = 7;
}
if sprite_index = stand_sprite {
	image_speed = 0.19;
}
if sprite_index = walk_sprite {
	image_speed = 0.15;
}
if state_type = "flinch" || state_type = "air_flinch" {
	if (instance_exists(dtilt_fx)) {with (dtilt_fx){instance_destroy();}}
	if (instance_exists(utilt_fx)) {with (utilt_fx){instance_destroy();}}
	if (instance_exists(stilt_fx)) {with (stilt_fx){instance_destroy();}}
	if (instance_exists(stilt_fx2)) {with (stilt_fx2){instance_destroy();}}
	if (instance_exists(ssmash_fx)) {with (ssmash_fx){instance_destroy();}}
	if (instance_exists(dsmash_fx)) {with (dsmash_fx){instance_destroy();}}
	if (instance_exists(usmash_fx)) {with (usmash_fx){instance_destroy();}}
	if (instance_exists(nair_fx)) {with (nair_fx){instance_destroy();}}
	if (instance_exists(dair_fx)) {with (dair_fx){instance_destroy();}}
	if (instance_exists(fair_fx)) {with (fair_fx){instance_destroy();}}
	if (instance_exists(uair_fx)) {with (uair_fx){instance_destroy();}}
	if (instance_exists(bair_fx)) {with (bair_fx){instance_destroy();}}
	if (instance_exists(susanoo_fx1)) {with (susanoo_fx1){instance_destroy();}}
	if (instance_exists(susanoo_fx2)) {with (susanoo_fx2){instance_destroy();}}
}
///////////////////////////////////Crouch thing for crouching and getting up from crouch visually
if ( state_type = "crouch" ){
    
    sprite_index = crouch_sprite;
    image_speed = 0;
    crouchgetuptimer = min(12,timer) //replace the 12 by the number the last case you add below has
    switch (timer){
        case 0: image_index = 0; break;
        case 3: image_index = 1; break;
        case 6: image_index = 2; break;
        case 9: image_index = 3; break;
        case 12: image_index = 4; break;
		//put as many cases as frames your crouch animation has
    }
}
if ( state_type = "stand" && crouchgetuptimer > 0 ){
    image_speed = 0;
    crouchgetuptimer -= 1;
    sprite_index = crouch_sprite;
    crouchtemp = 1;
}

if ( state_type = "stand" && crouchgetuptimer = 0 && crouchtemp = 1 ){
    sprite_index = stand_sprite;
    image_index = 0;
    crouchtemp = 0;
}

if ( state_type = "stand" && crouchgetuptimer >= 1 and crouchgetuptimer <= 2 ){
    image_index = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 3 ){
    image_index = 1;
}

if ( state_type = "stand" && crouchgetuptimer >= 6 ){
    image_index = 2;
}

if ( state_type = "stand" && crouchgetuptimer >= 9 ){
    image_index = 3;
}

if ( state_type = "stand" && crouchgetuptimer >= 12 ){
    image_index = 4;
} //copypaste this conditional for every frame your crouch animation has, changing the number of the crouchgetuptimer from 12 to whichever corresponds to that frame's switch case number, and the image_index number to the frame number itself.


if ( state_type != "stand" && state_type != "crouch" && crouchgetuptimer > 0 ){
    crouchgetuptimer = 0;
    crouchtemp = 0;
}

if (!instance_exists(SusanooHud)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    SusanooHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    SusanooHud.step_script = hudThing_step_script;
    SusanooHud.draw_script = hudThing_draw_script;
    SusanooHud.owner = self.id;
    SusanooHud.keepmain = self.keepmain;
	SusanooHud.image_xscale = 1
	SusanooHud.image_yscale = 1
	SusanooHud.sprite_index = meter_sprite;
    SusanooHud.image_speed = 0;
	SusanooHud.image_alpha = 1;
	SusanooHud.depth = -16;
}
if (!instance_exists(SusanooHudCursor)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    SusanooHudCursor = instance_create ( hud_x, hud_y, obj_custom_gfx);
    SusanooHudCursor.step_script = hudThing_step_script;
    SusanooHudCursor.draw_script = hudThing_draw_script;
    SusanooHudCursor.owner = self.id;
    SusanooHudCursor.keepmain = self.keepmain;
	SusanooHudCursor.image_xscale = 1
	SusanooHudCursor.image_yscale = 1
	SusanooHudCursor.sprite_index = metercursor_sprite;
    SusanooHudCursor.image_speed = 0;
	SusanooHudCursor.depth = -18;
}
	if sealcount = 0 {
	SusanooHudCursor.image_alpha = 0;
	}
if sealcount = 1 {
	SusanooHudCursor.image_alpha = 1;//1
	SusanooHudCursor.image_index = 0;
}
if sealcount = 2 {
	SusanooHudCursor.image_index = 1;
}
if sealcount = 3 {
	SusanooHudCursor.image_index = 2;
}
if sealcount = 4 {
	SusanooHudCursor.image_index = 3;
}
if sealcount = 5 {
	SusanooHudCursor.image_index = 4;
}
if sealcount = 6 {
	SusanooHudCursor.image_index = 5;
}
if sealcount = 7 {
	SusanooHudCursor.image_index = 6;
}
if sealcount = 8 {
	SusanooHudCursor.image_index = 7;
}
//Specials

//SunderingClaws start
if (!instance_exists(SunderingClaws)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    SunderingClaws = instance_create ( hud_x, hud_y, obj_custom_gfx);
    SunderingClaws.step_script = hudThing_step_script;
    SunderingClaws.draw_script = hudThing_draw_script;
    SunderingClaws.owner = self.id;
    SunderingClaws.keepmain = self.keepmain;
	SunderingClaws.image_xscale = 1
	SunderingClaws.image_yscale = 1
	SunderingClaws.sprite_index = meter1_sprite;
    SunderingClaws.image_speed = 0;
	SunderingClaws.image_alpha = 1;
	SunderingClaws.depth = -17;
}
	if sclawslvl = 1 {
	SunderingClaws.image_index = 0;
	} 
	if sclawslvl = 2 {
	SunderingClaws.image_index = 1;
	} 
	if sclawslvl = 3 {
	SunderingClaws.image_index = 2;
	}
//SunderingClaws end

//ToweringFlame start
if (!instance_exists(ToweringFlame)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    ToweringFlame = instance_create ( hud_x, hud_y, obj_custom_gfx);
    ToweringFlame.step_script = hudThing_step_script;
    ToweringFlame.draw_script = hudThing_draw_script;
    ToweringFlame.owner = self.id;
    ToweringFlame.keepmain = self.keepmain;
	ToweringFlame.image_xscale = 1
	ToweringFlame.image_yscale = 1
	ToweringFlame.sprite_index = meter2_sprite;
    ToweringFlame.image_speed = 0;
	ToweringFlame.depth = -17;
}
	if tflamelvl = 0 {
	ToweringFlame.image_alpha = 0;
	}
	if tflamelvl = 1 {
	ToweringFlame.image_alpha = 1;
	ToweringFlame.image_index = 0;
	}
//ToweringFlame end
 
//Megalith start
if (!instance_exists(Megalith)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    Megalith = instance_create ( hud_x, hud_y, obj_custom_gfx);
    Megalith.step_script = hudThing_step_script;
    Megalith.draw_script = hudThing_draw_script;
    Megalith.owner = self.id;
    Megalith.keepmain = self.keepmain;
	Megalith.image_xscale = 1
	Megalith.image_yscale = 1
	Megalith.sprite_index = meter3_sprite;
    Megalith.image_speed = 0;
	Megalith.depth = -17;
}
	if megalithlvl = 0 {
	Megalith.image_alpha = 0;
	}
	if megalithlvl = 1 {
	Megalith.image_alpha = 1;
	Megalith.image_index = 0;
	} 
	if megalithlvl = 2 {
	Megalith.image_index = 1;
	} 
	if megalithlvl = 3 {
	Megalith.image_index = 2;
	}
//Megalith end

//HuntersFang start
if (!instance_exists(HuntersFang)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    HuntersFang = instance_create ( hud_x, hud_y, obj_custom_gfx);
    HuntersFang.step_script = hudThing_step_script;
    HuntersFang.draw_script = hudThing_draw_script;
    HuntersFang.owner = self.id;
    HuntersFang.keepmain = self.keepmain;
	HuntersFang.image_xscale = 1
	HuntersFang.image_yscale = 1
	HuntersFang.sprite_index = meter4_sprite;
    HuntersFang.image_speed = 0;
	HuntersFang.depth = -17;
}
	if huntersfanglvl = 0 {
	HuntersFang.image_alpha = 0;
	}
	if huntersfanglvl = 1 {
	HuntersFang.image_index = 0;
	HuntersFang.image_alpha = 1;
	} 
	if huntersfanglvl = 2 {
	HuntersFang.image_index = 1;
	}
//HuntersFang end

//DancingDualKick start
if (!instance_exists(DancingDualKick)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    DancingDualKick = instance_create ( hud_x, hud_y, obj_custom_gfx);
    DancingDualKick.step_script = hudThing_step_script;
    DancingDualKick.draw_script = hudThing_draw_script;
    DancingDualKick.owner = self.id;
    DancingDualKick.keepmain = self.keepmain;
	DancingDualKick.image_xscale = 1
	DancingDualKick.image_yscale = 1
	DancingDualKick.sprite_index = meter5_sprite;
    DancingDualKick.image_speed = 0;
	DancingDualKick.depth = -17;
}
	if ddkicklvl = 0 {
	DancingDualKick.image_alpha = 0;
	}
	if ddkicklvl = 1 {
	DancingDualKick.image_index = 0;
	DancingDualKick.image_alpha = 1;
	}
//DancingDualKick end

//InevitableCalamity start
if (!instance_exists(InevitableCalamity)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    InevitableCalamity = instance_create ( hud_x, hud_y, obj_custom_gfx);
    InevitableCalamity.step_script = hudThing_step_script;
    InevitableCalamity.draw_script = hudThing_draw_script;
    InevitableCalamity.owner = self.id;
    InevitableCalamity.keepmain = self.keepmain;
	InevitableCalamity.image_xscale = 1
	InevitableCalamity.image_yscale = 1
	InevitableCalamity.sprite_index = meter6_sprite;
    InevitableCalamity.image_speed = 0;
	InevitableCalamity.depth = -17;
}
	if icalamitylvl = 0 {
	InevitableCalamity.image_alpha = 0;
	}
	if icalamitylvl = 1 {
	InevitableCalamity.image_index = 0;
	InevitableCalamity.image_alpha = 1;
	}
//InevitableCalamity end

//SplinteringThrust start
if (!instance_exists(SplinteringThrust)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    SplinteringThrust = instance_create ( hud_x, hud_y, obj_custom_gfx);
    SplinteringThrust.step_script = hudThing_step_script;
    SplinteringThrust.draw_script = hudThing_draw_script;
    SplinteringThrust.owner = self.id;
    SplinteringThrust.keepmain = self.keepmain;
	SplinteringThrust.image_xscale = 1
	SplinteringThrust.image_yscale = 1
	SplinteringThrust.sprite_index = meter7_sprite;
    SplinteringThrust.image_speed = 0;
	SplinteringThrust.depth = -17;
}
	if sthrustlvl = 0 {
	SplinteringThrust.image_alpha = 0;
	}
	if sthrustlvl = 1 {
	SplinteringThrust.image_index = 0;
	SplinteringThrust.image_alpha = 1;
	}
//SplinteringThrust end

//BladeJudgment start
if (!instance_exists(BladeJudgment)){
    hud_x = obj_game_control.hud_x[44];
    hud_y = window_h-77+lengthdir_y(obj_game_control.hudp_shake[i]*0.1,obj_game_control.hudp_shake[i]*10);    
    BladeJudgment = instance_create ( hud_x, hud_y, obj_custom_gfx);
    BladeJudgment.step_script = hudThing_step_script;
    BladeJudgment.draw_script = hudThing_draw_script;
    BladeJudgment.owner = self.id;
    BladeJudgment.keepmain = self.keepmain;
	BladeJudgment.image_xscale = 1
	BladeJudgment.image_yscale = 1
	BladeJudgment.sprite_index = meter8_sprite;
    BladeJudgment.image_speed = 0;
	BladeJudgment.depth = -17;
}
	if bjudgmentlvl = 0 {
	BladeJudgment.image_alpha = 0;
	}
	if bjudgmentlvl = 1 {
	BladeJudgment.image_index = 0;
	BladeJudgment.image_alpha = 1;
	}
//BladeJudgment end

if state_type = "out" || state_type = "respawn" || state_type = "dead" {
	sclawslvl = 1;
	tflamelvl = 0;
	megalithlvl = 0;
	huntersfanglvl = 0;
	ddkicklvl = 0;
	icalamitylvl = 0;
	sthrustlvl = 0;
	bjudgmentlvl = 0;
	sealcount = 0;
	target.ignore_boundary = 0;
	if (instance_exists(dtilt_fx)) {with (dtilt_fx){instance_destroy();}}
	if (instance_exists(utilt_fx)) {with (utilt_fx){instance_destroy();}}
	if (instance_exists(stilt_fx)) {with (stilt_fx){instance_destroy();}}
	if (instance_exists(stilt_fx2)) {with (stilt_fx2){instance_destroy();}}
	if (instance_exists(ssmash_fx)) {with (ssmash_fx){instance_destroy();}}
	if (instance_exists(dsmash_fx)) {with (dsmash_fx){instance_destroy();}}
	if (instance_exists(usmash_fx)) {with (usmash_fx){instance_destroy();}}
	if (instance_exists(nair_fx)) {with (nair_fx){instance_destroy();}}
	if (instance_exists(dair_fx)) {with (dair_fx){instance_destroy();}}
	if (instance_exists(fair_fx)) {with (fair_fx){instance_destroy();}}
	if (instance_exists(uair_fx)) {with (uair_fx){instance_destroy();}}
	if (instance_exists(bair_fx)) {with (bair_fx){instance_destroy();}}
	if (instance_exists(susanoo_fx1)) {with (susanoo_fx1){instance_destroy();}}
	if (instance_exists(susanoo_fx2)) {with (susanoo_fx2){instance_destroy();}}
}

//Aura
if ( state_type != "entry" && state_type != "out" )
{
  if ( timer mod 60 = 1 )
  {
  susanooelectricaura = instance_create( x - 2 * (1-facing*2) * size , y , obj_spark);
  susanooelectricaura.sprite_index = choose ( electric_aura_sprite , electric_aura_sprite2 , electric_aura_sprite3 );
  susanooelectricaura.y = y - 15 * size;
  susanooelectricaura.image_xscale = 0.4 * (1 - facing * 2) * size;
  susanooelectricaura.image_yscale = 0.4 * size;
  susanooelectricaura.image_alpha = 0.9;
  susanooelectricaura.image_index = 0;
  susanooelectricaura.image_speed = 0.5;
  susanooelectricaura.image_angle = 0 + random(60) * (1-facing*2);
  susanooelectricaura.depth = -6.1;
  susanooelectricaura.script = char_custom6;
  susanooelectricaura.keepmain = keepmain;
  susanooelectricaura.sk00ps_susanoo = self.id;
  susanooelectricaura.temp = 1;
  susanooelectricaura.snap = self.id;
  }
}