if state_type = "edge" {

        hspeed = 0;
        state_type = "attack";
        attack_type = "edge_attack";
        image_speed = 0;
	timer = 0;
	time = 50;
    sprite_index = edge_attack_sprite;
    image_index = 0;
        timer_speed=1;
		intangible = 1;

	canceltemp = 0;
}
    if hitbox.hit = 1 {
		canceltemp = 1;
	}
if ( image_index < 2 )
  please_shadow = -1;

if timer < time {
    attacking = 0;
    state_type = "attack";
	
    switch (timer)
	{
	case 2: image_index = 1; break;
	case 5: image_index = 2; break;
	case 8: image_index = 3; break;
	case 11: image_index = 4; break;
	case 13: image_index = 5; break;
	case 15: image_index = 6; break;
	case 17: image_index = 7; break;
	case 19: image_index = 8; break;
	case 21: image_index = 9; break;
	case 23: image_index = 10; break;
	case 27: image_index = 11; break;
	case 31: image_index = 12; break;
	case 35: image_index = 13; break;
	case 39: image_index = 14; break;
	case 43: image_index = 15; break;
	case 47: image_index = 16; break;
	}
	if timer = 11
	{
	speed = 3*(1-facing*2);
	direction = 0*(1-facing*2);
	intangible = 1;
	sound_play(choose(attack_voice5,attack_voice6,no_voice));
	attacking = 0
	sound_play(cfswing3);
	create_hitbox(4,angle_correct(20),4,0,5,8,cfhit3,obj_spark_hit3,1.33 , 0.65 , 30.10 , 4.93,self.id,4,4);
	hitbox.di = 0.1;
	x = x+10*(1-facing*2);
	if sealcount < 8 {
	hitbox.execute_on_hit = "attacker.sealcount += 1"
	}
	if sealcount = 8 {
	hitbox.execute_on_hit = "attacker.sealcount = 1"
	}
	}
	if timer = 14 || timer = 26 {
	speed = 0;
	}
	if timer = 23
	{
	speed = 3*(1-facing*2);
	direction = 0*(1-facing*2);
	intangible = 1;
	attacking = 0
	sound_play(cfswing3);
	create_hitbox(4,angle_correct(20),7,5,5,8,cfhit3,obj_spark_hit3,1.33 , 0.65 , 26.10 , 4.93,self.id,6,4);
	hitbox.di = 0.1;
	x = x+10*(1-facing*2);
	if sealcount < 8 {
	hitbox.execute_on_hit = "attacker.sealcount += 1"
	}
	if sealcount = 8 {
	hitbox.execute_on_hit = "attacker.sealcount = 1"
	}
	}
	if timer >= 11 && timer <= 33 && canceltemp = 1 {
	if canceltemp = 1 && attacking != 1 && special =1 && (movedown != 1 && moveup != 1 && (moveleft = 1 || moveright = 1)) {
		state_type = "stand";
        attack_type = "none";
        timer = 0;
        time = -1;
        char_sideb();
	}
	}
}
  
if timer >= time-2 && state_type != "flinch" && state_type != "air_flinch" {
    x+= size * (2-facing*4);
	intangible=0;
	sprite_index = stand_sprite;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }