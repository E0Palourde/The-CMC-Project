if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding" {
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0;
        sprite_index = onslaught_start_sprite;
        image_index=0;
        timer = 1;
        time = 90;
        timer_speed=1;
        intangible = 1;
        final_smashes+=1
        smash_power = 0
        air_move=0
		
}
speed=0
gravity_lock = 1;
if ( timer < time ){

switch ( timer )
    {
	case 0: image_index = 0; break;
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 12: image_index = 1; break;
	case 15: image_index = 2; break;
	case 18: image_index = 3; break;
	case 21: image_index = 1; break;
	case 24: image_index = 2; break;
	case 27: image_index = 3; break;
	case 30: image_index = 1; break;
	case 33: image_index = 2; break;
	case 36: image_index = 3; break;
	case 39: image_index = 1; break;
	case 42: image_index = 2; break;
	case 45: image_index = 3; break;
	case 48: image_index = 1; break;
	case 51: image_index = 2; break;
	case 54: image_index = 3; break;
	case 57: image_index = 4; break;
	case 60: image_index = 5; break;
	case 62: image_index = 6; break;
	case 64: image_index = 7; break;
	case 66: image_index = 8; break;
	case 68: image_index = 9; break;
	case 75: image_index = 10; break;
	case 80: image_index = 11; break;
	case 84: image_index = 12; break;
	
	case 103: image_index = 0; break;
	case 106: image_index = 1; break;
	case 109: image_index = 2; break;
	case 112: image_index = 3; break;
	case 115: image_index = 4; break; //loop
	case 118: image_index = 5; break;
	case 121: image_index = 6; break; // loop end
	case 124: image_index = 4; break; //loop
	case 127: image_index = 5; break;
	case 130: image_index = 6; break; // loop end
	case 133: image_index = 4; break; //loop
	case 136: image_index = 5; break;
	case 139: image_index = 6; break; // loop end
	case 142: image_index = 4; break; //loop
	case 145: image_index = 5; break;
	case 148: image_index = 6; break; // loop end
	
	case 151: image_index = 0; break;
    case 155: image_index = 1; break;
    case 159: image_index = 2; break;
    case 163: image_index = 3; break;
    case 167: image_index = 4; break;
    case 171: image_index = 5; break;
    case 175: image_index = 6; break;
    case 179: image_index = 7; break;
    case 183: image_index = 8; break;
	
	case 187: image_index = 0; break;
    case 191: image_index = 1; break;
    case 195: image_index = 2; break;
    case 199: image_index = 3; break;
    case 203: image_index = 4; break;
    case 207: image_index = 5; break;
    case 211: image_index = 6; break;
	
	case 215: image_index = 0; break;
    case 219: image_index = 1; break;
    case 223: image_index = 2; break;
    case 227: image_index = 3; break;
    case 231: image_index = 4; break;
    case 235: image_index = 5; break;
	
	case 239: image_index = 0; break;
    case 243: image_index = 1; break;
    case 247: image_index = 2; break;
    case 251: image_index = 3; break;
    case 255: image_index = 4; break;
    case 259: image_index = 5; break;
    case 263: image_index = 6; break;
    case 267: image_index = 7; break;
    case 271: image_index = 8; break;
	
	case 275: image_index = 0; break;
    case 279: image_index = 1; break;
    case 283: image_index = 2; break;
    case 287: image_index = 3; break;
    case 291: image_index = 4; break;
    case 295: image_index = 5; break;
    case 299: image_index = 6; break;
	
	case 303: image_index = 0; break;
    case 307: image_index = 1; break;
    case 311: image_index = 2; break;
    case 315: image_index = 3; break;
    case 319: image_index = 4; break;
    case 323: image_index = 5; break;
	
	case 327: image_index = 0; break;
    case 330: image_index = 1; break;
    case 333: image_index = 2; break;
    case 336: image_index = 3; break;
    case 339: image_index = 4; break;
    case 342: image_index = 5; break;
    case 345: image_index = 6; break;
    case 348: image_index = 7; break;
	case 351: image_index = 5; break;
    case 354: image_index = 6; break;
    case 357: image_index = 7; break;
	case 360: image_index = 5; break;
    case 363: image_index = 6; break;
    case 366: image_index = 7; break;
	case 369: image_index = 5; break;
    case 372: image_index = 6; break;
    case 375: image_index = 7; break;
	case 378: image_index = 5; break;
    case 381: image_index = 6; break;
    case 384: image_index = 7; break;
	case 387: image_index = 5; break;
    case 390: image_index = 6; break;
    case 393: image_index = 7; break;
	case 396: image_index = 5; break;
    case 399: image_index = 6; break;
    case 402: image_index = 7; break;
	
	case 406: image_index = 0; break;
    case 410: image_index = 1; break;
    case 414: image_index = 2; break;
    case 418: image_index = 3; break;
    case 422: image_index = 4; break;
    case 426: image_index = 5; break;
    case 430: image_index = 6; break;
    case 434: image_index = 7; break;
	case 438: image_index = 6; break;
    case 442: image_index = 7; break;
	case 446: image_index = 6; break;
    case 450: image_index = 7; break;
	case 454: image_index = 6; break;
    case 458: image_index = 7; break;
	case 462: image_index = 6; break;
    case 466: image_index = 7; break;
	case 470: image_index = 6; break;
    case 474: image_index = 7; break;
	case 478: image_index = 8; break;
	case 482: image_index = 9; break;
    case 486: image_index = 10; break;
	
      }
	  
	  if timer = 1 {
		  ZAWARUDOTOKIWOTOMARE  = instance_create(x,y,obj_freeze)
ZAWARUDOTOKIWOTOMARE.dontpause = self.id
ZAWARUDOTOKIWOTOMARE.alarm[0] = 60
sound_play(onslaught_voice);
	  }
		  
	  
	  if timer >= 64 and timer < 103 and attack_success = 1 {
		  timer = 103 
		  time = 490
		  sprite_index = onslaught_charge_sprite
		  image_index = 0
		  maxdepth = max(depth,target.depth)
	  }
	  
	  if timer = 103 {
		  ZAWARUDOTOKIWOTOMARE  = instance_create(x,y,obj_freeze)
ZAWARUDOTOKIWOTOMARE.dontpause = self.id
ZAWARUDOTOKIWOTOMARE.alarm[0] = 323
thevoid = create_spark(0,0,self.id);
thevoid.depth = maxdepth + 0.1
thevoid.image_alpha = 0;
thevoid.alarm[0] = 323;
thevoid.x = view_xview - 120;
thevoid.y = view_yview - 120;
thevoid.sprite_index = black_screen_sprite;
thevoid.image_yscale = view_hview * 30;
thevoid.image_xscale = view_hview * 30;
target1 = target;
zoom = instance_create ( 0 , 0 , obj_camerazoom );
zoom.camera_l = target.x - 8;
zoom.camera_r = target.x + 8;
zoom.camera_u = target.y - 4 - actual_height;
zoom.camera_d = target.y + 4;
zoom.camera_boundary_zoom = 250;
zoom.alarm[0] = 323;
sound_play(onslaught2_voice);
	  }
	  
	  if timer = 342 {
		  theball = create_spark(-14,60,self.id);
theball.depth = -17
theball.image_alpha = 0.6;
theball.alarm[0] = 64;
theball.sprite_index = b_charge_sprite;
theball.image_yscale = 0.4;
theball.image_xscale = 0.4;
theball.image_speed = 0
theball.image_blend = c_fuchsia
sound_play(onslaught3_voice);
	  }
	  
		  
	  
	  with (obj_stage_extra) {
if depth < maxdepth 
visible = 0
}
	  
	  if timer > 103 and thevoid.image_alpha < 1 {
	thevoid.image_alpha += 0.1
}

if timer > 103 and timer < 426 {
	target1.sprite_index=target1.flinch_sprite
target1.state_type = "flinch"
target1.depth = -17;
target1.speed = 0;
target1.gravity_lock = 0;
target1.ignore_physics = 1;
target1.x = x + 44 * (1-facing*2) *size
target1.y = y * size;
}
	  
if timer >= 327 and timer < 426 {
	image_blend = c_dkgray
	aaa = after_image ( 1 , c_purple , 0.9 );
 aaa.image_xscale *= 1.05;
 aaa.image_yscale *= 1.05;
 aaa.depth = maxdepth + 0.1
}

if timer = 426 {
	image_blend = c_white
	sound_play(onslaught4_voice);
}
	  
	  if timer = 151 {
		  sprite_index = onslaught_scythe1_sprite
		  image_index = 0
	  }
	  
	  if timer = 187 {
		  sprite_index = onslaught_scythe2_sprite
		  image_index = 0
	  }
	  
	  if timer = 215 {
		  sprite_index = onslaught_scythe3_sprite
		  image_index = 0
	  }
	  
	  if timer = 239 {
		  sprite_index = onslaught_scythe1_sprite
		  image_index = 0
	  }
	  
      if timer = 275 {
		  sprite_index = onslaught_scythe2_sprite
		  image_index = 0
	  }
	  
	  if timer = 303 {
		  sprite_index = onslaught_scythe3_sprite
		  image_index = 0
	  }
	  
	  if timer = 327 {
		  sprite_index = onslaught_wing1_sprite
		  image_index = 0
	  }
	  
	  if timer = 406 {
		  sprite_index = onslaught_wing2_sprite
		  image_index = 0
	  }
	  /////////////////////////////////////////hitboxes
	  
	  if timer = 64 {
		  create_hitbox(2,90,0,0,-1,4,bbslash4,obj_spark_slash4,1.4,1.9,20,30,self.id,6,3);
	  }
	  
	  if timer = 179 {
		  create_projectile(2, 90, 0, 0, 200, 30, bbslash4, obj_spark_darkness, 1, 1, 15, 30, self.id, 20, char_custom1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		sound_play(beast_sound1);
		screen_shake(4,-8);
	  }
	  
	  if timer = 207 {
		  create_projectile(2, 90, 0, 0, 200, 30, bbslash4, obj_spark_darkness, 1, 1, 15, 30, self.id, 20, char_custom1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		sound_play(beast_sound1);
		screen_shake(4,-8);
	  }
	  
	  if timer = 227 {
		  create_projectile(2, 90, 0, 0, 200, 30, bbslash4, obj_spark_darkness, 1, 1, 15, 30, self.id, 20, char_custom1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		sound_play(beast_sound1);
		screen_shake(4,-8);
	  }
	  
	  if timer = 267 {
		  create_projectile(2, 90, 0, 0, 200, 30, bbslash4, obj_spark_darkness, 1, 1, 15, 30, self.id, 20, char_custom1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		sound_play(beast_sound1);
		screen_shake(4,-8);
	  }
	  
	  if timer = 295 {
		  create_projectile(2, 90, 0, 0, 200, 30, bbslash4, obj_spark_darkness, 1, 1, 15, 30, self.id, 20, char_custom1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		sound_play(beast_sound1);
		screen_shake(4,-8);
	  }
	  
	  if timer = 315 {
		  create_projectile(2, 90, 0, 0, 200, 30, bbslash4, obj_spark_darkness, 1, 1, 15, 30, self.id, 20, char_custom1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		sound_play(beast_sound1);
		screen_shake(4,-8);
	  }
	  
	  if timer >= 342 and timer < 406 and timer mod 6 = 0 {
		  create_projectile(1, 90, 0, 0, 200, 30, magic3, obj_spark_darkness, 1, 1, 15, 30, self.id, 20, char_custom1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		screen_shake(2,-4);
	  }
	  
	  if timer = 426 {
		  create_projectile(5, angle_correct(20), 8.8, 7.7, 200, 5, bbslash4, obj_spark_darkness, 1, 1, 15, 30, self.id, 20, char_custom1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		sound_play(onslaughtslash_sound);
		screen_shake(8,-13);
	  }
	  
	  if timer >= 426 {
	  with (obj_stage_extra){visible = 1}
	  }
	  
}

	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	with (obj_stage_extra){visible = 1}
    smash_power = 0
    attack_type = "none";
    intangible = 0;
    if air > 0
    state_type = "jump";
    else
    state_type = "stand";
    timer = 0;
    time =-1;
    }