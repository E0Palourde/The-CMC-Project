if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "uthrow";
image_speed = 0;
sprite_index = uthrow_sprite;
image_index=0;
timer = 0;
time = 78;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 54
}
if timer < time {
    switch ( timer )
      {
	  case 0: image_index = 0; break;
	  case 4: image_index = 1; break;
	  case 9: image_index = 2; break;
	  case 14: image_index = 3; break;
	  case 19: image_index = 4; break;
	  case 24: image_index = 5; break;
	  case 29: image_index = 6; break;
	  case 34: image_index = 7; break;
	  case 54: image_index = 8; break;
	  case 57: image_index = 9; break;
	  case 63: image_index = 10; break;
	  case 65: image_index = 11; break;
	  case 68: image_index = 12; break;
	  case 70: image_index = 13; break;
	  case 72: image_index = 14; break;
	  case 74: image_index = 15; break;
	  case 76: image_index = 16; break;
	  }
	  
	  if timer = 14 {
		  target.x = x + 19 * (1-facing*2)
		  target.y = y - 21
		  sound_play(uthrow_voice);
	  }
	  
	  if timer = 19 {
		  target.x = x + 15 * (1-facing*2)
		  target.y = y - 31 
	  }
	  
	  if timer = 24 {
		  target.x = x + 11 * (1-facing*2)
		  target.y = y - 32
	  }
	  
	  if timer >= 29 and timer < 54 {
		  target.x = x + 9 * (1-facing*2)
		  target.y = y - 33
	  }
	  
	  if timer = 54 {
		  create_hitbox(9,angle_correct(71),5,3,15,11,bbslash3,obj_spark_slash4,1.4,1.9,20,30,self.id,6,3);
	  }
	  
	  if timer > 54 and movejump = 1 {
			  state_type = "jump";
	attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 0;
	vspeed -= 5.7 * size;
	sound_play(jump_sound);
		  }
		  
		  
	  
	
}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        
