if ai_timer >= time-2
ai_state="idle"
if air = 0 {
if collision_rectangle(x-13,y-13,x+10,y,item,0,0) && hold_item = 0 && instance_nearest(x,y-5,item).holder = 0 && instance_nearest(x,y-5,item).grab > 0 {
        attack_type = "none";
        state_type = "land";
        sprite_index=land_sprite;
        timer = 0;
        time = 3;
        hold_item = 1;
        held_item = instance_nearest(x,y-5,item);
        held_item.holder = id;
        held_item.state_type = "held"
        sound_play(itemgetsnd);
        attacking = 0;
        exit
        }  
else {
if enemy_dist < 17 {
    //timer=0
    if enemy.air=0 {
    if held_item = -1 {
    if smash_power >= global.gs_fs_charge && abs(enemy.y-self.y) < 25 {
    if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
        facing=1-facing;
    attack_type = "final_smash" }
    else {
    if enemy.percent < 80
    attack_type = choose("jab","grab","jab","utilt","dtilt","stilt","dtilt","grab","grab","stilt","usmash","jab","grab","dsmash","stilt","jab") 
    else 
    attack_type = choose("jab","stilt","ssmash","utilt","dtilt","grab","dtilt","grab","grab","downb","ssmash","usmash","dsmash","dsmash","ssmash","stilt") }
    }
    else
    attack_type = "itemfthrow"
    }
    else {
    if held_item = -1
    attack_type = choose("jab","utilt","utilt","usmash","usmash","ssmash","utilt","sideb","ssmash","stilt","stilt","b","stilt","utilt")
    else
    attack_type = choose("itemfthrow","itemuthrow") }
    exit
    }
if enemy_dist >= 17 && enemy_dist <= 59 { //17, 34
    //timer=0
    if held_item = -1 {
        if enemy.y >= y-8*size
            attack_type = choose("stilt","stilt","stilt","sideb","dsmash","b","dtilt","sideb","dtilt","ssmash","dsmash","dtilt","dsmash","downb","stilt","ssmash") 
        else {
            if abs(enemy.x + enemy.hspeed - x) < size*9 && random(3)>2.2 && enemy.y > y - size*40
                attack_type = choose("upb","upb","upb","usmash");
            else
                attack_type = choose("usmash","utilt","utilt","upb","usmash","usmash","ssmash","utilt","ssmash","stilt","stilt","utilt","stilt","utilt")
        }
    }
    else
    attack_type = "itemfthrow" 
    exit
    }
}

if enemy_dist >= 60 { //35
    //timer=0
    if held_item = -1 {
        if enemy.y >= y-8*size
            attack_type = choose("b","b","b","sideb","sideb","b","downb","sideb","sideb","b","sideb","dtilt","taunt","downb","b","sideb") 
        else {
            if abs(enemy.x + enemy.hspeed - x) < size*9 && random(3)>2.2 && enemy.y > y - size*40
                attack_type = choose("upb","upb","upb","usmash");
            else
                attack_type = choose("usmash","utilt","utilt","upb","b","b","taunt","downb","sideb","b","b","sideb","sideb","b")
        }
    }
    else
    attack_type = "itemfthrow" 
    exit
    }
}
else if offstage && enemy.y > y-5
    attack_type = choose("dair","dair","dair","dair") 
else {
if enemy_dist < 22 {
    //timer=0
    if held_item = -1 {
    if smash_power >= global.gs_fs_charge && abs(enemy.y-self.y) < 25 {
    if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
        facing=1-facing;
    attack_type = "final_smash" }
    else {
    if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x){
    if enemy.y > y -2
    attack_type = choose("dair","dair","nair","nair","fair","nair","dair","fair","bair","downb")
    else
    attack_type = choose("uair","fair","nair","uair","fair","nair","uair","uair","fair")
    }
    else
    attack_type = choose("bair","nair","nair","nair","bair","bair","bair","bair","uair")
    }
    }
    else
    attack_type = "itemfthrow" 
    exit
    }
if enemy_dist >= 22 {
    //timer=0
    if held_item=-1 {
        if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x){
        if enemy.y < y - 10 
            attack_type = choose("uair","uair","uair","fair","uair","fair","fair","downb","uair","nair","uair")
        else
            attack_type = choose("uair","uair","nair","fair","dair","nair","fair","fair","sideb","nair","dair") }
    else
        attack_type = choose("uair","nair","nair","bair","bair","bair","bair","bair","bair","bair","nair") }
    else
    attack_type = "itemfthrow" 
    exit
    }
}
