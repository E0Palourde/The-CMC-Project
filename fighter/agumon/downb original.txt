
//Agumon Evolution
if evolution= 0 and greymon= 1 {
if state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump" {
        moveleft = 0
        moveright = 0
        state_type = "air_attack";
        attack_type = "downb";
        image_speed = 0;
        sprite_index = evolution_sprite;
        downb_timer = 300;
        image_index=0;
        timer = 0;
        time = 208;
        timer_speed=1;
	air_move = 0;
        moveleft = 0
        moveright = 0
}
if timer < time {
switch ( timer )
{
                case 3: image_index = 1; break;
		case 8: image_index = 2; break;
		case 10: image_index = 3; break;
		case 40: image_index = 4; break; 
		case 43: image_index = 5; break; //rise
                case 44: shakey = -5; break;
                case 45: shakey = -8; break;
                case 46: shakey = -12; break;
                case 47: shakey = -15; break;
                case 48: shakey = -18; break;
                case 49: shakey = -21; break;
                case 50: shakey = -24; break;
                case 51: shakey = -27; break;
                case 53: image_index = 6; break;
                case 54: image_index = 7; break;
                case 55: image_index = 8; break;
                case 56: image_index = 9; break; 
                case 57: image_index = 10; break;
                case 58: image_index = 11; break;
                case 59: image_index = 12; break;
                case 60: image_index = 13; break;
                case 61: image_index = 14; break; 
                case 62: image_index = 15; break;
                case 63: image_index = 16; break;
                case 64: image_index = 17; break;
                case 65: image_index = 18; break;
                case 66: image_index = 19; break; 
                case 67: image_index = 20; break;
                case 68: image_index = 21; break;
                case 69: image_index = 22; break;
                case 70: image_index = 23; break;
                case 71: image_index = 24; break; 
                case 72: image_index = 25; break;
                case 73: image_index = 26; break;
                case 74: image_index = 27; break;
                case 75: image_index = 28; break;
                case 76: image_index = 29; break;
                case 77: image_index = 30; break;
                case 78: image_index = 31; break;
                case 79: image_index = 32; break;
                case 80: image_index = 33; break;
                case 81: image_index = 34; break;
                case 82: image_index = 35; break;
                case 83: image_index = 36; break;
                case 84: image_index = 37; break;
                case 85: image_index = 38; break;
                case 86: image_index = 39; break;
                case 87: image_index = 40; break;
                case 88: image_index = 41; break;
                case 89: image_index = 42; break;
                case 90: image_index = 43; break;
                case 91: image_index = 44; break;
                case 92: image_index = 45; break;
                case 93: image_index = 46; break;
                case 94: image_index = 47; break;
                case 95: image_index = 48; break;
                case 96: image_index = 49; break;
                case 97: image_index = 50; break;
                case 98: image_index = 51; break;
                case 99: image_index = 52; break;
                case 100: image_index = 53; break;
                case 101: image_index = 54; break;
                case 102: image_index = 55; break; //eye
                case 106: image_index = 56; break;
                case 108: image_index = 57; break;
                case 118: image_index = 58; break; //light
                case 119: image_index = 59; break;
                case 120: image_index = 60; break;
                case 121: image_index = 61; break;
                case 122: image_index = 62; break;
                case 123: image_index = 63; break;
                case 124: image_index = 64; break;
                case 125: image_index = 65; break;
                case 126: image_index = 66; break;
                case 127: image_index = 67; break;
                case 128: image_index = 68; break;
                case 129: image_index = 69; break;
                case 130: image_index = 70; break;
                case 131: image_index = 71; break;
                case 132: image_index = 72; break;
                case 133: image_index = 73; break;
                case 134: image_index = 74; break;
                case 135: image_index = 75; break;
                case 136: image_index = 76; break;
                case 137: image_index = 77; break;
                case 138: image_index = 78; break;
                case 139: image_index = 79; break;
                case 140: image_index = 80; break;
                case 141: image_index = 81; break;
                case 142: image_index = 82; break;
                case 143: image_index = 83; break;
                case 144: image_index = 84; break; //fall start
                //case 145: shakey = -24; break;
                //case 146: shakey = -24; break;
                case 147: image_index = 85; shakey = -24; break;
                case 148: shakey = -21; break;
                case 149: shakey = -18; break;
                case 150: shakey = -15; break;
                case 151: shakey = -12; break;
                case 152: shakey = -9; break;
                case 153: shakey = -6; break;
                case 154: image_index = 86; shakey = 0; break;
                case 156: image_index = 0; sprite_index = taunt2_sprite; break;
                case 157: image_index = 1; break;
		case 163: image_index = 2; break;
		case 166: image_index = 3; break;
		case 168: image_index = 4; break; //Roar start 
		case 170: image_index = 5; break;
		case 196: image_index = 4; break;
		case 200: image_index = 6; break;
                case 203: image_index = 7; break;
}
             state_type = "air_attack";
            if timer >= 0 {
                vspeed = 0;
        intangible = 1
        gravity = 0;
        gravity_lock = 1;
                }
            if timer = 0 {
                hspeed = 0
                sound_play(greymon_evolution_voice);
                }
            if timer = 5 {
                sound_play(attack_sound1);
                }
            if timer = 53 {
                sound_play(dmo_evolution_sound);
                }
            if timer = 106 {
         effect_create_above(ef_ring,x+(1-facing*2),y-71,0,make_color_rgb(249,104,23))
         }
            if timer = 118 {
                instance_create(0,0,obj_flashscreen)
                create_spark(-115+facing*230,165,evolution_effect,1,1.2,1.2)                                           
                }
            if timer = 156 {
                sound_play(greymon_voice);
                }
            if timer = 168 {
               sound_play(swingsnd1);
               shaker = instance_create(x,y,obj_shakescreen2);
	       shaker.ampl = 8;
	       shaker.xampl = 0;
	       shaker.time = 28;
               if air = 0 {
               duster = instance_create(x+16-facing*32,y,obj_dust_effect)
                duster.facing = facing
                duster.image_alpha = 0.75
                duster2 = instance_create(x+18-facing*36,y,obj_dust_effect)
                duster2.facing = 1-facing
                duster2.image_alpha = 0.75
                }
                }
            if timer = 168 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 171 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 174 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 177 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 180 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 183 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 186 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 189 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 192 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }
         if timer = 195 {
         effect_create_above(ef_ring,x+(6-facing*12),y-42,0,make_color_rgb(128,128,128))
         }       
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";  
    state_type = "stand";
    evolution = 1; 
    timer = 0;
    time =-1;
    intangible = 0;

    stand_sprite = stand2_sprite;
                mask_sprite = mask2_sprite;
                mask_index = stand2_sprite;
                crouch_mask_sprite = crouch_mask2_sprite;
                walk_sprite = walk2_sprite;
                run_sprite = run2_sprite;
                dash_sprite = dash2_sprite;
                brake_sprite = brake2_sprite;
                turn_sprite = turn2_sprite;
                jump_sprite = jump2_sprite;
                mid_jump_sprite = mid_jump2_sprite;
                fall_sprite = fall2_sprite;
                land_sprite = land2_sprite;
                shield_sprite = shield2_sprite;
                parry_sprite = parry2_sprite;
                air_dodge_sprite = air_dodge2_sprite;
                spot_dodge_sprite = spot_dodge2_sprite;
                roll_sprite = roll2_sprite;
                crouch_sprite = crouch2_sprite;
                flinch_sprite = hurt1_sprite;
                flinch1_sprite = hurt1_sprite;
                flinch2_sprite = hurt2_sprite;
                flinch3_sprite = hurt3_sprite;
                tumble_sprite = tumble2_sprite;
                down_sprite = down2_sprite;
                broken_sprite = broken2_sprite;
                item_forward_sprite = item_forward2_sprite;
                item_up_sprite = item_up2_sprite;
                item_down_sprite = item_down2_sprite;
                item_heavy_sprite = item_heavy2_sprite;
                item_swing_sprite = item_swing2_sprite;
                item_shoot_sprite = item_shoot2_sprite;
                edge_sprite = edge2_sprite;
                ukemi_sprite = ukemi2_sprite;
                launched_sprite = launched2_sprite;
                swim_sprite = swim2_sprite;
                ladder_sprite = ladder2_sprite;
                vehicle_sprite = vehicle2_sprite;
                fly_voice1 = greymonfly_voice1;
                fly_voice2 = greymonfly_voice2;
                starko_voice = greymonstarko_voice;
                die_voice1 = greymondie_voice1;
                die_voice2 = greymondie_voice2;
 
    }
}

//Agumon
if evolution =0 and greymon= 0{
if state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump" {
        moveleft = 0
        moveright = 0
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "downb";
        image_speed = 0;
        sprite_index = downb_sprite;
        image_index=0;
        timer = 0;
        time = 103;
        timer_speed=1;
	air_move = 1
        special = 1;
}
if timer < time {
switch ( timer )
{
                case 6: image_index = 1; break; //charge start
		case 46: image_index = 2; break;
		case 47: image_index = 3; break;
		case 48: image_index = 4; break;
                case 49: image_index = 5; break;
                case 50: image_index = 6; break;
                case 51: image_index = 7; break;
                case 52: image_index = 8; break;
                case 53: image_index = 9; break;
                case 54: image_index = 10; break;
                case 55: image_index = 11; break;
                case 56: image_index = 12; break;
                case 57: image_index = 13; break;
                case 58: image_index = 14; break;
                case 59: image_index = 15; break;
                case 60: image_index = 16; break;
                case 61: image_index = 17; break;
                case 62: image_index = 18; break;
                case 72: image_index = 19; break;
                case 75: image_index = 20; break;
                case 77: image_index = 21; break;
                case 83: image_index = 22; break;
                case 93: image_index = 21; break;
                case 96: image_index = 23; break;
                case 100: image_index = 0; break;
}
             state_type = "air_attack";
             if timer = 6 {
               sound_play(attack_sound2);
                //sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
                }
            if timer >= 6 && timer <= 45 {
                 meter += 0.15 
                 }
            if timer = 10 {
            if meter >= maxmeter {
                timer = 100
                image_index = 0;                
            }
            }
            if timer = 45 {
            if special && meter < maxmeter {
                timer = 6
            }
            if timer = 46 {
            if meter >= maxmeter {
                timer = 100
                image_index = 0;                
            }
            }
            }           
}  
if (timer >= time-1 || timer = 99) && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    if meter >= maxmeter {
                greymon = 1               
            }
    }
}        

//Greymon
if evolution =1{
if ((state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump") && downb_timer = 0) {
        moveleft = 0
        moveright = 0
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "downb";
        image_speed = 0;
        sprite_index = downb2_sprite;
        image_index=0;
        timer = 0;
        time = 48;
        timer_speed=1;
        downb_timer = 120;
	air_move = 1
        temp = air > 0
        if temp = 1 {
            sprite_index = downb2_air_sprite;
            state_type = "air_attack";
		time = 48;
		image_speed = 0;
        }
}
if temp = 0 {
if timer < time {
switch ( timer )
{
                case 5: image_index = 1; break;
		case 18: image_index = 2; break;
		case 22: image_index = 3; break; 
		case 25: image_index = 4; break; //fire
                case 27: image_index = 5; break;
                case 37: image_index = 6; break;
                case 42: image_index = 7; break;
}
             state_type = "air_attack";
               if timer = 1 {
               //sound_play(b_voice);               
                }
               if timer = 25 {
                sound_play(b_sound);
                create_projectile(2,40+facing*80,0.5,0.1,10,8/size,fire2,obj_spark_fire1,0.4,0.4,25,21,self.id,65,mega_napalm_script); 
        proj.direction = 325-facing*110
        proj.speed = 6
        proj.hit_stun = 1
        proj.hitshake_type = 2
        proj.sprite_index = mega_napalm_sprite
        proj.image_angle = 325+facing*80;
                }
               
}
}
else {     
if timer < time {
switch ( timer )
{
                 case 5: image_index = 1; break;
		case 18: image_index = 2; break;
		case 22: image_index = 3; break; 
		case 25: image_index = 4; break; //fire
                case 27: image_index = 5; break;
                case 37: image_index = 6; break;
                case 42: image_index = 7; break;
}
             state_type = "air_attack";
               if timer = 1 {
               //sound_play(b_voice);               
                }
               if timer = 25 {
                sound_play(b_sound);
                create_projectile(2,40+facing*80,0.5,0.1,10,8/size,fire2,obj_spark_fire1,0.4,0.4,25,21,self.id,65,mega_napalm_script); 
        proj.direction = 325-facing*110
        proj.speed = 6
        proj.hit_stun = 1
        proj.hitshake_type = 2
        proj.sprite_index = mega_napalm_sprite
        proj.image_angle = 325+facing*80;
                }
               
}
}
if air = 0 && temp > 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=10; }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
}