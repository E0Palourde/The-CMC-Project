fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" {
        if ( side_b_used = 1 ) exit;
        vspeed -= 0.1
        state_type = "air_attack"
        attack_type = "sideb"
        image_speed = 0
        sprite_index = sideb_sprite
        image_index=0
        timer = 0
        time = 55
        temp=0
        timer_speed=1
        attack_success=0
        target=-1
        special=1
        attacking=0
        hspeed = 0
        vspeed = 0
        air_move = 0
        sound_play(sideb_sound)
        temp = 0
        movejump = 0
    }
{
  switch ( timer )
    {
    case 3: image_index = 1; break;
    case 6: image_index = 2; break;
    case 13: image_index = 3; break;
    case 16: image_index = 4; break;
    case 19: image_index = 5; break;
    case 21: image_index = 6; break;
    case 23: image_index = 5; break;
    case 25: image_index = 6; break;
    case 27: image_index = 5; break;
    case 29: image_index = 6; break;
    case 37: image_index = 7; break;
    case 48: image_index = 8; break;
    }
	if timer = 1 && air > 0 {
	side_b_used = 1;
	}
	if timer >= 1 && timer <= 45 {
		gravlock = 1
		vspeed = 0
		}
	if timer >= 19 && timer <= 30 {
		hspeed = 6 - (facing*12)
		}
	if timer >= 30 && hspeed > 0 {
		hspeed -= 0.4
		}
	if timer >= 30 && hspeed < 0 {
		hspeed += 0.4
		}
	if timer = 19 {
				fire = instance_create(x+(30-facing*60),y-20,obj_spark)
				fire.sprite_index = fire_sprite;
				fire.image_xscale = (0.7-facing*1.4)*size
				//fire.image_yscale = 0.7*size
				fire.image_speed = 0.18;
				fire.snap = self.id
				fire.x_snap = size*(12-facing*24)
				fire.image_alpha = 0.5
				//fire.y_snap = 10*size

                duster = instance_create(x,y,obj_dust_effect)
                duster.facing = facing
                duster.image_alpha = 0.75
                duster.image_xscale *= 0.4*size
                duster.image_yscale *= 0.3*size
                sound_play(sideb2_sound);
                if random(10) > 2
                sound_play(choose(attack_voice1,attack_voice2,attack_voice3));
                create_hitbox(15,32+facing*116,6.85,5.64,14,16,punch3,obj_spark_aura,1,0.6,23,22,self.id,13,3);
		hitbox.di = 0.45
                }
		if timer >= 22 {
		force_edge_grab = 1
			}
		if timer = 32 {
		with fire {instance_destroy()}
		}
		if timer = 46 {
			gravlock = 0
			}
		if timer >= 46 && vspeed > 1.2 {
		vspeed = 1.2
		}
	}
 if (timer >= 4){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 110) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 130)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
				dontrepeat = 1;
				}
				}
        
  }	    
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        dontrepeat = 0;
        attack_type = "none";
        if air > 0
        state_type = "air";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
	intangability = 0
    }