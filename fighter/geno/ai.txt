if ai_timer >= time-2
ai_state="idle"
if air = 0 {
if collision_rectangle(x-13,y-13,x+10,y,item,0,0) && hold_item = 0 && instance_nearest(x,y-5,item).holder = 0 && instance_nearest(x,y-5,item).grab > 0 {
        attack_type = "none";
        state_type = "land";
        sprite_index=land_sprite;
        timer = 0;
        time = 3;
        hold_item = 1;
        held_item = instance_nearest(x,y-5,item);
        held_item.holder = id;
        held_item.state_type = "held"
        sound_play(itemgetsnd);
        attacking = 0;
        exit
        } 
else {
if distance_to_object(enemy) < 20 {
    //timer=0
    if enemy.y > y - size*16 {
    if held_item = -1 {
    if smash_power >= global.gs_fs_charge && abs(enemy.y-self.y) < 30 && distance_to_object(obj_edge_left) > 70 && distance_to_object (obj_edge_right) > 70 {
    if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
        facing=1-facing;
    attack_type = "final_smash" }
    else {
    if enemy.percent < 87
    attack_type = choose("jab","dtilt","jab","utilt","utilt","utilt","dtilt","grab","grab","stilt","usmash","stilt","grab","ssmash","dsmash") 
    else 
    attack_type = choose("jab","stilt","dsmash","utilt","utilt","utilt","dtilt","grab","grab","dtilt","ssmash","usmash","dsmash","usmash","ssmash","stilt") }
    }
    else
    attack_type = "itemfthrow"
    }
    else {
    if held_item = -1
    attack_type = choose("jab","utilt","utilt","utilt","usmash","usmash","ssmash","dtilt","dtilt","ssmash","dsmash","utilt","downb","stilt","utilt","usmash")
    else
    attack_type = choose("itemfthrow","itemuthrow") }
    exit
    }
if distance_to_object(enemy) >= 20 && enemy.air=0 {
    //timer=0
    if held_item = -1 {
    if smash_power >= global.gs_fs_charge && abs(enemy.y-self.y) < 30 && distance_to_object(obj_edge_left) > 70 && distance_to_object (obj_edge_right) > 70 {
    if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
        facing=1-facing;
    attack_type = "final_smash" }
    else {
    if kaioken = 0
    attack_type = choose("stilt","stilt","stilt","dsmash","b","dsmash","ssmash","sideb","ssmash","dsmash","downb","downb","stilt","dsmash","ssmash")
    else if !(facing=1 && x<obj_edge_left.x+25) && !(facing=0 && x>obj_edge_right.x-25)    
     attack_type = choose("stilt","stilt","stilt","downb","b","stilt","b","dsmash","sideb","ssmash","dsmash","sideb","downb","downb","dsmash","ssmash") }
    }
    else
    attack_type = "itemfthrow" 
    exit
    }
}
}
else if offstage && enemy.y > y-5
    attack_type = choose("nair","fair","fair")
else {
if distance_to_object(enemy) < 23 {
    //timer=0
    if held_item = -1 {
    if smash_power >= global.gs_fs_charge && abs(enemy.y-self.y) < 25 {
    if ((facing=1 && enemy.x>x) || (facing=0 && enemy.x<x))
        facing=1-facing;
    attack_type = "final_smash" }
    else {
    if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x){
    if enemy.y > y -2
    attack_type = choose("dair","fair","nair","nair","fair","nair","dair","fair","dair")
    else
    attack_type = choose("uair","fair","nair","uair","fair","nair","uair","uair","nair")
    }
    else
    attack_type = choose("bair","nair","nair","bair","bair","bair","bair","nair","bair","dair","bair")
    }
    }
    else
    attack_type = "itemfthrow" 
    exit
    }
if distance_to_object(enemy) >= 23 {
    //timer=0
    if held_item=-1 {
        if (facing=0 && enemy.x > x) || (facing=1 && enemy.x<=x){
        if enemy.y < y - 10 
            attack_type = choose("uair","uair","uair","nair","uair","fair","fair","downb","b","nair","uair")
        else
            attack_type = choose("uair","nair","nair","fair","downb","fair","fair","b","sideb","sideb","nair","dair","nair","nair") }
    else
        attack_type = choose("bair","nair","nair","bair","bair","bair","bair","bair","bair","bair") }
    else
    attack_type = "itemfthrow" 
    exit
    }
}
