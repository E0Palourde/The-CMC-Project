fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump" && air < max_jumps {
    attacking = 0;
    special = 0;
    timer = 0;
    attack_type = "upb"
    temp2 = 0
    if air = 0 {
        state_type = "air_attack";
        sprite_index = upb_sprite;
        hspeed *= 0.25;
        duster = instance_create(x + 4*(1-facing*2),y,obj_dust_effect);
        duster.facing = facing; 
        duster = instance_create(x - 4*(1-facing*2),y,obj_dust_effect);
        duster.facing = 1-facing; 
        temp = 0
        heavy_armor = 13
       air_move = 1
	special = 0
    }
    else {
        state_type = "air_attack";
        sprite_index = upb_air_sprite;
        temp = 1
        vspeed = -size*2.5
        heavy_armor = 13
    }
        image_speed = 0;
        image_index=0;
        time = 62;
        timer_speed=1;
        if moveright = 1 facing = 0
        if moveleft = 1 facing = 1
}
        if timer < time {
	if temp = 0 {
	switch (timer) {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 8: image_index = 4; break;
	case 10: image_index = 5; break;
	case 12: image_index = 6; break;
	case 14: image_index = 7; break;
	case 16: image_index = 8; break;
	case 18: image_index = 9; break;
	case 20: image_index = 10; break;
	case 21: image_index = 11; break;
	case 22: image_index = 12; break;
	case 28: image_index = 13; break;
	case 34: image_index = 14; break;
	case 40: image_index = 15; break;
	case 46: image_index = 16; break;
	case 52: image_index = 17; break;
	case 58: image_index = 18; break;
	case 64: image_index = 19; break;
	}
}
	if temp = 1 {
	switch (timer) {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 8: image_index = 3; break;
	case 10: image_index = 4; break;
	case 12: image_index = 5; break;
	case 14: image_index = 6; break;
	case 16: image_index = 7; break;
	case 18: image_index = 8; break;
	case 20: image_index = 9; break;
	case 21: image_index = 10; break;
	case 22: image_index = 11; break;
	case 27: image_index = 12; break;
	case 32: image_index = 13; break;
	case 36: image_index = 14; break;
	case 40: image_index = 15; break;
	case 44: image_index = 16; break;
	case 48: image_index = 17; break;
	case 52: image_index = 18; break;
	case 56: image_index = 19; break;
	case 60: image_index = 20; break;
	case 64: image_index = 21; break;
	}
}
	if timer > 25
	force_edge_grab = 1
	if air = 0 {
	//air_move = 0
	hspeed = 0
	}
if timer = 1 {
		with(hurtbox)
			instance_destroy()
		if air=0
			create_hurtbox_precise(self.id,67,upb_mask)
		else
			create_hurtbox_precise(self.id,67,upb_air_mask)

		sound_play(skill)
		sound_play(genoboost_sound)
		image_speed = 0.01;
                spark = instance_create(x,y-38,obj_spark_effect)
		micon = instance_create(x,y-38,obj_spark)
		micon.sprite_index = micon_sprite;
		micon.image_index = 0;
		micon.image_speed = 0.5
		micon.alarm[0] = 11
		micon.image_xscale = 0.9 * (1-facing*2) * size
		micon.image_yscale = 0.9 * size
		micon.x = x +1* size
		micon.y = y +1* size
		micon.image_alpha= 0.60;
		/* icon = instance_create(x+1*(1-facing*2),y-45,obj_spark)
		icon.sprite_index = icon_sprite;
		icon.image_index = 0;
		icon.image_speed = 0
		icon.alarm[0] = 11
		icon.image_xscale = 0.35 * (1-facing*2) * size
		icon.image_yscale = 0.5 * size
		icon.x = x+1*(1-facing*2) * size
		icon.y = y - 45*size */
		}
if instance_exists(micon) {
            micon.x = x +1* size
		micon.y = y +1* size
        }
            if timer = 4 {
                sound_play(upb_sound);
                image_speed = 0
                heavy_armor = 13
            }
	    if timer > 0 && timer < 12 && special = 1
		temp2 = -1
if timer = 12 {
                spark = instance_create(x,y-38,obj_spark_effect)
		bicon = instance_create(x,y-38,obj_spark)
		bicon.sprite_index = bicon_sprite;
		bicon.image_index = 0;
		bicon.image_speed = 0.45
		bicon.alarm[0] = 10
		bicon.image_xscale = 0.5 * (1-facing*2) * size
		bicon.image_yscale = 0.5 * size
		bicon.x = x * size
		bicon.y = y - 38*size
		}
	    if timer > 12 {
		spark.x = x * size
		spark.y = y - 38*size
		bicon.x = x * size
		bicon.y = y - 38*size
		if bicon.image_index >= bicon.image_number - bicon.image_speed
		bicon.image_index = 0
		}
		if timer = 11
		special = 0
		if timer >= 12 && timer < 22 && temp2 = 0 && special = 1 {
			
			sound_play(extrapower_sound);
			temp2 = 1
		
			}
		if timer = 19 {
			boostspark = instance_create(x, y - 32 *size,obj_spark)
			boostspark.sprite_index = powerup_sprite;
			boostspark.image_xscale = 0.85;
			boostspark.image_yscale = 0.85;
			boostspark.image_speed = 0.2;
			if temp2 <= 0
			boostspark.image_index = 0;
			else
			boostspark.image_index = 4;
			boostspark.snap = self.id;
			}
		if timer = 24 {
			boosttimer = 240
			boosttimer2 = 1
			if temp2 = 1 {
			boosttimer = 1
			boosttimer2 = 240 }
			}
		if timer = 44 {
			with boostspark instance_destroy()
			}
            if timer = 8 {
                if temp
                    hspeed *= 1.65;
            }
            if timer = 45 {
                heavy_armor = 0
                air_move = 1
                intangible = 0
            }
            if timer <= time - 8 && temp
                vspeed += -1.05*size  
            if temp = 0 || timer < 55 {
                if hspeed > 1*size
                    hspeed = 1.6
                else if hspeed < -1*size
                    hspeed = -1.6
                else
                    hspeed = 0
		}
		if timer > 55 {
		if moveright
		hspeed += 1.3
		if moveleft
		hspeed -= 1.3
		if hspeed < -3*size
		hspeed = -3*size
		if hspeed > 3*size
		hspeed = 3*size
		}
                if vspeed < -2.75*size
                    vspeed = -2.75*size
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        attack_type = "none";
        if air > 0
            state_type = "fall";
        else {
            state_type = "stand";
            hspeed *= 0.3;
        }
	with boostspark instance_destroy()
        timer = 0;
        time =-1;
    }
        
