if ( state_type = "jump" )
{
    hspeed = 0
    state_type = "air_attack";
    attack_type = "dair";
    sprite_index = nair_sprite;
    image_speed = 0;
    image_index = 0;
    timer = 0;
    time = 52;
    canceltemp = 0;
	attacktemp = 1
	attacking = 1
}

if timer < time {
	switch ( timer )
    {
        case 9: image_index = 1; break;
        case 11: image_index = 3; break;
        case 50: image_index = 4; break;
    }
	if attack_success || attack_shielded
	canceltemp = 1
	if !attacking && sftemp != -1 && sftemp != 5 && sftemp != 10 && sftemp != 43 && sftemp != 57 && sftemp != 5 && sftemp != 13 && sftemp != 18 && sftemp != 22 && sftemp != 27 && sftemp != 47 && sftemp != 52
	attacktemp = 0
    if ( timer < 11 )
    {
        gravity_lock = 1;
        vspeed = 0;
        hspeed = 0;
    }
    if ( timer = 11 )
    {
        sound_play(choose(attack_voice1,attack_voice2,attack_voice3));
        sound_play(attack_sound2);
        gravity_lock = 0;
        create_hitbox(8,70+facing*40,4.7,1.5,16,4,sf_kick2,obj_spark_special1,0.9,0.2,7,-5,self.id,37,2);
        hitbox.shield_stun = 4;
	hitbox.ground_only = 1;
        create_hitbox2(8,290-facing*40,5,4.8,16,4,sf_kick2,obj_spark_special1,0.5,0.5,10,0,self.id,37,2);
        hitbox2.hit_stun = 8;
        create_hitbox3(8,0+facing*180,4.5,0,16,4,sf_kick2,obj_spark_special1,0.5,0.5,3,6,self.id,37,2);
        hitbox3.hit_stun = 8;
        hitbox3.shield_stun = 3;
    }
    if ( timer >= 11 )
    {
        speed = 6.2*size;
        direction = 295-facing*50;
        image_angle = direction+(35+facing*110);
        temp_fall_speed = 0;
    }
    if ( timer = 14 )
    {
        hitbox2.dir = 0+facing*180;
	hitbox2.bkb = 5*size;
	hitbox2.kbg = 0*size;
    }
    if ( air = 0 )
    {
        state_type = "land";
        attack_type = "none";
        timer = 0;
        time = 8;
        sprite_index = land_sprite;
    }

	if timer <= 50 && canceltemp {
	if sftemp != -1 && sftemp != 5 && sftemp != 10 && sftemp != 43 && sftemp != 57 && sftemp != 5 && sftemp != 13 && sftemp != 18 && sftemp != 22 && sftemp != 27 && sftemp != 47 && sftemp != 52 {
	if special > 0 && movedown != 1 && moveup != 1 && moveleft != 1 && moveright != 1
	  {
		image_angle = 0;
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
			dontrepeat = 0

		if ( smash_power >= global.gs_fs_charge )
		interrupt = 1;
		else
//Don't get rid of these for anyone else that looks at this unless you're overhauling the sftemps. They're to prevent the hitboxes lingering into his other moves.
	    if (instance_exists(hitbox)){
	      with (hitbox) instance_destroy();
	    }
	    if (instance_exists(hitbox2)){
	      with (hitbox2) instance_destroy();
	    }
	    if (instance_exists(hitbox3)){
	      with (hitbox3) instance_destroy();
	    }
	    char_b();
	  }
	if special > 0 && moveup = 1
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
		image_angle = 0;
	    if (instance_exists(hitbox)){
	      with (hitbox) instance_destroy();
	    }
	    if (instance_exists(hitbox2)){
	      with (hitbox2) instance_destroy();
	    }
	    if (instance_exists(hitbox3)){
	      with (hitbox3) instance_destroy();
	    }
	    char_upb();
	  }
	if special > 0 && movedown = 1
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
			dontrepeat = 0

		image_angle = 0;
	    if (instance_exists(hitbox)){
	      with (hitbox) instance_destroy();
	    }
	    if (instance_exists(hitbox2)){
	      with (hitbox2) instance_destroy();
	    }
	    if (instance_exists(hitbox3)){
	      with (hitbox3) instance_destroy();
	    }
	    char_downb();
	  }
	if special > 0 && ( moveleft = 1 || moveright = 1 )
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
		image_angle = 0;
	    if (instance_exists(hitbox)){
	      with (hitbox) instance_destroy();
	    }
	    if (instance_exists(hitbox2)){
	      with (hitbox2) instance_destroy();
	    }
	    if (instance_exists(hitbox3)){
	      with (hitbox3) instance_destroy();
	    }
	    char_sideb();
	  }
}
}
else
sftemp_timer = 0
	if timer = time-1
	attacking = 0
}

if (timer >= 11 && timer != 14){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0) && target.offstage && obj_score_control.stocks[target.number-1] == 1{
				if ((target.weight <= .22 && target.percent > 55) || (target.weight > .22 && target.weight < .3 && target.percent > 65) || (target.weight > .3 && target.percent > 75)){
			    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	  

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    canceltemp = 0
    image_angle = 0;
    attack_type = "none";
	dontrepeat = 0
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    attacking = 0
}
        
