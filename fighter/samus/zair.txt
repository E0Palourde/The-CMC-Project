if (state_type = "jump") {
        state_type = "air_attack";
        attack_type = "zair";
        image_speed = 0;
        sprite_index = zair_sprite;
        image_index=0;
        timer = 0;
        time = 46;
        timer_speed=1;
        if moveright = 1 facing = 0
        if moveleft = 1 facing = 1
        temp = 0
        hitbox = -99
	intangible = 0
}
if timer < time {
    state_type = "air_attack";
	switch (timer) {
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 12: image_index = 3; break;
	case 15: image_index = 4; break;
	case 23: image_index = 5; break;
	case 28: image_index = 6; break;
	case 31: image_index = 7; break;
	case 34: image_index = 8; break;
	case 38: image_index = 9; break;
	case 42: image_index = 10; break;
	}
    if timer = 12
        instance_create(x+4*size*(1-facing*2),y-size*15,obj_spark_effect)
    if timer >= 15 && timer <= 22 {
        if collision_rectangle(x+(5-facing*10)*size,y-16*size,x+(90-facing*180)*size,y-32*size,obj_edge_left,1,1) {
            facing = 0
            edge = instance_nearest(x+20*size,y-5*size,obj_edge_left)
            y = edge.y + sprite_get_height(sprite_index)*image_yscale - 13
            x = edge.x-7*size
            temp = 1
            state_type = "jump"
            attack_type = "none"
        }
        if collision_rectangle(x+(5-facing*10)*size,y-16*size,x+(90-facing*180)*size,y-32*size,obj_edge_right,1,1) {
            facing = 1
            edge = instance_nearest(x+20*size,y-5*size,obj_edge_right)
            y = edge.y + sprite_get_height(sprite_index)*image_yscale - 13
            x = edge.x+7*size
            state_type = "jump"
            attack_type = "none"
            temp = 1
        }
    }
    if (timer >= 12 && timer <= 14) || (timer > 22 && timer < 28) {
        if collision_rectangle(x+(5-facing*10)*size,y-16*size,x+(55-facing*110)*size,y-32*size,obj_edge_left,1,1) {
            facing = 0
            edge = instance_nearest(x+20*size,y-5*size,obj_edge_left)
            y = edge.y + sprite_get_height(sprite_index)*image_yscale - 13
            x = edge.x-7*size
            temp = 1
            state_type = "jump"
            attack_type = "none"
        }
        if collision_rectangle(x+(5-facing*10)*size,y-16*size,x+(50-facing*100)*size,y-32*size,obj_edge_right,1,1) {
            facing = 1
            edge = instance_nearest(x+20*size,y-5*size,obj_edge_right)
            y = edge.y + sprite_get_height(sprite_index)*image_yscale - 13
            x = edge.x+7*size
            state_type = "jump"
            attack_type = "none"
            temp = 1
        }
    }
    if timer = 15 {
        create_hitbox(6,5+facing*170,4,2.1,10,8,shock2,obj_spark_shock,1.8,0.7,52,24,self.id,7,4)
        hitbox.shake_type = 1
        hitbox.shake_ampl = 0.5
        hitbox.hit_stun = 9
    }
    if timer = 12
        sound_play(grapple_sound)
    if air = 0
        hspeed = 0 
if air = 0 {
    state_type="land"
    attack_type="none"
    sprite_index = land_sprite
    image_index = 0
    image_speed = 0
    timer=0
    time=10
}
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air = 0
    state_type = "stand";
    else
    state_type = "jump";
    timer = 0;
    time =-1;
}
        
