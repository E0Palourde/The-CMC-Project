if ( state_type = "stand" || state_type = "run" ) && dtilttimer <= 0
{
	hspeed *= 0.8-(nobullet*0.8);
	state_type = "attack";
	attack_type = "usmash";
	sprite_index = usmash_sprite;
	image_speed = 0;
	image_index = 0;
	timer = 0;
	time = 48;
	timer_speed = 1;
	charge_frame = 4 + (nobullet*97);
	
	///Projectile Initialization Variables - Streamlines creation of more complex circular projectile patterns. ( Complete Circle: bulletshift * bullettotal = 360 )
	bullettype = 4; //Bullet type referenced in custom scripts with multiple projectile types.
	bulletcount = 0; //Initial bullet count. This increases during loops.
	bullettotal = 3; //Total number of bullets created. Loop max. Don't set this too high or performance will RIP!

	bulletstartdir = 90; //Initial bullet direction.  Use negative numbers for downward angles.
	bulletflip = 0;
	bulletshift = 30 * (1-bulletflip*2); //Shifts the direction of the next bulletcount by this amount.
	bulletdirshift = bulletstartdir + bulletcount*bulletshift; //Used in direction/angle calculation.
	bulletscale = 0.25; //Resizes bullet.

	bulletdmg = 0;
	bulletdir = 361;
	bulletbkb = 0;
	bulletkbg = 0;
	bulletshielddmg = 5;
	bullethitlag = 0;
	bulletsound = fire3;
	bulletspark = obj_spark_fire1;
	bulletxscale = 0.5;
	bulletyscale = 0.5;
	bulletx = 0;
	bullety = 30;
	bullettime = 99;
	bulletid = self.id;
	bulletscript = char_custom1;

	bullethit = 2;
	bullethitstun = 0;
	bulletblockstun = 3;
	bulletdi = 1;

	bulletangle = ( ( facing=0 )*( ( 0 + bulletdirshift ) + facing*( 180 - bulletdirshift*2 ) ) ) + ( ( facing=1 )*( 180 - bulletdirshift ) )
	bulletspeed = 5;
	rotatespeed = 0;
	bulletcharge = 0;
	explodetime = 99;
	
	//Blur Variables
	usmashblastscale = 0.15
	usmashblastxshift = 22
	usmashblastyshift = -2
	usmashblasttime = 12
	usmashblastspeed = 1
	usmashblastzoom = -2
	
	masktemp = 0;
}

switch ( timer )
{
	case 2:	 image_index = 1; break;
	case 5:	 image_index = 2; break;
	case 10: image_index = 3; break;
	case 12: image_index = 4; break;
	case 14: image_index = 5; break;
	case 17: image_index = 6; break;
	case 20: image_index = 7; break;
	case 23: image_index = 8; break;
	case 26: image_index = 9; break;
	case 29: image_index = 10; break;
	case 32: image_index = 11; break;
	case 35: image_index = 12; break;
	case 40: image_index = 13; break;
	case 44: image_index = 14; break;
	
	case 100: sprite_index = usmash2_sprite; image_index = 0; break;
	case 103: image_index = 1; break;
	case 106: image_index = 2; break;
	case 109: image_index = 3; break;
	case 112: image_index = 4; break;
	case 115: image_index = 5; break;
	case 118: image_index = 6; break;
	case 121: image_index = 7; break;
	case 124: image_index = 4; break;
	case 127: image_index = 3; break;
	case 130: image_index = 2; break;
	case 133: image_index = 1; break;
	case 136: image_index = 0; break;
}

if timer < time
{	
	if timer <= 0 && nobullet = 1
	{
		if moveleft
			facing = 1;
		if moveright
			facing = 0;
		
		timer = 99
		time = 139
	}
	
	///Bullet Version
	if timer = 17 && dtilttimer <= 0
	{
		duster = instance_create(x + 0 *(1-facing*2) * size, y + 3 * size ,obj_dust_effect)
		duster.image_alpha = 0.9;
		duster.image_xscale = -0.2 * (1-facing*2) * size;
		duster.image_yscale = 0.1 * size;
		duster2 = instance_create(x + 0 *(1-facing*2) * size, y + 3 * size ,obj_dust_effect)
		duster2.image_alpha = 0.9;
		duster2.image_xscale = 0.2 * (1-facing*2) * size;
		duster2.image_yscale = 0.1 * size;
		
		sound_play(charge_sound);
		if ( random ( 2 ) < 1 ) {sound_play( choose( special_voice5, special_voice8, special_voice11, special_voice13 ) );}
		effect_create_above(ef_ring,x + -2 * (1-facing*2) * size,y - 15 * size,0.1,c_orange);
		
		if floattime >= spellcost
		{
			floattime -= spellcost;
			spellcosttimer = spellcosttime;
			
			///Projectile For-Loop
			var i;
			for (i = 0; i < bullettotal; i += 1)
			{
				///Some variables need to go here for some calculations during the loop.
				//bulletx = 30-bulletcount*7
				//bullety = 30-bulletcount*7
				bulletcount = i;
				
				create_projectile(bulletdmg,bulletdir,bulletbkb,bulletkbg,bulletshielddmg,bullethitlag,bulletsound,bulletspark,bulletxscale,bulletyscale,bulletx,bullety,bulletid,bullettime,bulletscript);
				proj.bulletflip = 0;
				proj.bullettype = bullettype;
				proj.bulletcount = bulletcount;
				proj.bulletstartdir = bulletstartdir;
				proj.bulletshift = bulletshift;
				proj.bulletdirshift = bulletdirshift;
				proj.bulletscale = bulletscale;
				proj.bulletdmg = bulletdmg;
				proj.bulletdir = bulletdir;
				proj.bulletbkb = bulletbkb;
				proj.bulletkbg = bulletkbg;
				proj.bulletshielddmg = bulletshielddmg;
				proj.bullethitlag = bullethitlag;
				proj.bulletsound = bulletsound;
				proj.bulletspark = bulletspark;
				proj.bulletxscale = bulletxscale;
				proj.bulletyscale = bulletyscale;
				proj.bulletx = bulletx;
				proj.bullety = bullety;
				proj.bullettime = bullettime;
				proj.bulletid = bulletid;
				proj.hit = bullethit;
				proj.facing = facing;
				proj.hit_stun = bullethitstun;
				proj.shield_stun = bulletblockstun;
				proj.di = bulletdi;
				proj.bulletangle = bulletangle;
				proj.bulletspeed = bulletspeed;
				proj.rotatespeed = rotatespeed;
				proj.bulletcharge = smash_charge;
				proj.explodetime = explodetime;
				
				if bulletcount > 0
				{
					create_projectile(bulletdmg,bulletdir,bulletbkb,bulletkbg,bulletshielddmg,bullethitlag,bulletsound,bulletspark,bulletxscale,bulletyscale,bulletx,bullety,bulletid,bullettime,bulletscript);
					proj.bulletflip = 1;
					proj.bullettype = bullettype;
					proj.bulletcount = bulletcount;
					proj.bulletstartdir = bulletstartdir;
					proj.bulletshift = bulletshift;
					proj.bulletdirshift = bulletdirshift;
					proj.bulletscale = bulletscale;
					proj.bulletdmg = bulletdmg;
					proj.bulletdir = bulletdir;
					proj.bulletbkb = bulletbkb;
					proj.bulletkbg = bulletkbg;
					proj.bulletshielddmg = bulletshielddmg;
					proj.bullethitlag = bullethitlag;
					proj.bulletsound = bulletsound;
					proj.bulletspark = bulletspark;
					proj.bulletxscale = bulletxscale;
					proj.bulletyscale = bulletyscale;
					proj.bulletx = bulletx;
					proj.bullety = bullety;
					proj.bullettime = bullettime;
					proj.bulletid = bulletid;
					proj.hit = bullethit;
					proj.facing = facing;
					proj.hit_stun = bullethitstun;
					proj.shield_stun = bulletblockstun;
					proj.di = bulletdi;
					proj.bulletangle = bulletangle;
					proj.bulletspeed = bulletspeed;
					proj.rotatespeed = rotatespeed;
					proj.bulletcharge = smash_charge;
					proj.explodetime = explodetime;
				}
				
				bulletcount += 1;
			}
		}
	}
	
	///No Bullet Version
	/*
	if timer = 117
	{
		usmashblast = create_blur(x,y,self.id);
		usmashblast.sprite_index = usmashblast_sprite;
		usmashblast.image_xscale = (usmashblastscale*size)*(1-facing*2);
		usmashblast.image_yscale = (usmashblastscale*size);
		usmashblast.x = x + ( usmashblastxshift + (chargeshift * looped) )*size*(1-facing*2);
		usmashblast.y = y - usmashblastyshift*size;
		usmashblast.image_index = 0;
		usmashblast.image_speed = usmashblastspeed;
		usmashblast.alarm[0] = usmashblasttime;
		usmashblast.snap = self.id;
		usmashblast.depth = usmashblastzoom;
	}
	*/
	
	if timer = 112
	{
		explosion = instance_create(x+0*size*(1-facing*2),y-45* size,obj_spark_explode1);
		explosion.image_xscale = 0.9*size;
		explosion.image_yscale = 0.9*size;
		explosion.snap = self.id;
		
		sound_play(mokouexplosion1);
		sound_play(charge_sound);
		if ( random ( 2 ) < 1 ) {sound_play( choose( special_voice1, special_voice4, special_voice5 ) );}
		
		create_hitbox(12,90,6,6,12,9,fire3,obj_spark_fire1, 0.9 , 0.9 , 0, 43 ,self.id,9,3);
		hitbox.shake_type = 0
        hitbox.shake_ampl = 0.7
		create_hitbox2(12,90,6,6,12,9,fire3,obj_spark_fire1, 0.64 , 1.21 , 10 , 19.20 ,self.id,3,3);
		hitbox2.shake_type = 0
        hitbox2.shake_ampl = 0.7
		
		percent += selfdmg;
		lifemeter += selfdmg * lifemetergain;
	}
	
	if timer >= 138
	{
		interrupt = 1;
	}
}
	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" 
{
	looped = 0;
	loopmax = 0;
	attack_type = "none";
	state_type = "stand";
	timer = 0;
	time =-1;
}