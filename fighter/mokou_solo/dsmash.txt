if state_type = "stand" || state_type = "run" 
{
	hspeed = 0;
	state_type = "attack";
	attack_type = "dsmash";
	sprite_index = dsmash_sprite;
	image_speed = 0;
	image_index = 0;
	timer = 0;
	time = 52;
	timer_speed = 1;
	charge_frame = 6;
	
	//Blur Variables
	dsmashpillarscale = 0.60
	dsmashpillarxshift = 22
	dsmashpillaryshift = -2
	dsmashpillartime = 22
	dsmashpillarspeed = 1
	dsmashpillarzoom = -2
	
	//Hitboxes
	hitboxxshift = 0
	hitboxyshift = 20
	chargeshift = 0;
	
	masktemp = 0;
}

switch ( timer )
{
	case 2:	 image_index = 1; break;
	case 5:	 image_index = 2; break;
	case 10: image_index = 3; break;
	case 13: image_index = 4; break;
	case 16: image_index = 5; break;
	case 19: image_index = 6; break;
	case 22: image_index = 7; break;
	case 25: image_index = 8; break;
	case 28: image_index = 9; break;
	case 31: image_index = 10; break;
	case 34: image_index = 11; break;
	case 37: image_index = 12; break;
	case 40: image_index = 13; break;
	case 45: image_index = 14; break;
	case 49: image_index = 15; break;
}

if timer < time
{	
	if timer = 1 || timer = 10
	{
		instance_create(x+(dsmashpillarxshift+chargeshift)*(1-facing*2)*size,y-10*size,obj_spark_effect);
	}
	
	if timer < 16
	{
		chargeshift = smash_charge*size;
	}
	
	if ( timer = 16 )
	{
		sound_play( choose( mid_voice2, mid_voice4, special_voice5, special_voice8, special_voice11, special_voice13 ) );
		sound_play(mokouexplosion3);
		
		create_hitbox(15,35+facing*110,4.7,7.4,19,10,mokouexplode6,obj_spark_fire1, 0.90 , 0.90 , dsmashpillarxshift + hitboxxshift + chargeshift, dsmashpillaryshift + hitboxyshift - 5,self.id,dsmashpillartime,5);
		hitbox.shake_type = 1;
		hitbox.shake_ampl = 0.65;
		hitbox.charge_dmg = 0;
		create_hitbox2(15,35+facing*110,4.7,7.4,19,10,mokouexplode6,obj_spark_fire1, 1.20 , 0.40 , dsmashpillarxshift + hitboxxshift + chargeshift, dsmashpillaryshift + 5,self.id,dsmashpillartime,5);
		hitbox2.shake_type = 1;
		hitbox2.shake_ampl = 0.65;
		hitbox2.charge_dmg = 0;
		create_hitbox3(12,35+facing*110,4.7,7.4,19,10,mokouexplode6,obj_spark_fire1, 0.60 , 1.00 , dsmashpillarxshift  + hitboxxshift + chargeshift, dsmashpillaryshift + hitboxyshift * 2,self.id,dsmashpillartime,5);
		hitbox3.shake_type = 1;
		hitbox3.shake_ampl = 0.65;
		hitbox3.charge_dmg = 0;
		
		dsmashpillar = create_blur(x,y,self.id);
		if !blueflame {dsmashpillar.sprite_index = dsmashpillar_sprite;}
		if blueflame  {dsmashpillar.sprite_index = dsmashpillarblue_sprite;}
		dsmashpillar.image_xscale = (dsmashpillarscale*size)*(1-facing*2);
		dsmashpillar.image_yscale = (dsmashpillarscale*size);
		dsmashpillar.x = x + ( dsmashpillarxshift + (chargeshift) )*size*(1-facing*2);
		dsmashpillar.y = y - dsmashpillaryshift*size;
		dsmashpillar.image_index = 0;
		dsmashpillar.image_speed = dsmashpillarspeed;
		dsmashpillar.alarm[0] = dsmashpillartime;
		dsmashpillar.snap = self.id;
		dsmashpillar.depth = dsmashpillarzoom;
		
		shaker = instance_create(x,y,obj_shakescreen2);
		shaker.ampl = 2;
		shaker.xampl = 0;
		shaker.time = 5;
		
		percent += selfdmg;
		lifemeter += selfdmg * lifemetergain;
	}
}
	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" 
{
	chargeshift = 0;
	attack_type = "none";	
	if ( movedown )
	{
		state_type = "crouch";
		sprite_index = crouch_sprite;
		image_index = 1;
		timer = 3;
		time = -1;
	}
	else
	{
		state_type = "stand";
		sprite_index = stand_sprite;
		timer = 0;
		time =-1;
	}
}