if state_type = "stand" || state_type = "run" 
{
	hspeed *= 0 + (nobullet*0.8);
	state_type = "attack";
	attack_type = "stilt";
	sprite_index = stilt_sprite;
	image_speed = 0;
	image_index = 0;
	timer = 0;
	time = 42;
	timer_speed = 1;
	
	///Projectile Initialization Variables - Streamlines creation of more complex circular projectile patterns. ( Complete Circle: bulletshift * bullettotal = 360 )
	bullettype = 0; //Bullet type referenced in custom scripts with multiple projectile types.
	bulletcount = 0; //Initial bullet count.
	bullettotal = 5; //Total number of bullets created. Don't set this too high or performance will RIP!
	bulletstartpos = 0; //Initial bullet direction.
	bulletshift = 0; //Shifts the direction of the next bulletcount by this amount.
	bulletdirshift = bulletstartpos - bulletcount*bulletshift; //Used in direction calculation.
	bulletscale = 0.5; //Resizes bullet.

	bulletdmg = 2.2
	bulletdir = 45+facing*90
	bulletbkb = 3
	bulletkbg = 3
	bulletshielddmg = 1
	bullethitlag = 2
	bulletsound = magic1
	bulletspark = obj_spark_shock
	bulletxscale = 0.5
	bulletyscale = 0.5
	bulletx = 12
	bullety = 30-bulletcount*7
	bullettime = 80
	bulletid = self.id;
	bulletscript = char_custom1;

	bullethit = 0
	bullethitstun = 0
	bulletblockstun = -2
	bulletdi = 0.7

	bulletspeed = 0
	rotatespeed = 0
	explodetime = 0
	
	//Blur Variables
	stiltflamescale = 0.25
	stiltflamexshift = 10
	stiltflameyshift = 20
	stiltflameindex = 0
	stiltflametime = 14
	stiltflamespeed = 1
	stiltflamealpha = 1
	stiltflameangle = 130 * (1-facing*2)
	stiltflamezoom = -1
}

switch ( timer )
{
	case 5:  image_index = 1; break;
	case 12: image_index = 2; break;
	case 17: image_index = 3; break;
	case 22: image_index = 4; break;
	case 31: image_index = 5; break;
	case 37: image_index = 6; break;
	
	case 100: sprite_index = stilt2_sprite; image_index = 0; break;
	case 103: image_index = 1; break;
	case 106: image_index = 2; break;
	case 109: image_index = 3; break;
	case 112: image_index = 4; break;
	case 115: image_index = 5; break;
	case 118: image_index = 6; break;
	case 121: image_index = 7; break;
	case 124: image_index = 8; break;
	case 127: image_index = 9; break;
	case 130: image_index = 10; break;
	case 133: image_index = 11; break;
	case 136: image_index = 12; break;
	case 139: image_index = 13; break;
}

if timer < time 
{
	if timer <= 0 && nobullet = 1
	{
		timer = 99
		time = 142
	}
	
	///Bullet Version
	if timer = 21
	{	
		sound_play(charge_sound);
		if ( random ( 2 ) < 1 ) {sound_play( choose( special_voice5, special_voice8, special_voice11, special_voice13 ) );}
	}
	
	if timer = 22 && floattime >= spellcost
	{
		floattime -= spellcost;
		spellcosttimer = spellcosttime;
		effect_create_above(ef_ring,x + 14.80 * (1-facing*2) * size,y - 18.13 * size,0.1,c_blue);
		
		///Projectile For-Loop
		var i;
		for (i = 0; i < bullettotal; i += 1)
		{
			bullety = 30-bulletcount*7
			create_projectile(bulletdmg,bulletdir,bulletbkb,bulletkbg,bulletshielddmg,bullethitlag,bulletsound,bulletspark,bulletxscale,bulletyscale,bulletx,bullety,bulletid,bullettime,bulletscript);
			proj.bullettype = bullettype;
			proj.bulletcount = bulletcount;
			proj.bulletstartpos = bulletstartpos;
			proj.bulletshift = bulletshift;
			proj.bulletdirshift = bulletdirshift;
			proj.bulletscale = bulletscale;
			
			proj.bulletdmg = bulletdmg;
			proj.bulletdir = bulletdir;
			proj.bulletbkb = bulletbkb;
			proj.bulletkbg = bulletkbg;
			proj.bulletshielddmg = bulletshielddmg;
			proj.bullethitlag = bullethitlag;
			proj.bulletsound = bulletsound;
			proj.bulletspark = bulletspark;
			proj.bulletxscale = bulletxscale;
			proj.bulletyscale = bulletyscale;
			proj.bulletx = bulletx;
			proj.bullety = bullety;
			proj.bullettime = bullettime;
			proj.bulletid = bulletid;
			
			proj.hit = bullethit;
			proj.facing = facing;
			proj.hit_stun = bullethitstun;
			proj.shield_stun = bulletblockstun;
			proj.di = bulletdi;
			
			proj.direction = bulletdir;
			proj.bulletspeed = bulletspeed;
			proj.rotatespeed = rotatespeed;
			proj.explodetime = explodetime;
			
			bulletcount += 1;
		}
	}
	
	///No Bullet Version
	if timer = 121
	{
		if ( random ( 2 ) < 1 ) {sound_play( choose( mid_voice1, mid_voice5, mid_voice6 ) );}
		sound_play(swing_sound4);
		create_hitbox(12,23+facing*134,4.5,6.8,25,10,mokouexplode6,obj_spark_fire1, 1.05 , 0.65 , 4.40 , 19.60 ,self.id,12,5);
		hitbox.hit_stun = 5;
		hitbox.shield_stun = 5;
		create_hitbox2(12,23+facing*134,4.5,6.8,15,10,mokouexplode6,obj_spark_fire1, 1.40 , 1.01 , 18.40 , 20.40 ,self.id,12,5);
		hitbox2.image_angle = 350 * (1-facing*2);
		create_hitbox3(12,23+facing*134,4.5,6.8,15,10,mokouexplode6,obj_spark_fire1, 1.70 , 0.7 , 20.40 , 10.40 ,self.id,12,5);
		
		percent += selfdmg;
		lifemeter += selfdmg * lifemetergain;
		
		stiltflame = create_blur(x,y,self.id);
		if !blueflame {stiltflame.sprite_index = stiltflame_sprite;}
		if blueflame  {stiltflame.sprite_index = stiltflameblue_sprite;}
		stiltflame.image_xscale = (stiltflamescale*size)*(1-facing*2);
		stiltflame.image_yscale = (stiltflamescale*size);
		stiltflame.x = x + stiltflamexshift *size*(1-facing*2);
		stiltflame.y = y - stiltflameyshift*size;
		stiltflame.image_index = 0;
		stiltflame.image_speed = stiltflamespeed;
		stiltflame.image_alpha = stiltflamealpha;
		stiltflame.image_angle = stiltflameangle;
		stiltflame.alarm[0] = stiltflametime;
		stiltflame.snap = self.id;
		stiltflame.depth = stiltflamezoom;
	}
	
	if timer = 126
	{
		hitbox.kbg = 5 * size;
		hitbox2.kbg = 5 * size;
	}
}
	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" 
{
	bullettemp = 0;
	attack_type = "none";	
	state_type = "stand";
	sprite_index = stand_sprite;
	timer = 0;
	time =-1;
}