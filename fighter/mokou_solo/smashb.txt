fast_fall = 0;
fast_fall_temp = 0;
if ( state_type == "run" || state_type == "stand" || state_type == "jump" )
  {
  attacking = 0;
  attack_type = "smashb";
  timer = -20;
  time = 45;
  state_type = "air_attack";
  timer_speed = 1;
  sprite_index = smashb_sprite;
  image_index = 0;
  image_speed = 0.1;
  intangible = 0;
  speed = 0;
  gravity_lock = 1;
  fall_lock = 0;
  air_move = 0;
  temp = 3;
  vspeed = 0;
  if moveright = 1 facing = 0;
  if moveleft = 1 facing = 1;
  quickdrawtemp = 0;
  }
  
if ( timer = 12 )
  {
  duster = instance_create(x,y,obj_dust_effect);
  duster.facing = facing;
  instance_create(x+size*(10-facing*20),y-15*size,obj_spark_effect);
  }
  
if ( hitbox.hit > 0 || hitbox2.hit > 0 ) { quickdrawtemp = 1 }
  
if ( sprite_index = smashb_sprite && image_index = 3 ) { image_speed = 0; }

if ( state_type == "air_attack" )
  gravity_lock = 2;

var spp;
spp = 24;
if timer > 5
force_edge_grab = 1

if ( ( timer > 1 && timer < 12 ) || ( timer >= 17 && timer <= 23 ) ) && !ai
  {
  if ( facing = 1 )
      temp = 5;
  else
  if ( facing = 0 )
      temp = 1;
  }

if ( ai && ( offstage || ai_state = "recover" ) ) {
  if timer = 11 {
    if ( x < nearest_edge.x )
      {
	temp = 1
      }
    if ( x > nearest_edge.x )
      {
	temp = 5
      }
  }
if timer = 25 {
  if y > nearest_edge.y {
    if ( x < nearest_edge.x )
      {
	temp = 2
      }
    if ( x > nearest_edge.x )
      {
	temp = 4
      }
    }
  else {
    if temp2 != 1 && temp2 != 5 {
      if ( x < nearest_edge.x )
	{
	  temp = 1
	}
      if ( x > nearest_edge.x )
	{
	  temp = 5
	}
      }
    else if temp2 = 1 || temp2 = 5 {
      if ( x < nearest_edge.x )
	{
	  temp = 2
	}
      if ( x > nearest_edge.x )
	{
	  temp = 4
	}
      }
    }
  }
}

if ( ( ( timer >= 12 && timer < 17 ) || ( timer >= 27 && timer < 32 ) ) && temp != 0 )
  {	
  switch ( temp )
    {
    case 1: hspeed = spp * size; break;
    case 2: hspeed = spp * size * 0.7; break;
    //case 3: vspeed = spp * size; break;
    case 4: hspeed = -spp * size * 0.7; break;
    case 5: hspeed = -spp * size; break;
    case 6: hspeed = -spp * size * 0.7; break;
    //case 7: vspeed = spp * size; break;
    case 8: hspeed = spp * size * 0.7; break;
    }
  }

switch ( timer )
  {
  case 2:
    vspeed = 0;
    instance_create ( x , y - 7 * size , obj_spark_effect );
    sound_play ( choose ( smashb_voice, smashb_voice2 ) );
    break;
  case 6:
    intangible = 0;
    sound_play ( smashb_sound );
    break;
  case 12:
    create_hitbox ( 11 , 25 + facing * 130 , 5.1 , 11 , 8 , 25 , slash3 , obj_spark_slash3 , 0.75 , 0.75 , 0 , 12 , self.id , 5 , 4 );
    hitbox.hit_stun = 8; 
    instance_create ( x , y - 7 * size , obj_spark_effect );
    break;
  case 16:
    temp2 = temp;
    break;
  case 17:
    temp = 0;
    speed = 0;
    image_index = 4;
    image_speed = 0;
    break;
  case 26:
    if ( temp == 0 || temp == temp2 )
      {
	speed = 0;
	timer = time - 1;
      }
    else
      {
	image_index = 4;
	image_speed = 0;
	instance_create ( x , y - 7 * size , obj_spark_effect );
      }
    break;
  case 27:
    create_hitbox ( 11 , 25 + facing * 130 , 5.1 , 11 , 8 , 25 , slash3 , obj_spark_slash3 , 0.75 , 0.75 , 0 , 12 , self.id , 5 , 4 );
    hitbox.hit_stun = 8; 
    break;
  case 32:
    speed = 0;
    break;
  }

if timer >=7 && timer <= 21
  intangible = 1

if timer >= 7 && timer <= 11
  image_alpha -= 0.1;

if timer = 12 {
  image_alpha = 0;
  visible = 0;
}

if timer = 17
  visible = 1;

if timer >= 17 && timer <= 21
  image_alpha += 0.1;

if timer = 22 {
  image_alpha = 1;
  intangible = 0;
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  visible = 1;
  image_alpha = 1
  if(quickdrawtemp = 0){state_type = "fall";}
  if(quickdrawtemp = 1){state_type = "jump";}
  attack_type = "none";
  intangible = 0;
  timer = 0;
  time = -1;
  }