if ( state_type = "jump" )
{
	//hspeed = 0;
	vspeed -= 0.1;
	state_type = "air_attack";
	attack_type = "uair";
	sprite_index = uair_sprite;
	image_speed = 0;
	image_index= 0;
	timer = 0;
	time = 18;
	timer_speed= 1;
	
	//Blur Variables
	uairflamescale = 0.22
	uairflamexshift = 7
	uairflameyshift = 28
	uairflameindex = 2
	uairflametime = 14
	uairflamespeed = 1
	uairflamealpha = 1
	uairflameangle = 0 * (1-facing*2)
	uairflamezoom = -1
}

switch ( timer )
{
	case 2:  image_index = 1; break;
	case 4:  image_index = 2; break;
	case 6:  image_index = 3; break;
	case 9:  image_index = 4; break;
	case 12: image_index = 5; break;
	case 15: image_index = 6; break;
}

if timer < time 
{
	if timer = 4
	{
		if ( random ( 2 ) < 1 ) {sound_play( choose( mid_voice2, mid_voice4, attack_voice2, attack_voice4 ) );}
		sound_play(swing_sound4);
		create_hitbox(9,43+facing*94,4,6.7,10,7,mokouexplode6,obj_spark_fire1, 1.09 , 0.54 , -0.80 , 28.80 ,self.id,7,2);
		hitbox.hit_stun = 8;
		create_hitbox2(9,43+facing*94,4,6.7,10,7,mokouexplode6,obj_spark_fire1, 0.65 , 0.75 , 13.60 , 17.60 ,self.id,7,2);
		hitbox2.hit_stun = 8;
		
		percent += selfdmg;
		lifemeter += selfdmg * lifemetergain;
		
		uairflame = create_blur(x,y,self.id);
		if !blueflame {uairflame.sprite_index = uairflame_sprite;}
		if blueflame  {uairflame.sprite_index = uairflameblue_sprite;}
		uairflame.image_xscale = (uairflamescale*size)*(1-facing*2);
		uairflame.image_yscale = (uairflamescale*size);
		uairflame.x = x + uairflamexshift *size*(1-facing*2);
		uairflame.y = y - uairflameyshift*size;
		uairflame.image_index = 0;
		uairflame.image_speed = uairflamespeed;
		uairflame.image_alpha = uairflamealpha;
		uairflame.image_angle = uairflameangle;
		uairflame.alarm[0] = uairflametime;
		uairflame.snap = self.id;
		uairflame.depth = uairflamezoom;
	}
	
	if timer = 9
	{
		hitbox.damage = 7*size;
		hitbox.dir = 150-facing*120;
		hitbox.kbg = 5 * size;
		hitbox.gfx = obj_spark_hit1;
		hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -14.80
		hitbox.hitbox_y = size * 15.20
		hitbox.image_xscale = size * 0.62
		hitbox.image_yscale = size * 0.63
		
		hitbox2.damage = 7*size;
		hitbox2.gfx = obj_spark_hit1;
		hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -0.8
		hitbox2.hitbox_y = size * 28.80
		hitbox2.image_xscale = size * 1.09
		hitbox2.image_yscale = size * 0.54
	}
	
	if air = 0 
	{
		shakex = 0;
		shakey = 0;
		state_type ="land";
		attack_type ="none";
		sprite_index = land_sprite;
		timer = 0;
		time = 7; 
	}
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
{
	state_type = "jump";
	attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 6;
	timer = 0;
	time = -1;
}