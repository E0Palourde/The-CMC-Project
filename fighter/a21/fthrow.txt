if ( time = -1 )
  {
    state_type = "attack";
    attack_type = "fthrow";
    timer = 0;
    time = 39;
    sprite_index = jab_sprite3;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    target.timer_speed = 0;
    target.alarm[0] = 50;
	target.x = x + 20*(1-facing*2)
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 8: image_xscale *= 1.15; image_yscale *= 1.15; sprite_index = jab_sprite3; image_index = 1; break;//
	case 11: sprite_index = dsmash_sprite; image_index = 0; break;
	case 12: image_index = 1; break;
	case 14: shakex = 0.5 - facing; image_index = 2; break;
	case 18: image_xscale *= 1.1; image_yscale *= 1.1; shakex = 1 - facing * 2; image_index = 3; break;
	case 22: shakex = 0.5 - facing; image_index = 4; break;
	case 24: shakex = 0; image_index = 5; break;
	case 26: image_index = 6; break;
      }
	
	if timer = 8 {
		  create_hitbox(3,30+facing*120,5,0,14,6,kick3,obj_spark_hit4,0.54 , 1.12 , 9.80 , 16.10,self.id,5,2);
	duster = instance_create(x,y,obj_dust_effect);
	duster.facing = facing;
	  }
    if ( timer = 18 )
      {
	sound_play(dsmash_voice);
	sound_play(swingsnd1);
	create_hitbox(6,30+facing*120,6.5,4.4,18,7,kick3,obj_spark_hit4,1.64 , 0.51 , 37.10 , 14,self.id,5,2);
	hitbox.charge_dmg = 0.75;
	hitbox.shake_type = 1;
	hitbox.shake_kb = 0.9;
	hitbox.shake_ampl = 0.6;
	duster = instance_create(x+30*(1-facing*2),y,obj_dust_effect);
	duster.facing = 1-facing;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }