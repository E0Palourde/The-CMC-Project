if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair_sprite;
        image_index = 0;
        timer = 0;
        time = 26;
        timer_speed=1;
}

switch ( timer )
  {
  case 5: image_index = 1; break;
  case 8: image_index = 2; break;
  case 11: image_index = 3; break;
  case 14: image_index = 4; break;
  }
  
            if timer = 5  {
                if random(10)>1.5
                    sound_play(choose(attack_voice1,attack_voice2,attack_voice3,attack_voice4));
                sound_play(attack_sound2);
                create_hitbox(9.5,20+facing*140,4,5.5,15,9,slash2,obj_spark_hit4,1.4,0.7,10,6,self.id,10,2);
		hitbox.image_angle = 90
            }
	    if timer = 8 {
		hitbox.image_angle = -20*(1-facing*2)
		hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 22
		hitbox.hitbox_y = 14
	    }
	    if timer = 11 {
		hitbox.image_angle = 0
		hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 28
		hitbox.hitbox_y = 23
	    }
	    if timer = 14 {
		hitbox.image_angle = 20*(1-facing*2)
		hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12
		hitbox.hitbox_y = 34
	    }

            if air = 0
				{
                state_type = "land";
                attack_type = "none";
                sprite_index = land_sprite;
                timer = 0;
                time = 10; 
				}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 3;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }
        
