if state_type = "stand" || state_type ="run"{
        hspeed = 0;
        state_type = "attack";
        attack_type = "ssmash";
        image_speed = 0;
        sprite_index = ssmash_sprite;
        image_index = 0;
        timer = 0;
        time = 41;
        timer_speed=1;
        charge_frame = 1
}
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 5: image_index = 2; break;
  case 8: image_index = 3; break;
  case 11: image_index = 4; break;
  case 30: image_index = 3; break;
  case 33: image_index = 2; break;
  case 35: image_index = 1; break;
  }

            if timer = 11 {
	arroww = instance_create( x,y,obj_spark );
	arroww.sprite_index = arrow_sprite;
	arroww.image_xscale = image_xscale * size;
	arroww.image_yscale = image_yscale * size;
	arroww.image_alpha = 1;
	arroww.x = x + 18 * (1-facing*2) * size;
	arroww.y = y + (-28) * size;
    	arroww.depth = depth - 0.1;
	arroww.loop = 9999
	arroww.snap = self.id;
	arroww.number = -number;
                instance_create(x+12-facing*24,y-17,obj_spark_effect)
                duster = instance_create(x,y,obj_dust_effect);
                duster.facing = facing; 
                sound_play(attack_sound3);
            }
		if timer = 11 || timer = 13 || timer = 15 || timer = 17 || timer = 19 || timer = 21 {
		hspeed *= 0;
		create_hitbox(1,362,1,0,7,4,slash2,obj_spark_hit2,1.2 , 1.2 , 18 , 28,self.id,3,2); 
                hitbox.shake_type = 1
                hitbox.shake_ampl = 0
                hitbox.charge_dmg = 0
                hitbox.charge_hitlag = 0.5
                hitbox.charge_kb = 0
		hitbox.di = 0.1
		hitbox.sdi = 0.1
		}
		if timer = 24
		create_hitbox(8,30+facing*120,5.5,7.8,7,6,slash3,obj_spark_hit2,1.2 , 1.2 , 18 , 28,self.id,3,2); 
	    if timer > 10
		arroww.image_angle += 26*(1-facing*2)
	if timer = 30 {
	with(arroww) {
	instance_destroy();
	}
	}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
