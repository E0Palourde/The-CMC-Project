if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "uair";
        image_speed = 0;
        sprite_index = uair_sprite;
        image_index = 0;
        timer = 0;
        time = 32;
        timer_speed=1;
}

switch ( timer )
  {
  case 4: image_index = 1; break;
  case 7: image_index = 2; break;
  case 16: image_index = 3; break;
  case 19: image_index = 2; break;
  case 21: image_index = 1; break;
  case 24: image_index = 0; break;
  }

        if timer = 7 {
            sound_play(attack_sound3);
            sound_play(choose(attack_voice1,attack_voice2,attack_voice3,attack_voice4))
            create_hitbox(10,70+facing*40,5.5,7.3,15,13,slash3,obj_spark_hit4,1.13 , 0.61 , 21.28 , 27.36,self.id,13,2);
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7
			hitbox.hitbox_y = size * 50
			hitbox.image_xscale = size * 0.68
			hitbox.image_yscale = size * 1.18
            hitbox.hit_stun = 8;
        }
		
        if air = 0 {
            state_type="land";
            sprite_index = land_sprite;
            attack_type="none";
            timer=0;
            time=13; 
        }

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 3;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }
        
