if ( state_type = "jump" )
  {
    armor_frames = 0;
    state_type = "air_attack";
    attack_type = "fair";
    timer = 0;
    time = 40;
    sprite_index = fair_sprite;
    image_speed = 0;
    image_index = 0;
    vspeed -= 0.1;
  }

if ( timer < time )
  {
	//Animate VFX
	switch (timer){
		case 12: 
			blur = create_itmpnt_blur( /*Attacker*/ self.id, /*Texture*/ tilt_blur_texture, /*Start frame*/ 4, /*Apex Frame*/ 6, /*End frame*/ 8, /*CCW*/ 0, /*girth*/ 3, 15);
			blur.index = 0;
			blur.image_index = 0;
			blur.h_squish = 5;
			blur.v_squish = 2;
			blur.push_x = 5*size*(1-facing*2);
			blur.solid = 0.4;
			blur.glow = 0.4; 
			blur.push_y = 2*size;
			break;
		case 14: blur.index = 0.33; blur.image_index = 1; break;
		case 15: blur.index = 0.66; break;
		case 16: blur.index = 1; blur.image_index = 2; break;
		case 17: blur.index = 1.5; break;
		case 18: blur.index = 2; break;
		case 19: blur.index = 2.5; break;
		case 20: blur.index = 3; blur.image_index = 3;  break;
		case 21: blur.index = 3.33;  break;
		case 22: blur.index = 3.66; blur.start_index = 1;break;
		case 23: blur.index = 4; blur.image_index = 4; break;
	  case 25: 
			with (blur){
				instance_destroy();
			}
			break;
		  
	  }
switch ( timer )
  {
  case 3: image_index=1;  break;
  case 6: image_index=2;  break;
  case 9: image_index=3;  break;
  case 12: image_index=4;  break;
  case 16: image_index=5;  break;
  case 17: shakex=5*size*(1-facing*2); shakey=3*size; image_angle=315*(1-facing*2);  break;
  case 18: shakex=0*size*(1-facing*2); shakey=0*size; image_index=6; image_angle=0*(1-facing*2);  break;
  case 19: shakex=4*size*(1-facing*2); image_angle=315*(1-facing*2);  break;
  case 20: shakex=0*size*(1-facing*2); image_index=7; image_angle=0*(1-facing*2);  break;
  case 23: image_index=8;  break;
  case 26: image_index=9;  break;
  case 29: image_index=10;  break;
  case 32: image_index=11;  break;
  }

    if ( timer = 16 )
      {
	play_attack_voice();
	sound_play(attack_sound3);
	create_hitbox(16,270,5.8,4,18,9,kick3,obj_spark_hit4,0.58 , 0.52 , 9.10 , 32.20,self.id,5,2);
	hitbox.shake_type = 1;
	hitbox.shake_ampl = 1.3;
	create_hitbox2(15,30+facing*120,5,7,15,8,punch2,obj_spark_hit2,0.69 , 0.56 , 5.60 , 20.30,self.id,5,1);
      }
	if ( timer = 17 )
	{
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 20.10
    hitbox.hitbox_y = size * 18.50
    hitbox.image_xscale = size * 0.58
    hitbox.image_yscale = size * 0.52
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12.60
    hitbox2.hitbox_y = size * 14
    hitbox2.image_xscale = size * 0.69
    hitbox2.image_yscale = size * 0.56
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0
	}

	if ( timer = 18 )
	{
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 25.70
    hitbox.hitbox_y = size * 9.80
    hitbox.image_xscale = size * 0.58
    hitbox.image_yscale = size * 0.52
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14.70
    hitbox2.hitbox_y = size * 9.80
    hitbox2.image_xscale = size * 0.69
    hitbox2.image_yscale = size * 0.56
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0
	}
	
	if ( timer = 19 )
	{
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 17.20
    hitbox.hitbox_y = size * -3.50
    hitbox.image_xscale = size * 0.58
    hitbox.image_yscale = size * 0.52
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 8.20
    hitbox2.hitbox_y = size * 3
    hitbox2.image_xscale = size * 0.69
    hitbox2.image_yscale = size * 0.56
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0
	}
	if ( timer = 20 )
	{
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 3.50
    hitbox.hitbox_y = size * -13.30
    hitbox.image_xscale = size * 0.58
    hitbox.image_yscale = size * 0.52
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 3.50
    hitbox2.hitbox_y = size * -0.70
    hitbox2.image_xscale = size * 0.69
    hitbox2.image_yscale = size * 0.56
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0
	}
	
    if ( air = 0 )
      {
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 10;
	sprite_index = land_sprite;
      }
  }

  if (timer >= 16){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 130) || (target.weight > .22 && target.weight < .3 && target.percent > 145) || (target.weight > .3 && target.percent > 150) && target.offstage){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "jump";
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 25;
    timer = 0;
    time = -1;
  }