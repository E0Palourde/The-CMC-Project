if ( time = -1 )
  {
    state_type = "attack";
    attack_type = "bthrow";
    timer = 0;
    time = 33;
    sprite_index = bthrow_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    target.timer_speed = 0;
    target.alarm[0] = 50;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 4: image_index = 3; break;
	case 6: image_index = 4; break;
	case 8: image_index = 5; break;
	case 10: image_index = 6; break;
	case 12: image_index = 7; break;
	case 14: image_index = 8; break;
	case 16: image_index = 9; break;
	case 18: image_index = 10; break;
	case 20: image_index = 11; break;
	case 21: image_index = 12; break;
	case 22: image_index = 13; break;
	case 23: image_index = 14; break;
	case 25: image_index = 15; break;
	case 27: image_index = 16; break;
	case 29: image_index = 17; break;
	case 31: image_index = 18; break;
      }

    if ( timer = 0 )
      {
	target.x = x + 3 * (1-facing*2) * size;
	target.y = y - 10 * size;
      }
    if ( timer = 1 )
      {
	target.x = x;
	target.y = y - 13*size;
      }
    if ( timer = 2 || timer = 3 )
      {
	target.x = x - 1 * (1-facing*2) * size;
	target.y = y - 11*size;
      }
    if ( timer = 4 || timer = 5 )
      {
	target.x = x - 7 * (1-facing*2) * size;
	target.y = y - 10*size;
      }
    if ( timer = 6 || timer = 7 )
      {
	target.x = x - 3 * (1-facing*2) * size;
	target.y = y - 9*size;
      }
    if ( timer = 8 || timer = 9 )
      {
	target.x = x;
	target.y = y - 9*size;
      }
    if ( timer = 10 || timer = 11 )
      {
	target.x = x + 15 * (1-facing*2) * size;
	target.y = y - 9*size;
      }
    if ( timer = 12 || timer = 13 )
      {
	target.x = x + 18 * (1-facing*2) * size;
	target.y = y - 9*size;
      }
    if ( timer = 14 || timer = 15 )
      {
	target.x = x + 5 * (1-facing*2) * size;
	target.y = y - 9*size;
      }
    if ( timer = 16 )
      {
	target.x = x - 10 * (1-facing*2) * size;
	target.y = y - 9*size;
	if ( random(10) > 1.5 )
	    sound_play(spit_voice);
	sound_play(attack_sound2);
	create_throw_box(9,144-facing*108,6.8,3.9,1,1,-1,obj_spark_effect,0.89 , 1.02 , -16.80 , 27.30,self.id,1);
	hitbox.hit_stun = 3;
	target.visible = 1;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
	facing = 1 - facing;
  }