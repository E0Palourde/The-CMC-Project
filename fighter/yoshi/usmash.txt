if ( state_type = "stand" || state_type = "run" )
  {
    state_type = "attack";
    attack_type = "usmash";
    timer = 0;
    time = 52;
    sprite_index = usmash_sprite;
    image_speed = 0;
    image_index = 0;
    charge_frame = 8;
    hspeed = 0;
  }

if ( timer < time )
  {
	switch (timer){
		case 9:
			blur = create_itmpnt_blur( /*Attacker*/ self.id, /*Texture*/ blur_texture, /*Start frame*/ 0, /*Apex Frame*/ 4, /*End frame*/ 8, /*CCW*/ 0, /*girth*/ 7, 30);
			blur.push_x = 14*size*(1-facing*2);
			blur.h_squish = 2;
			blur.v_squish = 3;
			blur.image_index = 0;
			blur.index = 1.5;
			break;
		case 10:
			blur.index = 1.65;
			break;
		case 11: 
			
			blur.index = 1.8;
			blur.image_index = 1; 
		
			break;
		case 12: blur.index =2; blur.image_index = 2; break;
		case 13: blur.index = 3; blur.image_index = 2; break;
		case 14: blur.index = 4; break;
		case 15: blur.index = 5; break;
		case 16: blur.index = 5.5; break;
		case 17: blur.index = 6; blur.start_index = 1;break;
		case 18: blur.index = 6.33; break;
		case 19: blur.index = 6.66; blur.image_index = 3; break;
		case 20: blur.index = 7; break;
		case 21: blur.image_index = 4; break;
		case 23: 
			with (blur){
				instance_destroy();
			}
	}		
	  
    switch ( timer )
      {
	case 9: image_index = 1; break;
	case 11: image_index = 2; break;
	case 12: image_index = 3; break;
	case 13: image_index = 4; break;
	case 14: image_index = 5; break;
	case 15: image_index = 6; break;
	case 17: image_index = 7; break;
	case 20: image_index = 8; break;
	case 21: image_index = 9; break;
	case 22: image_index = 10; break;
	case 23: image_index = 11; break;
	case 24: image_index = 12; break;
	case 25: image_index = 13; break;
	case 26: image_index = 14; break;
	case 27: image_index = 15; break;
	case 28: image_index = 16; break;
	case 29: image_index = 17; break;
	case 31: image_index = 18; break;
	case 33: image_index = 19; break;
	case 35: image_index = 20; break;
	case 37: image_index = 21; break;
	case 39: image_index = 22; break;
	case 41: image_index = 23; break;
	case 43: image_index = 24; break;
	case 45: sprite_index = transition_sprite; image_index = 0; break;
	case 46: image_index = 1; break;
	case 47: image_index = 2; break;
	case 48: image_index = 3; break;
	case 49: image_index = 4; break;
	case 50: image_index = 6; break;
	case 51: image_index = 7; break;
      }


    if ( timer = 11 )
      {
	sound_play(usmash_voice);
	sound_play(attack_sound3);
	create_hitbox(16,105-facing*30,5.2,7.7,20,10,kick3,obj_spark_hit4,0.76 , 1.03 , -13.50 , 23.10,self.id,8,2);
	hitbox.image_angle = ( 1 - facing * 2 ) * 36.69;
	hitbox.shake_type = 0;
	hitbox.shake_ampl = 0.3;
	instance_create(x+size*(10-facing*20),y-20*size,obj_spark_effect);
      }
	  
	  
    if ( timer = 12 )
      {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -10
    hitbox.hitbox_y = size * 29.40
    hitbox.image_xscale = size * 0.77
    hitbox.image_yscale = size * 1.00
    hitbox.image_angle = ( 1 - facing * 2 ) * 39.96
	  }

	  
    if ( timer = 13 )
      {
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -7.90
    hitbox.hitbox_y = size * 36.40
    hitbox.image_xscale = size * 0.81
    hitbox.image_yscale = size * 0.95
    hitbox.image_angle = ( 1 - facing * 2 ) * 53.13
	  
	hitbox.damage = 16*size;
	hitbox.hitlag_frames = 10*size;
	hitbox.gfx = obj_spark_hit4;
	duster = instance_create(x+size*(6-facing*12),y,obj_dust_effect);
	duster.facing = 1-facing;
	duster.image_alpha = 0.75;
	duster.image_xscale *= 0.6*size;
	duster.image_yscale *= 0.8*size;
	duster = instance_create(x-size*(6-facing*12),y,obj_dust_effect);
	duster.facing = facing;
	duster.image_alpha = 0.75;
	duster.image_xscale *= 0.8*size;
	duster.image_yscale *= 0.4*size;
      }
	  
	if ( timer = 14 )
      {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 1.20
    hitbox.hitbox_y = size * 45.50
    hitbox.image_xscale = size * 0.78
    hitbox.image_yscale = size * 1.05
    hitbox.image_angle = ( 1 - facing * 2 ) * 0
	  }
	  
	
	if ( timer = 15 )
      {
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14.70
    hitbox.hitbox_y = size * 35.70
    hitbox.image_xscale = size * 0.78
    hitbox.image_yscale = size * 1.04
    hitbox.image_angle = ( 1 - facing * 2 ) * 325.95
	  }

	  
    if ( timer = 17 )
      {
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 15.90
    hitbox.hitbox_y = size * 23.80
    hitbox.image_xscale = size * 0.91
    hitbox.image_yscale = size * 0.72
    hitbox.image_angle = ( 1 - facing * 2 ) * 0

	hitbox.damage = 14*size;
	hitbox.dir = 60+facing*60;
	hitbox.bkb = 5.3*size;
	hitbox.kbg = 7.1*size;
	hitbox.hitlag_frames = 9*size;
	hitbox.sfx = kick3;
      }
	  
	if ( timer = 39 )
	{
	interrupt = 1;
	}
  }

if (timer >= 11){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 130) || (target.weight > .22 && target.weight < .3 && target.percent > 145) || (target.weight > .3 && target.percent > 150)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }



if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }