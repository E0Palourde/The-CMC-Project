if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding" {
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0
        sprite_index = final_smash_sprite
        image_index = 0
        timer = 0
        time = 705
        temp = 0
        timer_speed=1
        intangible = 1
        fireballs = 0
        final_smashes+=1
        speed = 0
        flashing = true
        alarm[7] = 7
        sound_play(final_smash_sound1)
        sound_play(final_smash_voice1)
        smash_power = 0
        effect_create_below(ef_ellipse,x,y,1,c_white)
        instance_create(0,0,obj_flashscreen)
        freezer  = instance_create(x,y,obj_freeze)
        freezer.dontpause = self.id
        freezer.alarm[0] = 20
        attack_time = 0
	fireball_timer = 25;
        air_move = 0
        special = 0
        create_spark(0,27,global.final_spark,0.5,0.3,0.3)
}


switch ( timer )
  {
case 2: image_index = 1; break;
case 4: image_index = 2; break;
case 6: image_index = 3; break;
case 8: image_index = 4; break;
case 10: image_index = 5; break;
case 12: image_index = 6; break;
case 14: image_index = 7; break;
case 16: image_index = 8; break;
case 18: image_index = 9; break;
case 20: image_index = 10; break;
case 22: image_index = 11; break;
case 24: image_index = 12; break;
case 25: image_index = 13; break;
case 26: image_index = 14; break;
case 27: image_index = 15; break;
case 28: image_index = 16; break;
case 29: image_index = 17; break;
case 30: image_index = 18; break;
case 31: image_index = 19; break;
case 32: image_index = 20; break;
  
case 667: image_index = 1; break;
case 669: image_index = 2; break;
case 671: image_index = 3; break;
case 673: image_index = 4; break;
case 675: image_index = 5; break;
case 677: image_index = 6; break;
case 679: image_index = 7; break;
case 681: image_index = 8; break;
case 683: image_index = 9; break;
case 685: image_index = 10; break;
case 687: image_index = 11; break;
case 689: image_index = 12; break;
case 691: image_index = 13; break;
case 693: image_index = 14; break;
case 695: image_index = 15; break;
case 696: image_index = 16; break;
case 697: image_index = 17; break;
case 698: image_index = 18; break;
  }


if ( temp = 1 )
{
    if ( attack_time > 0 )
    {
	switch ( attack_time )
	{
	case 47: image_index = 1; break;
	case 46: image_index = 2; break;
	case 45: image_index = 3; break;
	case 44: image_index = 4; break;
	case 43: image_index = 5; break;
	case 42: image_index = 6; break;
	case 40: image_index = 7; break;
	case 38: image_index = 8; break;
	case 36: image_index = 9; break;
	case 32: image_index = 10; break;
	case 28: image_index = 11; break;
	case 24: image_index = 12; break;
	case 20: image_index = 13; break;
	case 16: image_index = 14; break;
	case 12: image_index = 15; break;
	case 8: image_index = 16; break;
	}
    }
    if ( turn_time > 0 )
    {
	switch ( turn_time )
	{
	case 21: image_index = 1; break;
	case 18: image_index = 2; break;
	case 15: image_index = 3; break;
	case 12: image_index = 4; break;
	case 9: image_index = 5; break;
	case 6: image_index = 6; break;
	case 3: image_index = 7; break;
	}
    }
}



intangible = 1
    if temp = 0
    speed = 0
    gravity_lock = 1;

     if ( timer = 33 )
	 {
         sprite_index = final_smash_fly_sprite
         image_speed = 0.3;
         image_index = 0;
         temp = 1     
         crowd_call(0,100);
	 }

    if ( temp = 1 )
	{
            if ai = 1 && enemy.intangible != 1 { //&& ai_state != "recover"  {
            if y < 20 {
                movedown=1
                y+=1
                moveup=0
                }
            else {
            if enemy.x > x {
                moveright=1
                moveleft = 0 }
            else { moveleft = 1
                moveright = 0 }
            if enemy.y > y+12 || collision_point(x+2*(1-facing*2),y-1,obj_wall,1,1) {
                movedown = 1
                moveup = 0 }
            else if enemy.y < y+12 {
                moveup = 1
                movedown = 0 }
                }
            if abs(enemy.x-x) < 25*size && random(20)>15 && enemy.y > y-8
                attacking = 1
            }
            if ai = 1 && enemy.intangible = 1 {
                if x > room_width/2+30 {
                    moveright = 0
                    moveleft = 1
                    }
                if x < room_width/2-30 {
                    moveright = 1
                    moveleft = 0
                    }
                if y > room_height/2+10 || collision_point(x+2*(1-facing*2),y,obj_wall,1,1) {
                    moveup = 1
                    movedown = 0
                    }
                else if y < room_height/2-15 {
                    moveup = 0
                    movedown = 1
                    }
                }

        if attack_success = 1 && random(30)>25 && distance_to_object(target) > 16
            attack_success = 0;

        if timer < time-25 && sin(timer*pi/6)=1 && attack_time <= 17 {
                //attacks-=1
                //attack_hits-=1
                create_hitbox(3,35+facing*110,6,3.6,-1,2,punch2,obj_spark_hit2,0.75,0.7,1,19,self.id,1,6) }

        if movedown = 1 && vspeed < 4
            vspeed+=0.3
        if moveup = 1 && vspeed > -5
            vspeed-=0.3
        if moveright = 1 && hspeed < 4
            hspeed+=0.3
        if moveleft = 1 && hspeed > -4
            hspeed -=0.3

          if ( ( hspeed > 0 && facing = 1 ) || ( hspeed < 0 && facing = 0 ) ) && sprite_index = final_smash_fly_sprite && turn_time <= 0
          {
            sprite_index = final_smash_turn_sprite;
            image_speed = 0;
            image_index = 0;
            turn_time = 24;
            fireballs = 0;
          }

          if speed > 0.5 speed -= 0.075
 
          if ( special || attacking ) && attack_time <= 0
	  {
            attack_time = 48;
            turn_time = 0;
	    fireball_timer = 48;
            fireballs = 0;
            image_index = 0;
            sprite_index = final_smash_spit_sprite;
            image_speed = 0;
            if ( ( hspeed > 0 && facing = 1 ) || ( hspeed < 0 && facing = 0 ) )
              facing = !facing;
	  }

          if attack_time = 38 && fireballs = 0
	  {
            create_projectile(18,50+facing*80,6.2,6.4,-1,9,fire3,obj_spark_fire1,0.75,0.75,12,15,self.id,90,char_custom3)
            proj.hspeed *= size*1.5
	    proj.depth = -2;
            sound_play(final_smash_sound3);
          }

          if attack_time = 1
          {
            sprite_index = final_smash_fly_sprite;
            image_index = 0;
            image_speed = 0.3;
          }

          if sprite_index = final_smash_turn_sprite && turn_time > -1 && turn_time <= 1
          {
            if turn_time = 1
              facing = !facing;
            if turn_time = 0
            {
              sprite_index = final_smash_fly_sprite;
              image_index = 0;
              image_speed = 0.3;
            }
          }

          if sprite_index = final_smash_fly_sprite && image_index = 4
            sound_play(final_smash_sound2);

          if sprite_index = final_smash_fly_sprite && fireballs > 0 && frac(timer/5)=0
	  {
            fireballs -= 1
            sound_play(final_smash_sound4)
            create_projectile(2,35+facing*110,2.2,0,-1,3,fire2,obj_spark_fire1,0.5,0.5,12,16,self.id,18,char_custom4)
            proj.di = 0.65;
	    proj.depth = -2;
          }

          attack_time -= 1;
          turn_time -= 1;
	  fireball_timer -= 1;

          if ( sprite_index = final_smash_fly_sprite && fireball_timer <= -60 )
	  {
            fireball_timer = 48;
            fireballs = 8;
          }
    }
	

    if ( timer = 665 )
	{
	attack_time = 0;
        shockwave = instance_create ( x , y - 20 * size , obj_spark_shockwave );
        shockwave.image_xscale *= 1.2;
        shockwave.image_yscale *= 1.2;
        sound_play(final_smash_sound5)
        temp = 0;
        speed = 0;
        sprite_index = final_smash_end_sprite;
        image_index = 0;
        image_speed = 0;
        air_speed = 2.75;
        fall_speed = 3.15*FALL_SPEED_MUL;
        }

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    smash_power = 0
    attacking = 0
    attack_type = "none";
    intangible = 0;
    if ( air = 0 )
	state_type = "stand";
    else
	{
	state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 25;
	}
    timer = 0;
    time =-1;
    grab_edge=1
    air_speed = 2.75;
    fall_speed = 3.15*FALL_SPEED_MUL;
    can_die=1
}
