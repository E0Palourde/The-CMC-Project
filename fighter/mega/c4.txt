moving_object = 1;
proj_destroy = 0
if timer <= 1 && temp = 0 {         // Initialize sprite and speed during frame 1
    image_speed = 0.15;
    visible=1;
    temp = 1
    proj_hits = 0
    mega = attacker
    facing = mega.facing
    sprite_index = mega.tornado_projectile_sprite
    image_xscale *= (1-attacker.id.facing*2)
    gravity = 0.45
    hit = 2
    priority = 2
    if moveup {
	xspeed = 1.5 - mega.facing*3
	vspeed = -9
    } else if movedown {
	xspeed = 1 - mega.facing*2
	vspeed = 1
    } else if moveside {
	xspeed = 5 - facing*10
	vspeed = -3
    } else {
	xspeed = 2.5 - facing*5
	vspeed = -3
    }
}
if attack_success = 1 && timer = time {
time += 1
attack_success=2;
attacker.id.attack_hits-=1;
}
if hit = 2 && temp = 1 && hspeed = 0
    hspeed = xspeed
else if temp = 2
    speed = 0
visible=1
draw_sprite_ext(sprite_index,-1,x,y,image_xscale,image_yscale,0,image_blend,0.9)
if timer = time+1 && proj_hits <= 3 {
    proj_hits+=1
    hit = 0
    launch = 0
    attack_success=0
    target.hitby=0
    timer = 0
    time = 7
 
    if proj_hits = 4 {
        damage = round(attacker.size*4)
        bkb= attacker.size*6
        kbg = attacker.size*2.5
        dir = 60+facing*60
        hitlag_frames = round(3*attacker.size)
        shake_ampl = 0
        sfx = kick3
        gfx = obj_spark_hit1
    }
}

if timer = 24 && proj_hits<3 && temp = 2
proj_hits=3

if temp < 2 && (collision_point(x+sign(hspeed),y,obj_wall,1,1) || is_on_floor(self.id))   {
    temp = 2
    timer = 2
    time = 200
    sprite_index = mega.tornado_sprite
    image_speed = 0.15
    image_index = 0
    hit = 0
    vspeed = 0
    gravity = 0
    duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
    duster = instance_create(x,y,obj_dust_effect);
    duster.facing = 1-facing;  
}

if image_index >= image_number - image_speed {
    if temp = 2
        instance_destroy()
    else
        image_speed = 0
}

if vspeed > 3.6
    vspeed = 3.6


