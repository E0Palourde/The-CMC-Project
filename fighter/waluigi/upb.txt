fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump" && air < max_jumps {
    	attacking = 0;
    	special = 0;
    	timer = 0;
    	air_move=0
    	attack_type = "upb"
        state_type = "air_attack";
        hspeed = 0;
        image_speed = 0;
        sprite_index = upb_sprite;
        image_index=1;
        time = 38;
        timer_speed=1;
        if moveright = 1 facing = 0
        if moveleft = 1 facing = 1
}
        if timer < time {
switch ( timer ) {
			case 2: image_index = 1; break;
			case 4: image_index = 2; break;
			case 5: image_index = 3; break;
			case 6: image_index = 4; break;
			case 7: image_index = 5; break;

			case 69: image_index = 1; break;
			case 72: image_index = 2; break;
		
			case 303: image_index = 3; create_hitbox(3,110-facing*40,7,0,2,7,punch1,obj_spark_hit1,1.35,1.35,0,20,self.id,8,3); break;
			case 332: image_index = 4; break;
			case 336: image_index = 5; break;
		
			}
	if timer > 25
	force_edge_grab = 1
            if timer = 2 intangible = 1
            if timer = 4 {
                hspeed = 0;
                vspeed = -8.65;
                spark = instance_create(x,y,obj_down_impact)
                spark.image_xscale*=size
                spark.image_yscale*=size
                if air = 0 {
                    duster = instance_create(x,y,obj_dust_effect)
                    duster.facing=facing
                }
            }
            if timer < 7 {
                vspeed = 0
                gravity = 0 }
            if timer = 7 {
                duster = instance_create(x,y,obj_dust_effect);
                duster.facing = facing;
                intangible = 0;
                sound_play(upb_sound)
                sound_play(upb_voice0)
                create_hitbox(1,110-facing*40,1,0,2,7,punch1,obj_spark_hit1,0.5,0.5,15,27,self.id,12,3);
            }
            if timer > 7 && timer < 14
                after_image(3,c_purple,0.5)
            if timer = 8 && instance_exists(hitbox) {
                hitbox.damage = 23*size
                hitbox.bkb = 7.8*size
                hitbox.kbg = 8.35*size
                hitbox.sfx = specialhit
                hitbox.gfx = obj_spark_impact
		
                set_hitlag(hitbox,16)
		image_blend = c_purple;
                //hitbox.hitlag_frames = round(16*size*hitlag_constant)
            }
            if timer = 11 && instance_exists(hitbox) {
		image_blend = c_white;
                hitbox.damage = 1
                hitbox.bkb = 1
                hitbox.kbg = 0
                hitbox.sfx = punch1
                hitbox.gfx = obj_spark_hit1
                hitbox.hitlag_frames = round(7*size*hitlag_constant)
            }
            if timer = 7 || timer = 8 || timer = 9 || timer = 10 || timer = 11 {
                vspeed = size*(-9.6+timer/30);
                }
            if timer = 13
                vspeed = -size*8.65
	    if timer = 36 {
		time = 296
		timer = 50 
		sprite_index = mid_jump_sprite
		image_speed = 0.5
		image_index = 0;
		air_move = 1
	    }
	    if timer = 66 {
		vspeed = 12;
		create_hitbox(3,110-facing*40,5,0,2,7,punch1,obj_spark_hit1,0.5,1.25,0,27,self.id,120,3);
		image_blend = c_white;
			sound_play(upb_sound2);
			sprite_index = upb2_sprite
    			//state_type = "fall";
			image_index = 0;
			image_speed = 0;
	    }
	    if timer >= 50 && timer < 66{
		if vspeed > 0.8
		    vspeed = 0.8
	    }
	    if (timer >= 68 && timer < 300)
		vspeed = 5;

}

if (timer >= 50 && timer < 300 && air = 0){
        //state_type="land";
        //attack_type="none";
	sprite_index = upb2_sprite;
	image_index = 4;
	image_speed = 0;
	time = 336;
	timer = 300;
	vspeed = 0;
	hspeed = 0;
	sound_play(choose(joy1,joy2,joy3));
	sound_play(upb_sound3);
	instance_create(x+20*(1-2*facing),y-30*size,obj_spark_effect);
	switch(walupbt){
	case 0: sound_play(upb_voice1); break;
	case 1: sound_play(upb_voice2); break;
	case 2: sound_play(upb_voice5); break;
	case 3: sound_play(upb_voice6); break;
	case 4: sound_play(upb_voice7); break;
	case 5: sound_play(upb_voice8); break;
	case 6: sound_play(upb_voice9); break;
	case 7: sound_play(upb_voice10); break;
	}
	walupbt +=1;
	if (walupbt > 7)
		walupbt = 0;
}


  if (timer > 7 && timer < 14){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 80) || (target.weight > .22 && target.weight < .3 && target.percent > 100) || (target.weight > .3 && target.percent > 110)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	dontrepeat = 0;
	if air > 0
	state_type = "fall";
	else
	state_type = "stand";
	attack_type = "none";
        timer = 0;
        air = max_jumps
        time =-1;
    }

