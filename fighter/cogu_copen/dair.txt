if state_type = "jump" {
        state_type = "air_attack";
        attack_type = "dair";
        image_speed = 0;
        sprite_index = dair_sprite;
        image_index=-0;
        timer = 0;
        time = 100;
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer )
      {
	case 0: image_index = 0; break;
	
	case 100: image_index = 0; break;
	case 106: image_index = 1; break;
	case 109: image_index = 2; break;
	case 112: image_index = 1; break;
	case 115: image_index = 2; break;
	case 118: image_index = 1; break;
	case 121: image_index = 2; break;
	case 124: image_index = 1; break;
	case 127: image_index = 2; break;
	case 130: image_index = 1; break;
      }
	  
	  if timer = 99
	  timer = 2
	  
	  if timer < 100 {
	  image_speed = 0.5
	  vspeed = 9
	  hspeed = 0
	  air_move = 0
	  }
	  
	  if timer > 100
	  image_speed = 0
	  
	  
	  
	
	  
	if (air = 0 || attack_success) and timer < 100 {
		timer = 100
		time = 133
		sprite_index = taunt_sprite
		image_index = 0
	}
	
	if timer = 5 {
		 create_hitbox ( 15 , angle_correct(20) , 6.8 , 4.5 , 85 , 15 , crush , obj_spark_impact , 1.2 , 0.75 , 0 , 10.1 , self.id , 900 , 4 );


screen_shake(5,-3);

duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = 1-facing
                duster.image_xscale = 0.25
                duster.image_yscale = 0.25
				
				duster2 = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster2.facing = facing
                duster2.image_xscale = 0.25
                duster2.image_yscale = 0.25
	  }
	  
	  if timer = 106 {
		  sound_play(cockforward_sound);
	  }
	  
		
        
  }

if (timer >= 5){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1  && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 95) || (target.weight > .22 && target.weight < .3 && target.percent > 110) || (target.weight > .3 && target.percent > 125)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	    

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    attack_type = "none";
	dontrepeat = 0;
    timer = 0;
    time = -1;
  }		
        
