fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump"and bullitsused < 3 {
    timer = 0;
	state_type = "air_attack"
    attack_type = "upb"
    image_speed = 0;
    sprite_index = upbstart_sprite;
    image_index=0;
    time = 20;
    timer_speed=1;
    if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
	 target = 0
		target1 = 0
		special = 1
		enemydetected = 0
}

if timer < time {
	state_type = "air_attack"
    switch (timer)
	{
		case 0: image_index = 0; break;
		case 3: sprite_index = upb_sprite; break;
		
		case 60: image_index = 0; break;
		case 64: image_index = 1; break;
		case 68: image_index = 2; break;
		case 75: image_index = 3; break;
		case 85: image_index = 4; break;
		case 88: image_index = 5; break;
		case 91: image_index = 6; break;
		case 94: image_index = 7; break;
		
		case 200: image_index = 0; break;
		case 206: image_index = 1; break;
		
		case 300: image_index = 0; break;
		case 306: image_index = 1; break;
		
		case 503: image_index = 0; break;
		case 506: image_index = 1; break;
		case 509: image_index = 2; break;
		
		case 1000: image_index = 0; break;
	case 1004: image_index = 1; break;
	case 1006: image_index = 2; break;
	}
	
	force_edge_grab = 1
	
	
	// start up //
	if timer > 0 and timer < 3 {
		speed = 0
		gravity_lock = 1
		air_move = 0
	}
	
	if timer = 3 and comefrombounce = 0 {
		bullitsused += 1
	}
	
	if timer = 3 {
		sound_play(bullitdash_sound);
	}
	
	// bullit dash //
	
	if timer >= 3 and timer < 50 {
    image_speed = 0.5
	hspeed = 5.25 * (1-facing*2)
	vspeed = -5.25
	gravity_lock = 1
	air_move = 0
	}
	
	
	
	if timer = 3 {
		bubble = create_homing_bubble(0.97 , 0.81 , 5.32 , 16,self.id,47);
		jetboot = create_spark(26,-26,self.id);
    jetboot.sprite_index = jetbooteffect_sprite;
    jetboot.image_speed = 1;
    jetboot.image_alpha = 1;
    jetboot.image_xscale = 0.64 * (1-facing*2);
    jetboot.image_yscale = 0.64;
    jetboot.depth = depth + 2;
    jetboot.snap = self.id
	jetboot.loop = 9999
	jetboot.alarm[0] = 47
	jetboot.image_angle = 45 * (1-facing*2)
	}
	
	if timer >= 3 {
		bubble.x = x + 8.32 * (1-facing*2)
		bubble.y = y - 16
	}
	
	if ( target > 0 && target != self.id ) {
	    target1 = target;
	  }
	
	if timer >= 18 and special = 1 and timer < 200 and time < 50 {
		time += 1
	}
	
	if collision_rectangle(x, y, x + 25 * (1-facing*2), y - actual_height * 1.05, enemy, false, false) {
		enemydetected = 1
	}
	
	// tagged //
	
	if target1 > 0 and timer < 60 and enemydetected = 1 {
		timer = 60
		time = 100
		sprite_index = bullitdashtag_sprite
		image_index = 0
		tagged = target1
		tagtimer = choose(300,450,400,0)
		hitthing = create_projectile(3, 90, 0, 0, 1, 20, punch2, obj_spark_hit2, 0.3, 0.3, 15, 30, self.id, 1000, no_script);
			  hitthing.visible = 0
              hitthing.image_alpha = 0
			  hitthing.x = target1.x
			  hitthing.y = target1.y-(target1.actual_height / 2 );
			  hitthing.di = 0
			  with (jetboot) {instance_destroy()}
			  bullitsused -= 1
			  
			  
	}
	
	if timer >= 60 and timer < 75 {
		x = target1.x - 7 * (1-facing*2)
		y = target1.y-(target1.actual_height / 2 );
		speed = 0
		gravity_lock = 1
		air_move = 0
	}
	
	if timer >= 75 {
		if timer < 94
		hspeed = -1.8 * (1-facing*2)
		if timer < 80
		vspeed = -3.3
	}
	
	if timer = 75 {
		hitthing = create_projectile(3, angle_correct(40), 5, 0, -1, 20, punch2, obj_spark_hit2, 0.3, 0.3, 15, 30, self.id, 1000, no_script);
			  hitthing.visible = 0
              hitthing.image_alpha = 0
			  hitthing.x = target1.x
			  hitthing.y = target1.y-(target1.actual_height / 2 );
			  hitthing.di = 0
	}
	
	if timer = 96 {
		timer = 511
		time = 800
	}
	
	if timer >= 60 and timer <= 75 {
		image_speed = 0
		target1.sprite_index = target1.flinch_sprite;
target1.state_type = "flinch"
target1.depth = depth - 1;
target1.speed = 0;
target1.gravity_lock = 0;
target1.ignore_physics = 1;
	}
	
	// wall bounce //
	if timer >= 8 and timer < 200 and special = 1 and ( next_to_rwall or next_to_lwall ) {
		time = 212
		timer = 200
		sprite_index = upbwallcling_sprite
		image_index = 0
		special = 1
		with (bubble) {instance_destroy()}
		with (jetboot) {instance_destroy()}
		bullitsused -= 1
		sound_play(dashland_sound);
	}
	
	if timer >= 200 and timer < 212 {
		speed = 0
		gravity_lock = 1
		image_speed = 0
		special = 1
	}
	
	if timer = 210 {
		comefrombounce = 1
		special = 1
		facing = 1-facing
		state_type = "stand";
         attack_type = "none";
         char_upb();
	}
	
	// ceiling bounce //
		
		if timer >= 8 and timer < 300 and special = 1 and under_ceiling {
		time = 312
		timer = 300
		sprite_index = upbceilingcling_sprite
		image_index = 0
		special = 1
		with (bubble) {instance_destroy()}
		with (jetboot) {instance_destroy()}
		bullitsused -= 1
		sound_play(dashland_sound);
	}
	
	if timer >= 300 and timer < 312 {
		speed = 0
		gravity_lock = 1
		image_speed = 0
		special = 1
		image_speed = 0
	}
	
	if timer = 310 {
		comefrombounce = 1
		special = 1
		state_type = "stand";
         attack_type = "none";
         char_downb();
	}
	
	// hovering //
	
	
	if timer >= time-1 and timer < 200 {
		timer = 500
		time = 800
		sprite_index = sidebtransition_sprite
		image_index = 0
		hspeed *= 0.2
		vspeed *= 0.7
		with (bubble) {instance_destroy()}
		with (jetboot) {instance_destroy()}
		comefrombounce = 0
	}
	
	if timer >= 500 and timer <= 512 {
		image_speed = 0
		air_move = 1
	}
	
	if timer = 512 {
		sprite_index = jethover_sprite
		image_index = 0
	}
	
	if timer >= 512 {
		vspeed = 0.4
	}
	
	if timer >= 512 and timer < 1000 {
		image_speed = 0.5
		air_move = 1
		
		if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=14; }
				
				if shieldup = 1 {
					attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
				}
				
				 if ( ( ( moveright && facing = 0 ) || ( moveleft && facing = 1 ) ) && special ) {
         state_type = "stand";
         attack_type = "none";
         timer = 0;
         time = -1;
         char_sideb();
     }
	 
	 if ( ( ( moveright && facing = 1 ) || ( moveleft && facing = 0 ) ) && special ) {
		 facing = 1-facing
			state_type = "stand";
         attack_type = "none";
         timer = 0;
         time = -1;
         char_sideb();
	 }

 if moveup and special {
         state_type = "stand";
         attack_type = "none";
         timer = 0;
         time = -1;
         char_upb();
     }	

if movedown and special {
         state_type = "stand";
         attack_type = "none";
         timer = 0;
         time = -1;
         char_downb();
     }
	 
	 if movedown = 0 and moveright = 0 and moveleft = 0 and moveup = 0 and special = 1 and timer < 1000 {
	timer = 1000
	time = 1020
	sprite_index = hovershot_sprite
	image_index = 0
}

if attacking = 1
interrupt = 1
	 
	}
	
	if timer >= 1000 and timer < 1020 {
	image_speed = 0
	
	if timer = 1004 {
	lasershot = create_projectile(1, 361, 0, 0, 1, 1, magic1, obj_spark_shock, 0.1, 0.1, 15, 27, self.id, 1000, char_custom14);
	duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = facing
                duster.image_xscale = 0.25
                duster.image_yscale = 0.25
				sound_play(schut_sound);
				if tagtimer > 0
				lasershot.proj_script = char_custom15
	}
			  
			  if timer = 1010 and special = 1 {
				  timer = 1003
			  }
			  
			  if timer > 1000 and air = 0 {
				state_type = "stand";
         attack_type = "none";
         timer = 0;
         time = -1;
         char_b();
			  }
			  
			  if timer = 1019 {
				  timer = 512
				  time = 800
				  sprite_index = jethover_sprite
		image_index = 0
			  }
	

}
	
	
	
	
}

