if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding" {
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0;
        sprite_index = sideb_sprite;
        image_index=0;
        timer = -5;
        time = 50;
        timer_speed=1;
        intangible = 1;
        final_smashes+=1
        smash_power = 0
        air_move=0
		target = 0
		target1 = 0
}
speed=0
gravity_lock = 1;
if ( timer < time ){

switch (timer)
	{
		case 0: image_index = 0; break;
		case 3: sprite_index = sideb_sprite; break;
		
		case 60: image_index = 0; break;
		case 64: image_index = 1; break;
		case 68: image_index = 2; break;
		case 75: image_index = 3; break;
		case 85: image_index = 4; break;
		case 88: image_index = 5; break;
		case 91: image_index = 6; break;
		case 94: image_index = 7; break;
		
		case 210: image_index = 0; break;
	
	case 400: image_index = 0; break;
	case 406: image_index = 1; break;
	case 409: image_index = 2; break;
	case 412: image_index = 1; break;
	case 415: image_index = 2; break;
	case 418: image_index = 1; break;
	case 421: image_index = 2; break;
	case 424: image_index = 1; break;
	case 427: image_index = 2; break;
	case 430: image_index = 1; break;
	}
	
	if timer = 3 {
		sound_play(bullitdash_sound);
	}
	
	
	// bullit dash //
	
	if timer >= 3 and timer < 50 {
    image_speed = 0.5
	hspeed = 7 * (1-facing*2)
	vspeed = 0
	gravity_lock = 1
	air_move = 0
	}
	
	if timer = 3 {
		bubble = create_homing_bubble(0.97 , 0.81 , 0 , 13.56,self.id,47);
		jetboot = create_spark(-10,-43,self.id);
    jetboot.sprite_index = jetbooteffect_sprite;
    jetboot.image_speed = 1;
    jetboot.image_alpha = 1;
    jetboot.image_xscale = 0.64 * (1-facing*2);
    jetboot.image_yscale = 0.64;
    jetboot.depth = depth + 2;
    jetboot.snap = self.id
	jetboot.loop = 9999
	jetboot.alarm[0] = 47
	}
	
	if timer >= 3 {
		bubble.x = x 
		bubble.y = y - 13
	}
	
	if ( target > 0 && target != self.id ) {
	    target1 = target;
	  }
	  
	  // tagged //
	  
	  if target1 > 0 and timer < 60 {
		timer = 60
		time = 1000
		sprite_index = bullitdashtag_sprite
		image_index = 0
		tagged = target1
		tagtimer = 600
		hitthing = create_projectile(6, 90, 0, 0, 1, 20, slash2, obj_spark_hit4, 0.3, 0.3, 15, 30, self.id, 1000, no_script);
		screen_shake(4,-6);
			  hitthing.visible = 0
              hitthing.image_alpha = 0
			  hitthing.x = target1.x
			  hitthing.y = target1.y-(target1.actual_height / 2 );
			  hitthing.di = 0
			  with (jetboot) {instance_destroy()}
			  
			  
	}
	
	if timer = 60 {
		thevoid = create_spark(x,y,self.id);
thevoid.depth =  maxdepth + 0.1
thevoid.image_alpha = 0;
thevoid.alarm[0] = 193;
thevoid.x = view_xview - 120;
thevoid.y = view_yview - 120;
thevoid.sprite_index = black_screen_sprite;
thevoid.image_yscale = view_hview * 30;
thevoid.image_xscale = view_hview * 30;
zoom = instance_create ( 0 , 0 , obj_camerazoom );
zoom.camera_l = target.x - 8;
zoom.camera_r = target.x + 8;
zoom.camera_u = target.y - 4 - actual_height;
zoom.camera_d = target.y + 4;
zoom.camera_boundary_zoom = 250;
zoom.alarm[0] = 193;
freezer = instance_create(x,y,obj_freeze);
  freezer.alarm[0] = 193;
  freezer.dontpause = self.id;
	}
	
	with (obj_stage_extra) {
if depth < maxdepth 
visible = 0
}

	if timer >= 60 and thevoid.image_alpha < 1 and timer < 80 {
		thevoid.image_alpha += 0.1
		image_alpha -= 0.07
	}
	
	if timer >= 60 and timer < 75 {
		x = target1.x - 7 * (1-facing*2)
		y = target1.y-(target1.actual_height / 2 );
		speed = 0
		gravity_lock = 1
		air_move = 0
	}
	
	if timer >= 75 {
		if timer < 94
		hspeed = -1.8 * (1-facing*2)
		if timer < 80
		vspeed = -3.3
	}
	
	if timer = 75 {
		hitthing = create_projectile(4, 90, 0, 0, -1, 10, slash3, obj_spark_hit4, 0.3, 0.3, 15, 30, self.id, 1000, no_script);
			  hitthing.visible = 0
              hitthing.image_alpha = 0
			  hitthing.x = target1.x
			  hitthing.y = target1.y-(target1.actual_height / 2 );
			  hitthing.di = 0
	}
	
	if timer >= 60 and timer <= 255 {
		image_speed = 0
		target1.sprite_index = target1.flinch_sprite;
target1.state_type = "flinch"
target1.depth = depth - 1;
target1.speed = 0;
target1.gravity_lock = 1;
target1.ignore_physics = 1;
	}
	
	if timer >= 90 and timer < 210 {
		speed = 0
		gravity_lock = 1
		image_alpha = 0
	}
	
	
	if timer = 90 {
	clone1 = create_projectile(4, angle_correct(20), 6.4, 4.4, -1, 10, slash3, obj_spark_hit4, 0.64, 0.64, 150, -5, self.id, 1000, char_custom18);
	clone2 = create_projectile(4, angle_correct(20), 6.4, 4.4, -1, 10, slash3, obj_spark_hit4, 0.64, 0.64, 150, -60, self.id, 1000, char_custom18);
	clone3 = create_projectile(4, angle_correct(20), 6.4, 4.4, -1, 10, slash3, obj_spark_hit4, 0.64, 0.64, -75, -60, self.id, 1000, char_custom18);
	clone4 = create_projectile(4, angle_correct(20), 6.4, 4.4, -1, 10, slash3, obj_spark_hit4, 0.64, 0.64, -75, -5, self.id, 1000, char_custom18);
	clone1.facing = 1-facing
	clone2.facing = 1-facing
	}
	
	if timer = 210 {
x = target.x		
y = y - 600	
image_alpha = 1
sprite_index = dair_sprite
image_index = 0
	}
	
	if timer >= 210 and timer < 253 {
		image_speed = 0.5
	  vspeed = 15
	  hspeed = 0
	  air_move = 0
	}
	
	if timer >= 210 and timer < 247 {
			  ignore_physics = 1
	}
	
	if timer = 247 {
		ignore_physics = 0
	}
	
		
	if timer = 253 {
		timer = 400
		time = 433
		sprite_index = taunt_sprite
		image_index = 0
		
	}
	
	if timer >= 400 {
		speed = 0
		gravity_lock = 1
	}

	
	if timer = 401 {
		 create_hitbox ( 15 , angle_correct(20) , 8 , 7 , -1 , 15 , crush , obj_spark_impact , 1.2 , 0.7 , 0 , 16.10 , self.id , 2 , 4 );
		  bullets = instance_create (x,y - 20 * size,obj_spark)
bullets.sprite_index = bullets_sprite;
bullets.image_xscale = -0.85 * (1-facing*2) * size;
bullets.image_yscale = 0.85 * size;
bullets.image_alpha = 1;
bullets.depth = 2;
bullets.alarm[0] = 24
sound_play(impact_sound);


bullets2 = instance_create (x,y - 20 * size,obj_spark)
bullets2.sprite_index = bullets_sprite;
bullets2.image_xscale = 0.85 * (1-facing*2) * size;
bullets2.image_yscale = 0.85 * size;
bullets2.image_alpha = 1;
bullets2.depth = 2;
bullets2.alarm[0] = 24

bullitsused = 0
screen_shake(5,-3);

duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = 1-facing
                duster.image_xscale = 0.25
                duster.image_yscale = 0.25
				
				duster2 = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster2.facing = facing
                duster2.image_xscale = 0.25
                duster2.image_yscale = 0.25
	  }
	
	
	
	  
	
}

	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	with (obj_stage_extra){visible = 1}
    smash_power = 0
    attack_type = "none";
    intangible = 0;
    if air > 0
    state_type = "jump";
    else
    state_type = "stand";
    timer = 0;
    time =-1;
    }