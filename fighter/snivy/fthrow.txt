if ( time == -1 )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "fthrow";
  image_speed = 0;
  sprite_index = fthrow_sprite;
  image_index = 0;
  timer = 0;
  time = 24;
  timer_speed = 1;
  target.timer_speed = 0;
  target.alarm[0] = 50;
  }
if ( timer <= 7 )
{
target.x = x + 25 * size * (1-facing*2);
target.y = y;
}
if ( timer = 8 )
{
target.x = x + 24 * size * (1-facing*2);
target.y = y;
}
if ( timer >= 9 && timer <= 11 )
{
target.x = x + 23 * size * (1-facing*2);
target.y = y;
}
if ( timer = 12 )
{
target.x = x + 22 * size * (1-facing*2);
target.y = y;
}
if ( timer = 13 && timer <= 14 )
{
target.x = x + 21 * size * (1-facing*2);
target.y = y;
}

switch ( timer )
  {
  case 3: image_index = 1; break;
  case 6: image_index = 2; break;
  case 8: image_index = 3; target.x += 1 * ( 1-facing-facing ); break;
  case 9: target.x += 1 * ( 1-facing-facing ); break;
  case 12: image_index = 4; target.x -= 1 * ( 1-facing-facing ); break;
  case 13: target.x -= 1 * ( 1-facing-facing ); break;
  case 14:
    play_attack_voice();
    create_throw_box ( 9 , 25 + 130 * facing , 6.2 , 5.2 , 14 , 10 , punch3 , obj_spark_hit3 , 0.7 , 0.7 , 25 , 10 , self.id , 2 );
    image_index = 5;
    break;
  case 17: image_index = 6; break;
  case 20: image_index = 7; break;
  case 22:
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time = -1;
    break;
  }