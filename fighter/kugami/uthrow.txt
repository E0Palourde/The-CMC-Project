if time = -1
{
hspeed = 0;
state_type = "attack";
attack_type = "uthrow";
image_speed = 0;
sprite_index = uthrow_sprite;
image_index = 0;
timer = 0;
time = 51;
timer_speed = 1;
target.timer_speed = 0;
target.alarm[0] = 35
}

if timer < time
{

switch ( timer )
	{
	case 3: image_speed = 0.33; break;
	case 39: image_speed = 0.2; image_index = 22; break;
	case 45: image_speed = 0; image_index = 31; break;
	case 48: image_index = 32; break;
	}
	
if ( timer >= 1 && timer <= 4 )
{
target.x = x + 15 * size * (1-facing*2);
target.y = y;
}

if timer >= 5 and timer <= 9 
{
target.x = x + 20 * (1-facing*2) * size;
target.y = y;
}

if ( timer >= 10 && timer <= 27 )
{
target.x = x + 30 * (1-facing*2) * size;
}

if timer = 27
{
hspeed = 0;
duster = instance_create(x-(6-facing*12)*size,y,obj_dust_effect)
duster.facing = facing
duster.image_xscale *= 0.8*size
duster.image_yscale *= 1.1*size
sound_play(attack_voice4);
sound_play(attack_sound3);
create_hitbox(8,90,8,0,-1,1,-1,obj_spark_hit4,0.75,0.75,30,20,self.id,8,3);
hitbox.hit_stun = 10 * size;
}
}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch"
{
attack_type = "none";
state_type = "stand";
timer = 0;
time = -1;
}
