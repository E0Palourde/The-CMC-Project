if ( state_type == "jump" )
{
vspeed -= 0.1;
state_type = "air_attack";
attack_type = "bair";
image_speed = 0;
image_index = 0;
sprite_index = harpy_bair_sprite;
timer = 0;
time = 30;
timer_speed = 1;
transformspark = instance_create(x - 1 + facing * 2 * size,y-13 * size,obj_spark);
transformspark.sprite_index = b_transform_effect_sprite;
transformspark.image_index = 0
transformspark.image_speed = 1.5
transformspark.depth = -6;
transformspark.snap = self.id
transformspark.image_xscale = 0.3 * size
transformspark.image_yscale = 0.3 * size
}
switch ( timer )
{
case 2: image_index = 1; break;
case 4: shakex = -2*(1-facing*2); image_index = 2; break;
case 6: shakex = -4*(1-facing*2); image_index = 3; break;
case 8: shakex = -6*(1-facing*2); image_index = 4; image_xscale *= 1.1; image_yscale *= 1.1; break;
case 10: image_xscale /= 1.1; image_yscale /= 1.1; break;
case 12: image_xscale *= 1.05; image_yscale *= 1.05; break;
case 14: image_xscale /= 1.05; image_yscale /= 1.05; break;
case 15: shakex = -4*(1-facing*2); image_index = 5; break;
case 18: shakex = -2*(1-facing*2); image_index = 6; break;
case 20: shakex = 0*(1-facing*2); image_index = 7; break;
case 23: image_index = 8; break;
case 26: image_index = 9; break;
}

if ( timer = 8 )
{
sound_play(attacksnd2);
create_hitbox(14,145-facing*110,5.6,7.2,15,7,slash3,obj_spark_slash2,1.05,0.65,-19,18,self.id,8,2);
}

if ( air = 0 )
{
state_type = "land";
attack_type = "none";
shakex = 0
timer = 0;
time = 12;
sprite_index = land_sprite;
image_index = 0;
transformspark = instance_create(x - 1 + facing * 2 * size,y-13 * size,obj_spark);
transformspark.sprite_index = b_transform_effect_sprite;
transformspark.image_index = 0
transformspark.image_speed = 1.5
transformspark.depth = -6;
transformspark.snap = self.id
transformspark.image_xscale = 0.3 * size
transformspark.image_yscale = 0.3 * size
}

if ( timer >= time -1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    attack_type = "none";
	shakex = 0
	state_type = "jump";
	sprite_index = mid_jump_sprite;
	image_index = 15;
	timer = 0;
	transformspark = instance_create(x - 1.5 + facing * 3 * size,y-15 * size,obj_spark);
	transformspark.sprite_index = b_transform_effect_sprite;
	transformspark.image_index = 0
	transformspark.image_speed = 1.5
	transformspark.depth = -6;
	transformspark.snap = self.id
	transformspark.image_xscale = 0.3 * size
	transformspark.image_yscale = 0.3 * size
    time =-1;
  }