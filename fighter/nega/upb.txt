if air = max_jumps
exit;
else {
fast_fall = 0;
fast_fall_temp = 0;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" && air < max_jumps )
{
if air < max_jumps {
transformspark = instance_create(x - 1 + facing * 2 * size,y-13 * size,obj_spark);
transformspark.sprite_index = b_transform_effect_sprite;
transformspark.image_index = 0
transformspark.image_speed = 1.5
transformspark.depth = -6;
transformspark.snap = self.id
transformspark.image_xscale = 0.3 * size
transformspark.image_yscale = 0.3 * size
}
attack_type = "upb";
state_type = "air_attack";
timer_speed = 1;
hspeed = 0;
if ( air = 0 )
{
temp = 0;
sprite_index = harpy_jump_sprite;
image_speed = 0;
time = 60;
timer = 0;
}
if ( air > 0 )
{
temp = 1;
sprite_index = harpy_midjump_sprite;
image_speed = 0.65;
time = 80;
timer = 0;
}
}
if ( temp = 0 )
{
switch ( timer )
{
case 0: image_index=0;  break;
case 3: image_index=1;  break;
case 6: image_index=2;  break;
case 16: image_index=3;  break;
case 18: image_index=4;  break;
case 20: image_index=5;  break;
case 50: image_index=6;  break;
case 52: image_index=7;  break;
}

if (timer > 25 )
{
force_edge_grab = 1;
}
//---------------------------------------------------------------------------------------------Flying-------------------------------------------------------------------------------------------
if ( timer >= 0 && timer <= 50 )
{
gravity_lock = 1;
}
if ( timer >= 20 && timer <= 30 )
{
vspeed = -7 * size;
}
if ( timer = 31 && timer = 32 )
{
vspeed = -6 * size;
}
if ( timer >= 33 && timer <= 36 )
{
vspeed = -5 * size;
}
if ( timer >= 37 && timer <= 41 )
{
vspeed = -4 * size;
}
if ( timer >= 42 && timer <= 47 )
{
vspeed = -3 * size;
}
if ( timer = 48 )
{
vspeed = -2 * size;
}
if ( timer >= 49 && timer < 70 )
{	
vspeed = -1 * size;
}
if ( timer = 70 )
{
vspeed = 0;
}
if ( timer > 20 )
{
if ( moveright )
{
facing = 0;
hspeed *= 0.7;
hspeed += 0.7*size;
}
if ( moveleft )
{
facing = 1;
hspeed *= 0.7;
hspeed -= 0.7*size;
}
}

//--------------------------------------------------------------------------------------------Hitbox--------------------------------------------------------------------------------------------------
if (timer = 16)
{
	create_hitbox(10,90+facing*65,6.5,1.5,10,5,sf_kick1,obj_spark_hit1,1.2,0.65,1,16,self.id,27,2);
	create_wind(2,0.65,1,16,6,0,5);
	sound_play(gliding_sound)
	sound_play(harpy_jump_sound);
}
}



if ( temp = 1 )
{
switch ( timer )
{
case 31: image_speed = 0; sprite_index = harpy_jump_sprite; image_index=5;  break;
case 70: image_index=6;  break;
case 72: image_index=7;  break;
}

//---------------------------------------------------------------------------------------------Flying-------------------------------------------------------------------------------------------
if (timer > 45 )
{
force_edge_grab = 1;
}
if ( timer >= 0 && timer <= 50 )
{	
gravity_lock = 1;
}
if ( timer >= 0 && timer <= 30 )
{
hspeed = 0;
vspeed = -0.2 * size;
}
if ( timer = 31 && moveright )
{
facing = 0;
}
if ( timer = 31 && moveleft )
{
facing = 1;
}
if ( timer >= 31 && timer <= 60 )
{
vspeed = -4 * size;
}
if ( timer >= 62 && timer <= 64 )
{
vspeed = -3 * size;
}
if ( timer >= 65 && timer <= 68 )
{
vspeed = -2 * size;
}
if ( timer = 69 )
{	
vspeed = -1 * size;
}
if ( timer = 70 )
{	
vspeed = 0;
}
if timer < 30 && timer mod 8 = 0
sound_play(harpy_jump_sound)

//--------------------------------------------------------------------------------------------Hitbox--------------------------------------------------------------------------------------------------
if ( timer == 4 || timer == 11 || timer == 22 || timer == 28 )
{
    create_hitbox(1,80+facing*20,2.15,0.1,2,2,sf_kick1,obj_spark_hit1,1.35,0.85,1,16,self.id,1,1);
	hitbox.di = -1
}
}
if (timer = 34)
{
	create_hitbox(10,90,7.5,3.5,10,6,sf_kick2,obj_spark_hit1,1.3,0.70,1,16,self.id,27,2);
	create_wind(2,0.65,1,16,6,0,5);
	sound_play(gliding_sound);
}
}

if ( timer >= time - 1 )
  {
transformspark = instance_create(x - 1 + facing * 2 * size,y-13 * size,obj_spark);
transformspark.sprite_index = b_transform_effect_sprite;
transformspark.image_index = 0
transformspark.image_speed = 1.5
transformspark.depth = -6;
transformspark.snap = self.id
transformspark.image_xscale = 0.3 * size
transformspark.image_yscale = 0.3 * size
  attack_type = "none";
  if ( air = 0 )
  {
  state_type = "stand";
  }
  if ( air > 0 )
  {
  state_type = "fall";
  sprite_index = mid_jump_sprite;
  image_index = 15;
  air = max_jumps;
  }
  timer = 0;
  time = -1;
  }