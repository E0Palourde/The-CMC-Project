//--------------------------------------------------------------------------------CROUCH-----------------------------------------------------------
if ( state_type = "crouch" ){
    
    sprite_index = crouch_sprite;
    image_speed = 0;
    crouchgetuptimer = min(9,timer);
    switch (timer){
        case 0: image_index = 0; break;
        case 3: image_index = 1; break;
        case 6: image_index = 2; break;
        case 9: image_index = 3; break;
    }
}
if (enemy.state_type = "out"){
temp_spawn += 1
 }

 if (instance_exists(pentagram)){
if (target.state_type = "air_flinch" || target.state_type = "flinch") && (temp_spawn >= 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 110) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 130)){
				temp_speed = enemy.speed
				temp_grav = enemy.gravity
                killspark = instance_create(enemy.x-180,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				image_speed = 0.5;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
                enemy.state_type = "flinch"
				enemy.timer = 0
				enemy.time = 45
				enemy.speed = temp_speed * 5
				enemy.gravity = temp_grav + 1.2
				}
				}
  }

   if (instance_exists(windcall2)){
if (target.state_type = "air_flinch" || target.state_type = "flinch") && (temp_spawn >= 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 90) || (target.weight > .22 && target.weight < .3 && target.percent > 100) || (target.weight > .3 && target.percent > 110)){
				temp_speed = enemy.speed
				temp_grav = enemy.gravity
                killspark = instance_create(enemy.x-180,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				image_speed = 0.5;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
                enemy.state_type = "flinch"
				enemy.timer = 0
				enemy.time = 25
				enemy.speed = temp_speed
				enemy.gravity = temp_grav + 1.2
				}
				}
  }	
if ( state_type = "stand" && crouchgetuptimer > 0 ){
    image_speed = 0;
    crouchgetuptimer -= 1;
    sprite_index = crouch_sprite;
    crouchtemp = 1;
}

if ( state_type = "stand" && crouchgetuptimer = 0 && crouchtemp = 1 ){
    sprite_index = stand_sprite;
    image_index = 0;
    crouchtemp = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 2 ){
    image_index = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 5 ){
    image_index = 1;
}

if ( state_type = "stand" && crouchgetuptimer >= 8 ){
    image_index = 2;
}


if ( state_type != "stand" && state_type != "crouch" && crouchgetuptimer > 0 ){
    crouchgetuptimer = 0;
    crouchtemp = 0;
}

if air = 0
{
zairtemp = 0;
upbtemp = 0;
}

if (state_type = "run" and sprite_index = walk_sprite)
{
image_speed = 0.15;
}

if (sprite_index = jump_sprite)
{
image_speed = 0.45;
if (timer = 0 and image_index < 13 )
image_index = 0;
}

if (sprite_index = mid_jump_sprite)
{
image_speed = 0.45;
if (timer = 0 and image_index < 13 )
image_index = 0;
}

if ( sprite_index = jump_sprite and image_index >= 16 )
{
image_index = 13;
}

if ( sprite_index = mid_jump_sprite and image_index >= 16 )
{
image_index = 13;
}

if ( sprite_index = fall_sprite and image_index >= 7 )
{
image_index = 4;
}

if ( attacking = 1 && special = 1 )
{
switchcard = 1;
}
else
{
switchcard = 0;
}

maxfloattime = 240
if floattime > maxfloattime
floattime = maxfloattime

if floattime < 0
floattime = 0

if air = 0{
	if floattime < maxfloattime
	floattime += 0.1
}

/////////////////Meter Start/////////////////////////////////////
if (!instance_exists(MeterHud)){
    MeterHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    MeterHud.step_script = hudThing_step_script;
    MeterHud.draw_script = hudThing_draw_script;
    MeterHud.owner = self.id;
    MeterHud.keepmain = self.keepmain;
	MeterHud.shakey = -10;
	MeterHud.card_sprite[1] = card_sprite[1]
	MeterHud.card_sprite[2] = card_sprite[2]
	MeterHud.card_sprite[3] = card_sprite[3]
	MeterHud.cardglow_sprite[1] = cardglow_sprite[1]
}

MeterHud.hudalpha = obj_game_control.hud_cover[number-1];
MeterHud.leColor[1] = c_white


if floattime >= maxfloattime*0.5{
	MeterHud.leColor[2] = c_white
}
else{
	MeterHud.leColor[2] = c_dkgray
}

if floattime >= maxfloattime*1{
	MeterHud.leColor[3] = c_white
}
else{
	MeterHud.leColor[3] = c_dkgray
}


MeterHud.sprite_index = meter_sprite;
if(floattime >= maxfloattime){MeterHud.image_index = 55;} else if(floattime <= 0){MeterHud.image_index = 0;} else {MeterHud.image_index = floattime*56/maxfloattime;}
MeterHud.image_speed = 0;

/////////////////Meter Stop/////////////////////////////////////

if (state_type == "run") {
	//Walking
	if (sprite_index != walk_sprite){
		image_speed = 0;
	}
	//Dash
	if (runtimer >= 0 and runtimer < 50){
		sprite_index = dash_sprite;
		switch (runtimer){
			case 1: image_index = 0; break;
			case 4: image_index = 1; break;
			case 7: image_index = 2; break;
			case 10: image_index = 3; break;
			case 13: image_index = 4; break;
			case 16: image_index = 5; break;
			case 19: image_index = 6; break;
		}
	//Stop running during the initial dash
	} else if (runtimer >= 60 and runtimer < 90 and dash_end == 1) {
		sprite_index = brake_sprite;
		if (runtimer < 63){
			image_index = 0;
		} else if (runtimer < 66){
			image_index = 1;
		} else if (runtimer < 69){
			image_index = 2;
		} else if (runtimer < 72){
			image_index = 3;
		} else {
			image_index = 4;
		}
		
	//Stop running (run brake)
	} else if (runtimer >= 60 and runtimer < 90 and dash_end == 0){
		sprite_index = brake_sprite;

		if (runtimer < 62){
			image_index = 0;
		} else if (runtimer < 63){
			image_index = 1;
		} else if (runtimer < 65){
			image_index = 2;
		}  else if (runtimer < 68){
			image_index = 3;
		} else {
			image_index = 4;
		}
	 }
	//Turn While running
	 else if (runtimer >= -30 and runtimer <= -10) { 
		sprite_index = turn_sprite;
		switch (runtimer){
			case -30: image_index = 0; break;
			case -27: image_index = 1; break;
			case -24: image_index = 2; break;
			case -21: image_index = 3; break;
			case -18: image_index = 4; break;
		}
		if (runtimer >= -18){
			sprite_index = run_sprite;
			image_speed = 0.3;
		}
	} 
	//Run normally
	else if (runtimer >= 50 and runtimer < 60){
		sprite_index = run_sprite;
		image_speed = 0.45;
	} 
	
}