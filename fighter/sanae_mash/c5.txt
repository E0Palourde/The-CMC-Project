absorb = 1;
absorb2 = 1;
proj_destroy = 0;
if ( timer <= 1 && temp <= 0)
  {
    sprite_index = keepmain.pentagram_sprite;
	image_xscale = 0.17 * (1-facing*2) * size;
	image_yscale = 0.37 * size;
    temp = 1
    proj_hits = 0
	image_speed = 0.75;
	image_blend = c_red;
    soma = attacker
    visible = 1;
}

if timer <= 1
{
    hspeed = 2.75*(1-facing*2)
}

speed += 0.15;

if cos(timer*pi)>0.5
		{
        afterimage = after_image(6,c_red,0.6);
		afterimage.number = 0;
		}

if timer < 15 && proj_hits < 1
{
image_xscale += 0.01 * (1-facing*2) * size;
image_yscale += 0.01 * size;
}

if attack_success = 1 && timer = time {
time += 1
attack_success=2;
attacker.id.attack_hits-=1;
}

visible=1
draw_sprite_ext(sprite_index,-1,x,y,image_xscale,image_yscale,0,image_blend,0.9)
if timer = time+1 && proj_hits <= 1 {
    proj_hits+=1
    timer = 0
    time = 20
    hit = 0
    launch =0
    attack_success=0
    target.hitby=0
    if proj_hits = 2 {
        damage = round(attacker.size*3)
        bkb= attacker.size*2.75
        kbg = attacker.size*5.95
        dir = 25+facing*130
        hitlag_frames = round(14*attacker.size)
        shake_ampl = 0.75
        shake_kb = 7
        sfx = magic3
        gfx = obj_spark_shock
    }
}
if timer = 75 && proj_hits<1
proj_hits=1
moving_object = 1;


if collision_point(x+sign(hspeed),y,obj_wall,1,1) || is_on_floor(self.id)   {
    instance_destroy();
	}