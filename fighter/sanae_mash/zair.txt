if zairtemp = 4 {exit;}
if state_type = "jump" 
	{
        state_type = "air_attack";
        attack_type = "zair";
        image_speed = 0;
        sprite_index = zair_sprite;
        image_index=0;
        timer = 0;
        time = 31;
        timer_speed=1;
		force_edge_grab=1;
		vspeed = 0;
		vspeed -= 0.1;
		temp = 0
		placex = windcall.x
		placey = windcall.y
	}
	
	switch (timer)
	{
	 case 02: image_index = 1; break;
	 case 04: image_index = 2; break;
	 case 07: image_index = 3; effect_create_above(ef_ring,x * size ,y * size ,0.1,c_white) sound_play(zair_voice); break;
	 case 10: image_index = 4; break;
	 case 13: image_index = 5; break;
	 case 16: image_index = 3; break;
	 case 19: image_index = 4; break;
	 case 22: image_index = 5; break;
	 case 25: image_index = 3; break;
	 case 28: image_index = 4; break;
	 case 31: image_index = 5; break;
	}

fast_fall = 0;
fast_fall_temp = 0;
gravity_lock = 1;

if timer = 7 
{

if MeterHud.cardtype = 0
{
MeterHud.cardtype += 1
}
else if MeterHud.cardtype = 1
{
MeterHud.cardtype += 1;
}
else if MeterHud.cardtype = 2
{
MeterHud.cardtype -= 2;
}


 
   sound_play(wind_sound2);
 
   if instance_exists(obomb)
   {
   with (obomb)
   {
   effect_create_above(ef_ring,x * size ,y * size ,0.1,c_white)
   }
   }
   
  if instance_exists (windcall)
  {
  with (windcall)
   {
   effect_create_above(ef_ring,x * size ,y * size ,0.1,c_white)
   instance_destroy();
   }
  windcall2 = create_projectile( 3 , 25+facing*130 , 2.5, 1.5 , 4 , 3 , slash2 , obj_spark_slash1 , 0.15 , 0.15 , 1 , 1 , self.id , 999 , char_custom7 );
  windcall2.strike = 1;
  windcall2.x = placex;
  windcall2.y = placey;
  windcall2.priority += 3;
  }
   
  if !moveleft or !moveright or !moveup or !movedown
  {
  danmaku.hspeed = 5 - facing * 10 * size;
  danmaku2.hspeed = 5 - facing * 10 * size;
  danmaku3.hspeed = 5 - facing * 10 * size;
  danmaku4.hspeed = 5 - facing * 10 * size;
  danmaku5.hspeed = 5 - facing * 10 * size;
  danmaku6.hspeed = 5 - facing * 10 * size;
  danmaku7.hspeed = 5 - facing * 10 * size;
  danmaku8.hspeed = 5 - facing * 10 * size;
  obomb.hspeed = 5 - facing * 10 * size;
  windcall2.hspeed = 5 - facing * 10 * size;
  windcall2.dir = 25+facing*130
  }
  
  if moveright and facing = 1
  {
  danmaku.hspeed = -5 + facing * 10 * size;
  danmaku2.hspeed = -5 + facing * 10 * size;
  danmaku3.hspeed = -5 + facing * 10 * size;
  danmaku4.hspeed = -5 + facing * 10 * size;
  danmaku5.hspeed = -5 + facing * 10 * size;
  danmaku6.hspeed = -5 + facing * 10 * size;
  danmaku7.hspeed = -5 + facing * 10 * size;
  danmaku8.hspeed = -5 + facing * 10 * size;
  windcall2.hspeed = -5 + facing * 10 * size;
  windcall2.dir = 25
  }
  
  if moveleft and facing = 0
  {
  danmaku.hspeed = -5 + facing * 10 * size;
  danmaku2.hspeed = -5 + facing * 10 * size;
  danmaku3.hspeed = -5 + facing * 10 * size;
  danmaku4.hspeed = -5 + facing * 10 * size;
  danmaku5.hspeed = -5 + facing * 10 * size;
  danmaku6.hspeed = -5 + facing * 10 * size;
  danmaku7.hspeed = -5 + facing * 10 * size;
  danmaku8.hspeed = -5 + facing * 10 * size;
  obomb.hspeed = -5 + facing * 10 * size;
  windcall2.hspeed = -5 + facing * 10 * size;
  windcall2.dir = 155
  }
  
  if moveup
  {
  danmaku.hspeed = 0;
  danmaku.vspeed = -5 * size;
  danmaku.image_angle = 90;
  danmaku2.hspeed = 0;
  danmaku2.vspeed = -5 * size;
  danmaku2.image_angle = 90;
  danmaku3.hspeed = 0;
  danmaku3.vspeed = -5 * size;
  danmaku3.image_angle = 90;
  danmaku4.hspeed = 0;
  danmaku4.vspeed = -5 * size;
  danmaku4.image_angle = 90;
  danmaku5.hspeed = 0;
  danmaku5.vspeed = -5 * size;
  danmaku5.image_angle = 90;
  danmaku6.hspeed = 0;
  danmaku6.vspeed = -5 * size;
  danmaku6.image_angle = 90;
  danmaku7.hspeed = 0;
  danmaku7.vspeed = -5 * size;
  danmaku7.image_angle = 90;
  danmaku8.hspeed = 0;
  danmaku8.vspeed = -5 * size;
  danmaku8.image_angle = 90;
  obomb.vspeed = -5 * size;
  windcall2.hspeed = 0;
  windcall2.vspeed = -5 * size;
  windcall2.dir = 90;
  }
  
  if movedown
  {
  danmaku.hspeed = 0;
  danmaku.vspeed = 5 * size;
  danmaku.image_angle = 90;
  danmaku2.hspeed = 0;
  danmaku2.vspeed = 5 * size;
  danmaku2.image_angle = 90;
  danmaku3.hspeed = 0;
  danmaku3.vspeed = 5 * size;
  danmaku3.image_angle = 90;
  danmaku4.hspeed = 0;
  danmaku4.vspeed = 5 * size;
  danmaku4.image_angle = 90;
  danmaku5.hspeed = 0;
  danmaku5.vspeed = 5 * size;
  danmaku5.image_angle = 90;
  danmaku6.hspeed = 0;
  danmaku6.vspeed = 5 * size;
  danmaku6.image_angle = 90;
  danmaku7.hspeed = 0;
  danmaku7.vspeed = 5 * size;
  danmaku7.image_angle = 90;
  danmaku8.hspeed = 0;
  danmaku8.vspeed = 5 * size;
  danmaku8.image_angle = 90;
  obomb.vspeed = 5 * size;
  windcall2.hspeed = 0;
  windcall2.vspeed = 5 * size;
  windcall2.dir = 285 - facing * 30;
  }
  
  if moveright and movedown
  {
  danmaku.hspeed = 5 * size;
  danmaku.vspeed = 5 * size;
  danmaku.image_angle = 315;
  danmaku2.hspeed = 5 * size;
  danmaku2.vspeed = 5 * size;
  danmaku2.image_angle = 315;
  danmaku3.hspeed = 5 * size;
  danmaku3.vspeed = 5 * size;
  danmaku3.image_angle = 315;
  danmaku4.hspeed = 5 * size;
  danmaku4.vspeed = 5 * size;
  danmaku4.image_angle = 315;
  danmaku5.hspeed = 5 * size;
  danmaku5.vspeed = 5 * size;
  danmaku5.image_angle = 315;
  danmaku6.hspeed = 5 * size;
  danmaku6.vspeed = 5 * size;
  danmaku6.image_angle = 315;
  danmaku7.hspeed = 5 * size;
  danmaku7.vspeed = 5 * size;
  danmaku7.image_angle = 315;
  danmaku8.hspeed = 5 * size;
  danmaku8.vspeed = 5 * size;
  danmaku8.image_angle = 315;
  obomb.hspeed = 5 * size;
  obomb.vspeed = 5 * size;
  windcall2.hspeed = 5 * size;
  windcall2.vspeed = 5 * size;
  windcall2.dir = 315
  }
  
  if moveleft and moveup
  {
  danmaku.hspeed = -5 * size;
  danmaku.vspeed = -5 * size;
  danmaku.image_angle = 315;
  danmaku2.hspeed = -5 * size;
  danmaku2.vspeed = -5 * size;
  danmaku2.image_angle = 315;
  danmaku3.hspeed = -5 * size;
  danmaku3.vspeed = -5 * size;
  danmaku3.image_angle = 315;
  danmaku4.hspeed = -5 * size;
  danmaku4.vspeed = -5 * size;
  danmaku4.image_angle = 315;
  danmaku5.hspeed = -5 * size;
  danmaku5.vspeed = -5 * size;
  danmaku5.image_angle = 315;
  danmaku6.hspeed = -5 * size;
  danmaku6.vspeed = -5 * size;
  danmaku6.image_angle = 315;
  danmaku7.hspeed = -5 * size;
  danmaku7.vspeed = -5 * size;
  danmaku7.image_angle = 315;
  danmaku8.hspeed = -5 * size;
  danmaku8.vspeed = -5 * size;
  danmaku8.image_angle = 315;
  obomb.hspeed = -5 * size;
  obomb.vspeed = -5 * size;
  windcall2.hspeed = -5 * size;
  windcall2.vspeed = -5 * size;
  windcall2.dir = 135
  }
  
  if moveright and moveup
  {
  danmaku.hspeed = 5 * size;
  danmaku.vspeed = -5 * size;
  danmaku.image_angle = 45;
  danmaku2.hspeed = 5 * size;
  danmaku2.vspeed = -5 * size;
  danmaku2.image_angle = 45;
  danmaku3.hspeed = 5 * size;
  danmaku3.vspeed = -5 * size;
  danmaku3.image_angle = 45;
  danmaku4.hspeed = 5 * size;
  danmaku4.vspeed = -5 * size;
  danmaku4.image_angle = 45;
  danmaku5.hspeed = 5 * size;
  danmaku5.vspeed = -5 * size;
  danmaku5.image_angle = 45;
  danmaku6.hspeed = 5 * size;
  danmaku6.vspeed = -5 * size;
  danmaku6.image_angle = 45;
  danmaku7.hspeed = 5 * size;
  danmaku7.vspeed = -5 * size;
  danmaku7.image_angle = 45;
  danmaku8.hspeed = 5 * size;
  danmaku8.vspeed = -5 * size;
  danmaku8.image_angle = 45;
  obomb.hspeed = 5 * size;
  obomb.vspeed = -5 * size;
  windcall2.hspeed = 5 * size;
  windcall2.vspeed = -5 * size;
  windcall2.dir = 45;
  }
  
  if moveleft and movedown
  {
  danmaku.hspeed = -5 * size;
  danmaku.vspeed = 5 * size;
  danmaku.image_angle = 45;
  danmaku2.hspeed = -5 * size;
  danmaku2.vspeed = 5 * size;
  danmaku2.image_angle = 45;
  danmaku3.hspeed = -5 * size;
  danmaku3.vspeed = 5 * size;
  danmaku3.image_angle = 45;
  danmaku4.hspeed = -5 * size;
  danmaku4.vspeed = 5 * size;
  danmaku4.image_angle = 45;
  danmaku5.hspeed = -5 * size;
  danmaku5.vspeed = 5 * size;
  danmaku5.image_angle = 45;
  danmaku6.hspeed = -5 * size;
  danmaku6.vspeed = 5 * size;
  danmaku6.image_angle = 45;
  danmaku7.hspeed = -5 * size;
  danmaku7.vspeed = 5 * size;
  danmaku7.image_angle = 45;
  danmaku8.hspeed = -5 * size;
  danmaku8.vspeed = 5 * size;
  danmaku8.image_angle = 45;
  danmaku.tempaccel = 7;
  obomb.hspeed = -5 * size;
  obomb.vspeed = 5 * size;
  windcall2.hspeed = -5 * size;
  windcall2.vspeed = 5 * size;
  windcall2.dir = 225
  }
  
 }

if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=13; }
				
if (timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
	{
    dontrepeat = 0;
    attack_type = "none";
	zairtemp += 1;
    if (air > 0)
	{
        state_type = "jump";
	}
    else
	{
    state_type = "stand";
    dontrepeat = 0
    timer = 0;
    time =-1;
	}
    }	