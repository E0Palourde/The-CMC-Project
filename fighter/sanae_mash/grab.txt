if ( state_type == "shielding" || state_type == "stand" ) {
if runtimer <= 0 {
  image_speed = 0;
  timer = 0;
  time = 22;
  }
else if runtimer > 0 {
  image_speed = 0;
  timer = -4;
  time = 28;
  }
  state_type = "attack";
  attack_type = "grab";
  image_index = 0;
  sprite_index = grab_sprite;
  timer_speed = 1;
  placex = windcall.x
  placey = windcall.y
}


switch (timer)
{
case 2: image_index = 1; break;
case 4: image_index = 2; break;
case 6: image_index = 3; break;
case 8: image_index = 4; break;
case 10: image_index = 5; break;
case 12: image_index = 6; break;
case 14: image_index = 7; break;
case 16: image_index = 8; break;
case 18: image_index = 9; break;
}

hspeed *= 0.5;


if timer = 9 
{

if MeterHud.cardtype = 0
{
MeterHud.cardtype += 1
}
else if MeterHud.cardtype = 1
{
MeterHud.cardtype += 1;
}
else if MeterHud.cardtype = 2
{
MeterHud.cardtype -= 2;
}


 
 
   if instance_exists(obomb)
   {
   with (obomb)
   {
   effect_create_above(ef_ring,x * size ,y * size ,0.1,c_white)
   }
   }
   
  if instance_exists (windcall)
  {
  with (windcall)
   {
   effect_create_above(ef_ring,x * size ,y * size ,0.1,c_white)
   instance_destroy();
   }
  windcall2 = create_projectile( 3 , 25+facing*130 , 2.5, 1.5 , 4 , 3 , slash2 , obj_spark_slash1 , 0.15 , 0.15 , 1 , 1 , self.id , 100 , char_custom7 );
  windcall2.strike = 1;
  windcall2.x = placex;
  windcall2.y = placey;
  windcall2.priority += 3;
  }
   
  if !moveleft or !moveright or !moveup or !movedown
  {
  danmaku.hspeed = 5 - facing * 10 * size;
  danmaku2.hspeed = 5 - facing * 10 * size;
  danmaku3.hspeed = 5 - facing * 10 * size;
  danmaku4.hspeed = 5 - facing * 10 * size;
  danmaku5.hspeed = 5 - facing * 10 * size;
  danmaku6.hspeed = 5 - facing * 10 * size;
  danmaku7.hspeed = 5 - facing * 10 * size;
  danmaku8.hspeed = 5 - facing * 10 * size;
  obomb.hspeed = 5 - facing * 10 * size;
  windcall2.hspeed = 5 - facing * 10 * size;
  windcall2.dir = 25+facing*130
  }
  
  if moveright and facing = 1
  {
  danmaku.hspeed = -5 + facing * 10 * size;
  danmaku2.hspeed = -5 + facing * 10 * size;
  danmaku3.hspeed = -5 + facing * 10 * size;
  danmaku4.hspeed = -5 + facing * 10 * size;
  danmaku5.hspeed = -5 + facing * 10 * size;
  danmaku6.hspeed = -5 + facing * 10 * size;
  danmaku7.hspeed = -5 + facing * 10 * size;
  danmaku8.hspeed = -5 + facing * 10 * size;
  windcall2.hspeed = -5 + facing * 10 * size;
  windcall2.dir = 25
  }
  
  if moveleft and facing = 0
  {
  danmaku.hspeed = -5 + facing * 10 * size;
  danmaku2.hspeed = -5 + facing * 10 * size;
  danmaku3.hspeed = -5 + facing * 10 * size;
  danmaku4.hspeed = -5 + facing * 10 * size;
  danmaku5.hspeed = -5 + facing * 10 * size;
  danmaku6.hspeed = -5 + facing * 10 * size;
  danmaku7.hspeed = -5 + facing * 10 * size;
  danmaku8.hspeed = -5 + facing * 10 * size;
  obomb.hspeed = -5 + facing * 10 * size;
  windcall2.hspeed = -5 + facing * 10 * size;
  windcall2.dir = 155
  }
  
  if moveup
  {
  danmaku.hspeed = 0;
  danmaku.vspeed = -5 * size;
  danmaku.image_angle = 90;
  danmaku2.hspeed = 0;
  danmaku2.vspeed = -5 * size;
  danmaku2.image_angle = 90;
  danmaku3.hspeed = 0;
  danmaku3.vspeed = -5 * size;
  danmaku3.image_angle = 90;
  danmaku4.hspeed = 0;
  danmaku4.vspeed = -5 * size;
  danmaku4.image_angle = 90;
  danmaku5.hspeed = 0;
  danmaku5.vspeed = -5 * size;
  danmaku5.image_angle = 90;
  danmaku6.hspeed = 0;
  danmaku6.vspeed = -5 * size;
  danmaku6.image_angle = 90;
  danmaku7.hspeed = 0;
  danmaku7.vspeed = -5 * size;
  danmaku7.image_angle = 90;
  danmaku8.hspeed = 0;
  danmaku8.vspeed = -5 * size;
  danmaku8.image_angle = 90;
  obomb.vspeed = -5 * size;
  windcall2.hspeed = 0;
  windcall2.vspeed = -5 * size;
  windcall2.dir = 90;
  }
  
  if movedown
  {
  danmaku.hspeed = 0;
  danmaku.vspeed = 5 * size;
  danmaku.image_angle = 90;
  danmaku2.hspeed = 0;
  danmaku2.vspeed = 5 * size;
  danmaku2.image_angle = 90;
  danmaku3.hspeed = 0;
  danmaku3.vspeed = 5 * size;
  danmaku3.image_angle = 90;
  danmaku4.hspeed = 0;
  danmaku4.vspeed = 5 * size;
  danmaku4.image_angle = 90;
  danmaku5.hspeed = 0;
  danmaku5.vspeed = 5 * size;
  danmaku5.image_angle = 90;
  danmaku6.hspeed = 0;
  danmaku6.vspeed = 5 * size;
  danmaku6.image_angle = 90;
  danmaku7.hspeed = 0;
  danmaku7.vspeed = 5 * size;
  danmaku7.image_angle = 90;
  danmaku8.hspeed = 0;
  danmaku8.vspeed = 5 * size;
  danmaku8.image_angle = 90;
  obomb.vspeed = 5 * size;
  windcall2.hspeed = 0;
  windcall2.vspeed = 5 * size;
  windcall2.dir = 285 - facing * 30;
  }
  
  if moveright and movedown
  {
  danmaku.hspeed = 5 * size;
  danmaku.vspeed = 5 * size;
  danmaku.image_angle = 315;
  danmaku2.hspeed = 5 * size;
  danmaku2.vspeed = 5 * size;
  danmaku2.image_angle = 315;
  danmaku3.hspeed = 5 * size;
  danmaku3.vspeed = 5 * size;
  danmaku3.image_angle = 315;
  danmaku4.hspeed = 5 * size;
  danmaku4.vspeed = 5 * size;
  danmaku4.image_angle = 315;
  danmaku5.hspeed = 5 * size;
  danmaku5.vspeed = 5 * size;
  danmaku5.image_angle = 315;
  danmaku6.hspeed = 5 * size;
  danmaku6.vspeed = 5 * size;
  danmaku6.image_angle = 315;
  danmaku7.hspeed = 5 * size;
  danmaku7.vspeed = 5 * size;
  danmaku7.image_angle = 315;
  danmaku8.hspeed = 5 * size;
  danmaku8.vspeed = 5 * size;
  danmaku8.image_angle = 315;
  obomb.hspeed = 5 * size;
  obomb.vspeed = 5 * size;
  windcall2.hspeed = 5 * size;
  windcall2.vspeed = 5 * size;
  windcall2.dir = 315
  }
  
  if moveleft and moveup
  {
  danmaku.hspeed = -5 * size;
  danmaku.vspeed = -5 * size;
  danmaku.image_angle = 315;
  danmaku2.hspeed = -5 * size;
  danmaku2.vspeed = -5 * size;
  danmaku2.image_angle = 315;
  danmaku3.hspeed = -5 * size;
  danmaku3.vspeed = -5 * size;
  danmaku3.image_angle = 315;
  danmaku4.hspeed = -5 * size;
  danmaku4.vspeed = -5 * size;
  danmaku4.image_angle = 315;
  danmaku5.hspeed = -5 * size;
  danmaku5.vspeed = -5 * size;
  danmaku5.image_angle = 315;
  danmaku6.hspeed = -5 * size;
  danmaku6.vspeed = -5 * size;
  danmaku6.image_angle = 315;
  danmaku7.hspeed = -5 * size;
  danmaku7.vspeed = -5 * size;
  danmaku7.image_angle = 315;
  danmaku8.hspeed = -5 * size;
  danmaku8.vspeed = -5 * size;
  danmaku8.image_angle = 315;
  obomb.hspeed = -5 * size;
  obomb.vspeed = -5 * size;
  windcall2.hspeed = -5 * size;
  windcall2.vspeed = -5 * size;
  windcall2.dir = 135
  }
  
  if moveright and moveup
  {
  danmaku.hspeed = 5 * size;
  danmaku.vspeed = -5 * size;
  danmaku.image_angle = 45;
  danmaku2.hspeed = 5 * size;
  danmaku2.vspeed = -5 * size;
  danmaku2.image_angle = 45;
  danmaku3.hspeed = 5 * size;
  danmaku3.vspeed = -5 * size;
  danmaku3.image_angle = 45;
  danmaku4.hspeed = 5 * size;
  danmaku4.vspeed = -5 * size;
  danmaku4.image_angle = 45;
  danmaku5.hspeed = 5 * size;
  danmaku5.vspeed = -5 * size;
  danmaku5.image_angle = 45;
  danmaku6.hspeed = 5 * size;
  danmaku6.vspeed = -5 * size;
  danmaku6.image_angle = 45;
  danmaku7.hspeed = 5 * size;
  danmaku7.vspeed = -5 * size;
  danmaku7.image_angle = 45;
  danmaku8.hspeed = 5 * size;
  danmaku8.vspeed = -5 * size;
  danmaku8.image_angle = 45;
  obomb.hspeed = 5 * size;
  obomb.vspeed = -5 * size;
  windcall2.hspeed = 5 * size;
  windcall2.vspeed = -5 * size;
  windcall2.dir = 45;
  }
  
  if moveleft and movedown
  {
  danmaku.hspeed = -5 * size;
  danmaku.vspeed = 5 * size;
  danmaku.image_angle = 45;
  danmaku2.hspeed = -5 * size;
  danmaku2.vspeed = 5 * size;
  danmaku2.image_angle = 45;
  danmaku3.hspeed = -5 * size;
  danmaku3.vspeed = 5 * size;
  danmaku3.image_angle = 45;
  danmaku4.hspeed = -5 * size;
  danmaku4.vspeed = 5 * size;
  danmaku4.image_angle = 45;
  danmaku5.hspeed = -5 * size;
  danmaku5.vspeed = 5 * size;
  danmaku5.image_angle = 45;
  danmaku6.hspeed = -5 * size;
  danmaku6.vspeed = 5 * size;
  danmaku6.image_angle = 45;
  danmaku7.hspeed = -5 * size;
  danmaku7.vspeed = 5 * size;
  danmaku7.image_angle = 45;
  danmaku8.hspeed = -5 * size;
  danmaku8.vspeed = 5 * size;
  danmaku8.image_angle = 45;
  danmaku.tempaccel = 7;
  obomb.hspeed = -5 * size;
  obomb.vspeed = 5 * size;
  windcall2.hspeed = -5 * size;
  windcall2.vspeed = 5 * size;
  windcall2.dir = 225
  }
  
 }

if ( timer == 8 )
  {
  sound_play(zair_voice); 
  sound_play(wind_sound2);
  create_grab_box ( 17.76+(time=28) , 20.35 , 0.83+((time=28)*0.1) , 0.87 , self.id , 2+((time=28)*2) );
  effect_create_above(ef_ring,x + 17.39 * (1-facing*2) * size ,y - 21.09 * size ,0.15,c_white)
  }

if ( timer >= time - 1 )
  {
  attack_type = "none";
  state_type = "stand";
  runtimer = 0;
  timer = 0;
  time = -1;
  }