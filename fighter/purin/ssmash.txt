if state_type = "stand" || state_type = "run" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "ssmash";
        image_speed = 0;
        sprite_index = ssmash_sprite;
        timer = 0;
        time = 43;
        charge_frame = 6
}

if timer < time {
	switch ( timer ) {
		case 0: image_index = 1; break;
		case 2: image_index = 2; break;
		case 4: image_index = 3; break;
		case 5: image_index = 4; break;
		case 9: image_index = 5; break;
		case 10: image_index = 6; break;
		case 11: image_index = 7; break;
		case 14: image_index = 8; break;
		case 15: image_index = 9; break;
		case 19: image_index = 10; break;
		case 23: image_index = 11; break;
		case 23: image_index = 12; break;
		case 26: image_index = 13; break;
		case 29: image_index = 14; break;
		case 32: image_index = 15; break;
		case 35: image_index = 16; break;
		case 38: image_index = 17; break;
   }
	if timer >= 15 && timer <= 19 {
		image_xscale *= 1.15; }
	
    if timer = 15 {
		sound_play(ssmash_voice);
		duster = instance_create(x-4.55*size*(1-facing*2),y,obj_dust_effect);
		duster.facing = facing;
		sound_play(attack_sound4);
		create_hitbox(17,25+facing*130,5.7,7.5,22,10,kick3,obj_spark_hit4,0.80,0.46,14.56,7.28,self.id,8,2); 
	}
	
    if timer = 19 {
		hitbox.image_xscale = 0.65*size;
		hitbox.image_yscale = 0.39*size;
		hitbox.hitbox_x = 11.83*size*(1-facing*2);
		hitbox.damage = 13*size
		hitbox.bkb = 6*size
		hitbox2.shield_damage = round(17*size)
	}
	
	if timer >= 14 && timer <= 19
		hspeed = 5.4*size*(1-facing*2);
	if timer >= 20 && timer <= 23
		hspeed = 4.1*size*(1-facing*2);
	if timer >= 24 && timer <= 30
		hspeed = 2.3*size*(1-facing*2);
	if timer = 31
		hspeed = 0

	}

	
            if (timer >= 15){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 95) || (target.weight > .22 && target.weight < .3 && target.percent > 105) || (target.weight > .3 && target.percent > 115)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.055;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 100
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
				dontrepeat = 1;
				}
				}
        
  }	   
	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
	attack_type = "none";
    state_type = "stand";
	image_index = 0;
    timer = 0;
    time =-1;
    }
