if state_type = "jump" {
        state_type = "air_attack";
        attack_type = "nair";
        image_speed = 0;
        sprite_index = nair_sprite;
        image_index=0;
        timer = 0;
        time = 36;
        timer_speed=1;
		create_hurtbox_precise(self.id,37,nair_mask)
}
        if timer < time {
	if (target.weight <=.20)
	{
		multiangle = point_direction(x,y,x+hspeed,y+vspeed)
		if (multiangle > 70 && multiangle < 100)
		{
			multispd = clamp(point_distance(x,y,x+hspeed+(1-facing*2),y+vspeed),1,4)
		}
		else
		{
			multispd = clamp(point_distance(x,y,x+hspeed+(.5-facing*1),y+vspeed-2),0,5)
		}
	}
	else
	{
		multiangle = point_direction(x,y,x+hspeed,y+vspeed)
		if (multiangle > 70 && multiangle < 100)
		{
			multispd = clamp(point_distance(x,y,hitbox.x+hspeed+(1.5-facing*3),hitbox.y+vspeed),1,4)
		}
		else
		{
			multispd = clamp(point_distance(x,y,x+hspeed+(1.5-facing*3),y+vspeed-1),0,5)
		}
	}

  	 switch ( timer )
    	  {
   	 case 3: image_index = 1; break;
   	 case 5: image_index = 2; break;
    	case 7: image_index = 3; break;
    	case 9: image_index = 4; break;
 	case 11: image_index = 5; break;
    	case 13: image_index = 6; break;
    	case 15: image_index = 7; image_xscale *= 0.99; image_yscale *= 0.99;  break;
	
	case 17: image_index = 0; image_xscale *= 1.15; image_yscale *= 1.15; break;
      }
            state_type = "air_attack";

    if timer = 5 {
                play_attack_voice();
                sound_play(nair_sound1);
             create_hitbox(2,multiangle, multispd * 1.1,0,5,4,magic3,obj_spark_shock,1.2,1.2,1,11,self.id,4,2);
                         
		
	
	hitbox.shield_stun = 1.4;
		 create_spark(-18+random(36),5+random(20),pk_sprite,0.3,0.5,0.5)
            }
            if timer = 9 {
           create_hitbox(2,multiangle, multispd * 1.1,0,5,4,magic3,obj_spark_shock,1.2,1.2,1,11,self.id,4,2);
                         
	   create_spark(-18+random(36),5+random(20),pk_sprite,0.3,0.5,0.5)
                }
            if timer = 13 {
            create_hitbox(2,multiangle, multispd * 1.1,0,5,4,magic3,obj_spark_shock,1.2,1.2,1,11,self.id,4,2);
           create_spark(-18+random(36),5+random(20),pk_sprite,0.3,0.5,0.5)
                }
           
      
            if timer = 17 {
                spark = instance_create(x+(5-facing*10)*size,y-11*size,obj_spark_effect); spark.image_xscale *= size*0.75; spark.image_yscale = spark.image_xscale;
                sound_play(nair_sound2);
               //create_hitbox2(3,362,6,4.8,5,4,magic3,obj_spark_shock,0.9,0.9,2,11,self.id,4,2);
                    create_hitbox(4,60+facing*60,4,5.2,5,5,magic3,obj_spark_shock,0.7,1.2,8,11,self.id,4,2);
          	    create_hitbox2(4,145-facing*110,4,5.2,5,5,magic3,obj_spark_shock,0.7,1.2,-8,11,self.id,4,2);
          
		

 }

	  if timer = 22 {
          sprite_index=jump_sprite
	  image_speed=0.35;
	 
 }
            if air = 0 {
                if timer < 17 {
                with hitbox instance_destroy();
                sound_play(psi_sound1);
                create_hitbox2(2,362,4.45,1,5,1,magic1,obj_spark_shock,0.67,0.8,2,14,self.id,4,2);
                hitbox2.remain = 1
		hitbox2.hit_stun = 3; }
		with spark instance_destroy();
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=8; 
            }
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	with spark instance_destroy();
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}
        
