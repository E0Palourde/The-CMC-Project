if (state_type = "jump")  
{
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "dair";
        image_speed = 0.6;
        sprite_index = dair_sprite;
        image_index=0;
        timer = 0;
        time = 44;
        timer_speed=1;
}

        if (timer < time) {

	if (target.weight <=.20)
	{
		multiangle = point_direction(x,y,x+hspeed,y+vspeed)
		if (multiangle > 70 && multiangle < 100)
		{
			multispd = clamp(point_distance(x,y,x+hspeed+(1-facing*2),y+vspeed),1,4)
		}
		else
		{
			multispd = clamp(point_distance(x,y,x+hspeed+(.5-facing*1),y+vspeed-2),0,5)
		}
	}
	else
	{
		multiangle = point_direction(x,y,x+hspeed,y+vspeed)
		if (multiangle > 70 && multiangle < 100)
		{
			multispd = clamp(point_distance(x,y,hitbox.x+hspeed+(1.5-facing*3),hitbox.y+vspeed),1,4)
		}
		else
		{
			multispd = clamp(point_distance(x,y,x+hspeed+(1.5-facing*3),y+vspeed-1),0,5)
		}
	}

            if timer = 5 || timer = 10 || timer = 15 || timer = 21 {
                spark = create_spark(0,-5,pk_sprite,0.33,0.75,0.75)
                spark.vspeed = 0.8*size
                sound_play(attack_sound3);
            }
            if timer = 5 {
                image_speed = 0.5
                if random(10)>1
                    play_attack_voice();
                create_hitbox(3,multiangle, multispd * 1.1,0,8,3,magic1,obj_spark_shock,0.75,1.1,1,-5,self.id,3,3);
                hitbox.di = 0.3
                hitbox.hit_stun = 4; 
				var burst;
		sound_play(dair_sound1); }
            if timer = 10 || timer = 15 {
                create_hitbox(3,multiangle, multispd,0,7,3,magic1,obj_spark_shock,0.75,1.1,1,-5,self.id,3,3);
                hitbox.di = 0.3
                hitbox.hit_stun = 4;
				
		sound_play(dair_sound2);  }
            if timer = 21 {
                create_hitbox(4,270,5,2.9,13,7,magic3,obj_spark_shock,0.75,1.1,1,-6,self.id,5,4);
                image_speed = 0.1
		sound_play(dair_sound3); 
		sound_play(psi_sound2);}
		var burst;
            if air = 0 {
		with spark instance_destroy();
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                if timer >= 33
                time=7;
                else
                time = 9;
                timer=0;
            }
        } 
if image_index >= image_number - image_speed
    image_speed = 0  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	with spark instance_destroy();
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}        
