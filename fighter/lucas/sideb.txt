if state_type = "run" || state_type = "stand" || state_type = "jump" {
    attacking = 0
    attack_type = "sideb"
    if air = 0 {
        state_type = "attack";
        hspeed = 0;
        temp = 0;
        sprite_index = uthrow_sprite; 
    }
    else {
        state_type = "air_attack";
        hspeed *= 0.4;
        sprite_index = uthrow_sprite;
        temp = 1;
    }
    image_speed = 0;
    image_index=1;
    timer = 0;
    time = 60;
    timer_speed=1;
}
switch ( timer )
  {
  case 15: image_index = 2; break;
  case 17: image_index = 3; image_angle = 320-facing*280; break;
  case 19: image_index = 4; break;
  case 23: image_index = 5; break; 
  case 27: image_index = 6; image_angle = 0; break;
  case 47: image_index = 7; break;
  case 52: image_index = 8; break;
  }
if timer = 1 && voicetimer = 0 {
    sound_play(b_voice)
    voicetimer = 75
    }
if timer = 15
    create_spark(20,13,psi_sprite,0.5,0.25,0.25)
if timer = 19  {
    duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing; 
    sound_play(sideb_sound);
    create_projectile(9,25+facing*130,6.1,4.5,8,4,ice1,obj_spark_ice2,0.68,0.68,16,15,self.id,32,char_custom4);
    proj.air = (air>0)
    proj.hit_stun = 10 //8
    proj.shield_stun = 4
        proj.sprite_index = pkfreeze_sprite1
    vspeed *= 0.5;
}

if vspeed > -0.1 && (collision_point(x,y+1,obj_platform,1,1) || collision_point(x,y+1,obj_floor,1,1)) {
    air_move = 0
    state_type = "attack"
    hspeed=0 
}
if temp && air = 0 {
    state_type="land";
    attack_type="none";
    sprite_index = land_sprite;
    timer=0;
    time=21;
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air = 0
    state_type = "stand";
    else
    state_type = "air";
    timer = 0;
    time =-1;
}
        

