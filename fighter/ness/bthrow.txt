if time = -1{
hspeed = 0;
state_type = "attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = bthrow_sprite;
image_index=0;
timer = 0;
time = 46;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 50
target.depth = depth + 1;
target.state_type = "air_flinch";
}
switch ( timer )
  {
  case 1: image_index = 1; break;
  case 22: image_index = 6; break;
  case 24: image_index = 7; break;
  case 25: image_index = 8; break;
  case 35: image_index = 11; shakex = 0; shakey = 1; break;
  case 36: shakey = 0; break;
  case 42: image_index = 12; break;
  case 44: image_index = 13; break;
  }
if ( timer >= 1 && timer < 22 )
  shakey = ( timer mod 2 ) * 1.5;
if ( timer >= 25 && timer < 35 )
  {
  shakex = lengthdir_y ( 6 - 12 * facing , ( timer - 25 ) / ( 35 - 25 ) * 180 );
  shakey = lengthdir_y ( 3 , ( timer - 25 ) / ( 35 - 25 ) * 180 );
  }
    state_type = "attack";
    if ( timer == 1 ) sound_play ( psi_sound4 );
    if timer >= 0 && timer < 25 {
        target.x = x + ( 1 - facing * 2 ) * size * ( lengthdir_x ( 21 , -45 + ( timer - 1 ) / ( 24 - 1 ) * 270 ) );
        target.y = y - 14 * size + lengthdir_y ( size * 14 , -45 + ( timer - 1 ) / ( 24 - 1 ) * 270 );
        target.sprite_angle = ( timer - 1 ) / ( 24 - 1 ) * 360 * ( 1 - facing * 2 );
    }
    if timer = 2 || timer = 6 || timer = 11 || timer = 16 {
        spark = create_spark(14-timer*1.25,13+random(5),psi_sprite,0.5,0.25,0.25)
        spark.depth = -2
        spark.x = target.x;
        spark.y = target.y - target.actual_height * 0.5;
    }
    if timer = 2 || timer = 13 {
        //sound_play(psi_sound3)
    }
    if timer = 25 {
	    target.x = x -(13 - facing*26)*size
        target.y = y - 12*size
        play_attack_voice()
        //sound_play(psi_sound3)
        create_throw_box(12,150-facing*120,3.8,10,1,1,-1,obj_spark_effect,0.7,0.7,-12,15,self.id,1);
        hitbox.shake_ampl = 0.4 }
        


if (timer >= 25){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 95) || (target.weight > .22 && target.weight < .3 && target.percent > 105) || (target.weight > .3 && target.percent > 120)){
					    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	    


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
