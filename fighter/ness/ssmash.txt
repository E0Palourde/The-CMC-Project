if state_type = "stand" || state_type = "run" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "ssmash";
        image_speed = 0;
        sprite_index = ssmash_sprite;
        image_index=0;
        timer = 0;
        time = 44;
        timer_speed=1;
        charge_frame = 14;
		create_hurtbox_precise(self.id, 45, ssmash_mask)
}

switch ( timer )
  {
  case 6:
    spark = instance_create ( x - 5 * size * ( 1 - facing * 2 ) , y - 31 * size , obj_spark );
    spark.sprite_index = global.spark_sprite2;
    spark.image_xscale *= 0.2;
    spark.image_yscale *= 0.2;
    spark.image_alpha = 0.8;
    spark.image_speed *= 0.75;
    spark.image_angle = random ( 360 );
    break;
  case 9:
    spark = instance_create ( x - 3.5 * size * ( 1 - facing * 2 ) , y - 34.5 * size , obj_spark );
    spark.sprite_index = global.spark_sprite2;
    spark.image_xscale *= 0.3;
    spark.image_yscale *= 0.3;
    spark.image_alpha = 0.8;
    spark.image_speed *= 0.75;
    spark.image_angle = random ( 360 );
    spark = instance_create ( x - 3.5 * size * ( 1 - facing * 2 ) , y - 34.5 * size , obj_spark_shockwave );
    spark.image_xscale *= 0.5;
    spark.image_yscale *= 0.5;
    break;
  case 17: image_index = 7; shakex = 2 - facing * 4; break;
  case 19: image_index = 8; shakex = 7 - facing * 14; image_xscale *= 1.2; image_yscale *= 1.2; break;
  case 20: shakex = 4 - facing * 8; image_xscale *= 1.1; image_yscale *= 1.1; break;
  case 21: image_index = 9; shakex = 2 - facing * 4; image_xscale *= 1.05; image_yscale *= 1.05; break;
  case 22: shakex = 1 - facing * 2; break;
  case 23: image_index = 10; shakex = 0.5 - facing; break;
  case 24: shakex = 0;
  case 25: image_index = 11; break;
  }
        if timer < time {
            state_type = "attack";
            if timer = 19 {
                sound_play(ssmash_sound);
                sound_play(ssmash_voice);
                duster = instance_create ( x , y , obj_dust_effect );
                duster.facing = facing;
                create_hitbox(15,25+facing*130,6.8,7.2,24,10,bathit,obj_spark_hit2,0.8,0.95,14,19,self.id,4,4);
                hitbox.reflect = 0
                hitbox.armor_break = 1
                create_hitbox2(20,25+facing*130,6.8,8.9,28,12,bat_critical_hit,obj_spark_impact,0.7,0.95,21,20,self.id,4,4);
                hitbox2.reflect = 1
                hitbox.hit_stun = 3
                hitbox2.hit_stun = 3
                hitbox2.armor_break = 1
            }
            if image_index > image_number-image_speed
                image_speed=0
        }
        
                if (timer >= 19){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 110) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 135)){
					    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	      
if timer >= 43 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }
        
