fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump"{
    timer = 0;
	state_type = "air_attack"
    attack_type = "upb"
    image_speed = 0;
    sprite_index = upb_sprite;
    image_index=0;
    time = 33;
    timer_speed=1;
	air_move = 0;
    if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
}

if timer < time {
	state_type = "air_attack"
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 5: image_index = 2; break;//hitbox
	case 7: image_index = 3; break;
	case 9: image_index = 4; break;
	case 11: image_index = 5; break;
	case 13: image_index = 6; break;
	case 15: image_index = 7; break;
	case 17: image_index = 8; break;
	case 19: image_index = 9; break;
	case 21: image_index = 10; break;
	case 24: image_index = 11; break;
	case 27: image_index = 12; break;
	case 30: image_index = 13; break;
    }
	if timer = 3 {
	speed = 10.5*(1-facing*2);
	direction = 80*(1-facing*2);
	}
	if timer > 3 {
		force_ledge_grab = 1;
	}
	if timer = 5 {
	sound_play(choose(upb_voice1,upb_voice2,upb_voice3));
	sound_play(whipswing);
	upb_fx = create_blur(x,y-24*size,self.id );
	upb_fx.image_xscale = 0.195* (1 - facing * 2) * size;
	upb_fx.image_yscale = 0.195 * size;
	upb_fx.image_alpha = 1;
	upb_fx.image_index = 0;
	upb_fx.anim_speed = 0.5;
	upb_fx.depth = depth - 0.1;
	upb_fx.sprite_index = upb_fx_sprite;
	upb_fx.is_solid = true;
	upb_fx.snap = self.id;
	create_hitbox(1,angle_correct(80),10,0,5,4,slash2,obj_spark_slash2,3,3,0,30,self.id,3,3);
	hitbox.weight_kb = 1;
	hitbox.hit_stun = 10;
	}
	if timer >= 7 && timer <= 15 && timer mod 2 = 0 {
	create_hitbox(1,370,3,0,5,4,slash2,obj_spark_slash2,3,3,0,30,self.id,3,3);
	hitbox.weight_kb = 1;
	hitbox.hit_stun = 10;
	}
	if timer = 15 {
	create_hitbox(1,370,5,0,5,4,slash2,obj_spark_slash2,3,3,0,30,self.id,3,3);
	hitbox.weight_kb = 1;
	hitbox.hit_stun = 10;
	}
	if timer = 17 {
	create_hitbox(3,angle_correct(80),5,5,5,6,slash3,obj_spark_slash3,3,3,0,30,self.id,3,3);
	}
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        attack_type = "none";
        if air > 0
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
    }
