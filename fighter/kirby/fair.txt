if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "fair";
    timer = 0;
    time = 35;
    sprite_index = fair_sprite;
    image_speed = 0;
    image_index = 0;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 14: image_index = 4; break;
	case 17: image_index = 5; break;
	case 18: image_index = 6; break;
	case 20: image_index = 7; break;
	case 22: image_index = 8; break;
	case 25: image_index = 9; break;
	case 28: image_index = 10; break;
      }
	 if (target.weight <=.20)
  {
    multiangle = point_direction(x,y,x+hspeed,y+vspeed)
    if (multiangle > 70 && multiangle < 100)
    {
      multispd = clamp(point_distance(x,y,x+hspeed+(1-facing*2),y+vspeed),1,4)
    }
    else
    {
      multispd = clamp(point_distance(x,y,x+hspeed+(.5-facing*1),y+vspeed-2),0,5)
    }
  }
  else
  {
    multiangle = point_direction(x,y,x+hspeed,y+vspeed)
    if (multiangle > 70 && multiangle < 100)
    {
      multispd = clamp(point_distance(x,y,hitbox.x+hspeed+(1.5-facing*3),hitbox.y+vspeed),1,4)
    }
    else
    {
      multispd = clamp(point_distance(x,y,x+hspeed+(1.5-facing*3),y+vspeed-1),0,5)
    }
  }
    if ( timer = 2 || timer = 10 || timer = 19 )
	hspeed += size * 0.25 * (1-facing*2);
    if ( timer = 9 || timer = 17 || timer = 25 )
	hspeed -= size * 0.25 * (1-facing*2);
    if ( timer = 6 )
      {
	play_attack_voice();
	sound_play(swingsnd1);
	create_hitbox(4,multiangle,multispd * 0.8,0,6,2,kick2,obj_spark_hit3,0.85,0.5,9,8,self.id,3,2);
	hitbox.hit_stun = 2;
	hitbox.di = 0;
	hitbox.shake_kb = 0;
      }
    if ( timer = 14 )
      {
	sound_play(swingsnd1);
	create_hitbox(3,multiangle,multispd * 0.8,0,6,3.25,kick2,obj_spark_hit3,0.85,0.5,9,6,self.id,3,2);
	hitbox.hit_stun = 3;
	hitbox.di = 0;
	hitbox.shake_kb = 0;
      }
    if ( timer = 22 )
      {
	sound_play(swingsnd1);
	create_hitbox(5,26+facing*128,4.65,4.24,6,4,kick3,obj_spark_hit3,0.9,0.6,9,8,self.id,3,2);
	hitbox.hit_stun = 3;
	hitbox.shake_kb = 2;
      }

    if ( air = 0 )
      {
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 11;
	sprite_index = land_sprite;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "jump";
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 1;
    timer = 0;
    time = -1;
  }