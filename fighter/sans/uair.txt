if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "uair";
    timer = 0;
    time = 52;
    sprite_index = uair_sprite;
    image_speed = 0.25;
    image_index = 0;
    vspeed -= 0.1;
  }

  if ( timer = 7 )
  {
	  sound_play(swingsnd1);
	  if ( random ( 2 ) < 1 )
	  play_attack_voice()
  }

  if ( image_index = 2 && hitbox.hit != 1 )
  {
	  image_speed = 0;
	  create_hitbox(0,90,0,0,0,0,-1,obj_spark_slash3,0.85,0.65,-5,36,self.id,25,2);
  }


if ( hitbox.hit = 1 && image_index = 2 )
{
	image_index = 3;
	image_speed = 0.3;
	create_hitbox(0,290-facing*40,10.11,2,16,16,slash3,obj_spark_slash3,0.55,0.55,-5,37,self.id,1,2);
	create_projectile(1,290-facing*40,10.11,2,16,28,slash3,obj_spark_slash3,0.55,0.55,-5,37,self.id,1,2);
}
if ( ( hitbox.hit = 1 || proj.hit = 1 ) && image_index = 3 )
{
	vspeed = 0;
	hspeed = 0;
	vspeed = 14;
	hspeed = -2*(1-facing*2)*size
} 

  if (timer >= 16){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0) && target.offstage{
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
  }
if ( image_index >= 5 )
{
	image_speed = 0; 
	image_index = 5;
}


if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" || air = 0 ) 
{
  dontrepeat = 0;
  attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 7;
	image_speed = 0;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }
 
 