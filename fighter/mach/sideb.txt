fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" {
        if ( cantsideb ) exit;
        vspeed -= 0.1
temp_no_hurtbox = 1
        state_type = "air_attack"
        attack_type = "sideb"
        image_speed = 0.25
        sprite_index = sideb_start_sprite
        image_index=0
        timer = 0
        time = 295
        temp=0
        timer_speed=1
        attack_success=0
        target=-1
        special=1
        attacking=0
        charge=0
        hspeed = 0
        air_move = 0
        sound_play(sideb_start_sound)
        temp = 0
        movejump = 0
    }
if ai = 1 {
    if ai_timer = 5 
        special = 1
    if ai_timer = 7 && random(10)>6
        special = 1
    else if ai
        special = 0
}
if timer>=10 && temp = 0 {
    if special = 1 {
        if charge<5.5
        charge+=0.1
        special=1 - ai
        timer=1
        time = 295
        sound_stop(sideb_zoom_sound2)
        sound_play(sideb_zoom_sound2)
        duster=instance_create(x,y,obj_dust_effect)
        duster.facing=facing
        sprite_index = sideb_loop_sprite
		image_angle = 55 * (1-facing*2);
		shakey = -8 * size;
        }
    if shieldup = 1 && air = 0 {
        flashing = true
        alarm[7] = 3
        state_type = "shielding"
        timer = 0
        time = -1
        attack_type = "none"
        shield = instance_create(x,y-image_yscale*sprite_get_height(sprite_index)/2,obj_shield);
        }
    }
if timer > 30
force_edge_grab = 1
if timer >= 10 && temp = 0 && special = 0 {
    timer=10
    time=294
    temp=4.6+charge/2
    hspeed = temp-facing*temp*2
    sprite_index = sideb_loop_sprite
	image_angle = 0;
	shakey = 0;
}
if timer >= 10 && temp > 0.1  {
        if ai = 1 {
            if !enemy.offstage {
                if enemy.x < x && enemy_dist > 33 {
                    moveleft = 1
                    moveright=0
                }
                if enemy.x>x && enemy_dist > 33 {
                    moveright = 1
                    moveleft = 0
                }
            }
            else {
                if room_width/2 < x {
                    moveleft = 1
                    moveright=0
                }
                else {
                    moveright = 1
                    moveleft = 0
                }
            } 
        }
        if cos(timer*pi) >= 0.8 && temp != -1
            after_image(4,c_ltgray,0.6)
        if temp>0 {
            if abs(hspeed) < temp && temp > 0 && !collision_point(x + 1*(1-facing*2),y,obj_wall,1,0)
            hspeed += 0.035*(temp-facing*temp*2)
            //if !(collision_point(x,y,obj_platform,0,1) && !collision_point(x,y,obj_floor,0,1)) {
                //gravity=grav*GRAV_MUL
                //temp=-1
                //hspeed*=0.65
                //}
            if attack_success=0 && speed >= 0.8*temp && temp != -1 && !instance_exists(hitbox) {
                attacks-=1
                create_hitbox(6+abs(hspeed)/3,35+facing*110,abs(hspeed)*1.5,0.1,6,7,kick3,obj_spark_hit4,0.9,0.6,16,10,self.id,8,4);
                create_hitbox2(6+abs(hspeed)/3,35+facing*110,abs(hspeed)*1.5,0.1,6,7,kick3,obj_spark_hit4,0.9,0.6,-6,10,self.id,8,4);
		        bikespike = create_hitbox3(8+abs(hspeed)/3,270,abs(hspeed)*1.5,3.5,10,8,kick3,obj_spark_hit4,1.8,0.1,0,-1,self.id,8,4);
            }
        }           
    }
if moveleft = 1 && facing = 0 && air = 0 {
    moveright=0
    facing=1
    attack_success=0
    sound_play(sideb_zoom_sound)
    hspeed*=0.55
 }
if moveright = 1 && facing = 1 && air = 0{
    moveleft=0
    facing=0
    attack_success=0
    sound_play(sideb_zoom_sound)
    hspeed*=0.55
 }
if ( movejump == 1 && temp > 0 && timer > 20 && timer < 280 && air != 0 )
  {
  timer = 290;
  cantsideb = 1;
  with ( hitbox ) instance_destroy();
  vspeed = -mid_jump_speed;
  sprite_index = sideb_start_sprite
  image_speed = 0
  image_index = 2
  }
if timer <= 280 && (timer = 280 || shieldup = 1 || (special = 1 && temp > 0 && timer > 20) || (ai && (offstage || ai_state = "recover"))) {
    temp = -1
    dontrepeat = 0;
    sprite_index = sideb_start_sprite
    image_speed = 0
    image_index = 2
    hspeed*= 0.8
    sound_play(stop_sound)
    timer = 281
}

if ( timer = 284 )
{
image_index = 1;
}

if ( timer = 288 )
{
image_index = 0;
}

if (timer > 280 && temp = -1){
hspeed = 0.5 - facing*1
}

 if (timer >= 10 && self.y + 1 < target.y){
if (attack_success || target.object_index == obj_enemy) && obj_score_control.stocks[target.number-1] == 1 && ( dontrepeat = 0 && target.offstage){
				if ((target.weight <= .22 && target.percent > 30) || (target.weight > .22 && target.weight < .3 && target.percent > 40) || (target.weight > .3 && target.percent > 50)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.055;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 100
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
				dontrepeat = 1;
				}
				}
        
  }	   
if timer >= time-2 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    if air > 0
	{
    dontrepeat = 0;
	state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 3;
	}
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}
        
