if ( time == -1 )
  {
	hspeed = 0;
	state_type = "attack";
	attack_type = "dthrow";
	image_speed = 0;
	sprite_index = dthrow_sprite;
	image_index = 0;
	timer = 0;
	time = 50;
	timer_speed = 1;
	target.timer_speed = 0;
	target.alarm[0] = 50
  }

if ( timer < time )
  {
	switch ( timer )
	  {
		case 2: image_index = 1; break;
		case 4: image_index = 2; break;
		case 6: shakey = -1 - ( ( target.actual_height / 5 ) * target.size ) * size; image_index = 3; break;
		case 8: shakey = -2 - ( ( target.actual_height / 4 ) * target.size ) * size; image_index = 4; break;
		case 10: shakey = -3 - ( ( target.actual_height / 3 ) * target.size ) * size; image_index = 5; break;
		case 12: image_index = 6; break;
		case 14: image_index = 7; break;
		case 16: image_index = 8; break;
		case 18: image_index = 9; break;
		case 20: image_index = 10; break;
		case 22: image_index = 11; break;
		case 24: image_index = 12; break;
		case 26: shakey = -4 - ( ( target.actual_height / 3 ) * target.size ) * size; image_index = 13; break;
		case 28: shakey = -5 - ( ( target.actual_height / 3 ) * target.size ) * size; image_index = 14; break;
		case 30: image_index = 15; break;
		case 32: shakey = -4 - ( ( target.actual_height / 3 ) * target.size ) * size; image_index = 16; break;
		case 34: shakey = -3 - ( ( target.actual_height / 3 ) * target.size ) * size; image_index = 17; break;
		case 36: shakey = -2 - ( ( target.actual_height / 4 ) * target.size ) * size; image_index = 18; break;
		case 38: shakey = -1 - ( ( target.actual_height / 5 ) * target.size ) * size; image_index = 19; break;
		case 40: shakey = 0; image_index = 20; break;
		case 42: image_index = 21; break;
		case 44: image_index = 22; break;
		case 46: image_index = 23; break;
		case 48: image_index = 24; break;
	  }
	if ( timer <= 18 )
	  {
		target.x = x + 10 * size * (1-facing*2);
		target.y = y;
	  }
	if ( timer = 10 )
		play_attack_voice();
	if ( timer = 18 )
	  {
		percent += 3;
		spark = instance_create ( x - 2 * ( 1 - facing * 2 ) * size , y - 10 - ( ( target.actual_height / 3 ) * target.size ) * size , obj_spark );
		spark.sprite_index = b_spark_sprite;
		spark.image_xscale = 0.5 * size;
		spark.image_yscale = spark.image_xscale;
		spark.image_speed = 0.25;
		sound_play(electric_sound);
		create_hitbox(6,90,2,0,1,8,shock2,obj_spark_shock,0.75,0.75,11,12,self.id,1,5);
	  }
    if ( timer = 19 )
	  {
        create_throw_box(5,20+facing*140,5.7,2.85,1,1,-1,obj_spark_hit2,0.75,0.75,11,12,self.id,1);
        hitbox.hit_stun = 10;
        hitbox.di = 1.2; 
	  }
  }

if ( timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" )
  {
	attack_type = "none";
	state_type = "stand";
	timer = 0;
	time = 1;
  }