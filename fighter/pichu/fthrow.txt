if ( time == -1 )
  {
	hspeed = 0;
	state_type = "attack";
	attack_type = "fthrow";
	image_speed = 0;
	image_index = 0;
	sprite_index = fthrow_sprite;
	timer = 0;
	time = 53;
	timer_speed = 1;
	target.timer_speed = 0;
	target.alarm[0] = 90;
  }

if ( timer < time )
  {
	switch ( timer )
	  {
		case 2: image_index = 1; break;
		case 4: image_index = 2; break;
		case 6: shakex = -5 * size * ( 1 - facing * 2 ); image_index = 3; break;
		case 8: shakex = -15 * size * ( 1 - facing * 2 ); image_index = 4; break;
		case 10: shakex = -30 * size * ( 1 - facing * 2 ); image_index = 5; break;
		case 12: shakex = -45 * size * ( 1 - facing * 2 ); image_index = 6; break;
		case 14: image_index = 7; break;
		case 16: image_index = 8; break;
		case 18: image_index = 9; break;
		case 20: image_index = 10; break;
		case 22: shakex = -40 * size * ( 1 - facing * 2 ); image_index = 11; break;
		case 24: shakex = -35 * size * ( 1 - facing * 2 ); image_index = 12; break;
		case 26: shakex = -20 * size * ( 1 - facing * 2 ); image_index = 13; break;
		case 28: shakex = -15 * size * ( 1 - facing * 2 ); image_index = 14; break;
		case 30: shakex = -5 * size * ( 1 - facing * 2 ); image_index = 15; break;
		case 32: shakex = 0; image_index = 16; break;
		case 34: image_index = 17; break;
		case 36: image_index = 18; break;
		case 38: image_index = 19; break;
		case 40: image_index = 20; break;
		case 42: image_index = 21; break;
		case 44: image_index = 22; break;
		case 46: image_index = 23; break;
		case 48: image_index = 24; break;
		case 50: image_index = 25; break;
		case 52: image_index = 26; break;
	  }
	state_type = "attack";
	if ( timer <= 1 )
	  {
		target.x = x + 4 * size * (1-facing*2);
		target.y = y;
	  }
	if ( timer >= 2 && timer <= 3 )
	  {
		target.x = x - 2 * size * (1-facing*2);
		target.y = y;
	  }
	if ( timer >= 4 && timer <= 5 )
	  {
		target.x = x - 6 * size * (1-facing*2);
		target.y = y;
	  }
	if ( timer = 6 )
	  {
		play_attack_voice();
		sound_play(upb_sound);
		percent += 1;
		create_projectile ( 2 , 0+facing*180 , 6 , 2 , 2 , 24 , shock2 , obj_spark_shock , 0.75 , 0.75 , -6 , 12 , self.id , 5 , no_script );
		target.techlock = 1
		proj.di = -1;
	  }
	if ( timer = 22 )
	  {
		sound_play(upb_sound);
		percent += .5;
	  }
	if ( timer = 28 )
		create_hitbox ( 5 , 30+facing*120 , 6.4 , 5.2 , 2 , 6 , punch2 , obj_spark_hit2 , 0.75 , 0.75 , -6 , 12 , self.id , 1 , 1 );
	if ( proj.hit > 0 )
	  {
		with ( proj ) instance_destroy();
	  }
  }


  
          if (timer >= 28){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 150)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

if ( timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" )
  {
	dontrepeat = 0;
	attack_type = "none";
	state_type = "stand";
	timer = 0;
	time = -1;
  }