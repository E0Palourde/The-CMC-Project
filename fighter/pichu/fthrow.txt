if ( time == -1 )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "fthrow";
  image_speed = 0;
  image_index = 0;
  sprite_index = land_sprite;
  timer = 0;
  time = 30;
  temp = 0;
  timer_speed = 1;
  target.timer_speed = 0;
  target.alarm[0] = 50;
  }
if ( timer <= 5 )
{
target.x = x + 10 * size * (1-facing*2);
target.y = y;
}
if ( timer == 16 ) hspeed = 0;
if ( timer == 23 )
  {
    after_image ( 7 , c_aqua , 0.8 );
    after.sprite_index = b_spark_sprite;
    after.x += -3 + random ( 7 );
    after.y -= 12 * size * ysize;
    after.y += -3 + random ( 7 );
    after.depth = depth - 2;
    after.image_xscale *= 1.4 + random ( 0.4 );
    after.image_yscale *= 1.4 + random ( 0.4 );
    after.image_angle = random ( 360 );
    after.script = char_custom2;
    after_image ( 7 , c_aqua , 0.8 );
    after.sprite_index = b_spark_sprite;
    after.x += -3 + random ( 7 );
    after.y -= 12 * size * ysize;
    after.y += -3 + random ( 7 );
    after.depth = depth - 2;
    after.image_xscale *= 1.4 + random ( 0.4 );
    after.image_yscale *= 1.4 + random ( 0.4 );
    after.image_angle = random ( 360 );
    after.script = char_custom2;
  }
if ( timer >= 7 && timer < 23 )
  {
  temp += 18;
  if ( timer < 16 )
    hspeed = lengthdir_x ( 10 , temp ) * ( 1 - facing * 2 );
  after_image ( 6 , c_aqua , .8 );
  after.alpha_add = -1/6;
  after.sprite_index = b_spark_sprite;
  after.x += -3 + random ( 7 );
  after.y -= 12 * size * ysize;
  after.y += -3 + random ( 7 );
  after.depth = depth - 2;
  after.image_xscale *= 1.4 + random ( 0.4 );
  after.image_yscale *= 1.4 + random ( 0.4 );
  after.image_angle = random ( 360 );
  after.angle_add = -40 + random ( 81 );
  after_image ( 4 , c_aqua , .8 );
  after.alpha_add = -1/4;
  after.sprite_index = b_spark_sprite;
  after.x += -3 + random ( 7 );
  after.y -= 12 * size * ysize;
  after.y += -3 + random ( 7 );
  after.depth = depth - 2;
  after.image_xscale *= 1.4 + random ( 0.4 );
  after.image_yscale *= 1.4 + random ( 0.4 );
  after.image_angle = random ( 360 );
  after.angle_add = -40 + random ( 81 );
  after_image ( 2 , c_aqua , .8 );
  after.alpha_add = -1/2;
  after.sprite_index = b_spark_sprite;
  after.x += -3 + random ( 7 );
  after.y -= 12 * size * ysize;
  after.y += -3 + random ( 7 );
  after.depth = depth - 2;
  after.image_xscale *= 1.4 + random ( 0.4 );
  after.image_yscale *= 1.4 + random ( 0.4 );
  after.image_angle = random ( 360 );
  after.angle_add = -40 + random ( 81 );
  }

if ( timer < time )
  {
  state_type = "attack";
  if ( timer == 6 )
    {
    after_image ( 7 , c_aqua , 0.8 );
    after.sprite_index = b_spark_sprite;
    after.x += -3 + random ( 7 );
    after.y -= 12 * size * ysize;
    after.y += -3 + random ( 7 );
    after.depth = depth - 2;
    after.image_xscale *= 1.4 + random ( 0.4 );
    after.image_yscale *= 1.4 + random ( 0.4 );
    after.image_angle = random ( 360 );
    after.script = char_custom2;
    after_image ( 7 , c_aqua , 0.8 );
    after.sprite_index = b_spark_sprite;
    after.x += -3 + random ( 7 );
    after.y -= 12 * size * ysize;
    after.y += -3 + random ( 7 );
    after.depth = depth - 2;
    after.image_xscale *= 1.4 + random ( 0.4 );
    after.image_yscale *= 1.4 + random ( 0.4 );
    after.image_angle = random ( 360 );
    after.script = char_custom2;

    after_image ( 7 , c_aqua , 0.8 );
    after.sprite_index = b_spark_sprite;
    after.x += -3 + random ( 7 );
    after.y -= 12 * size * ysize;
    after.y += -3 + random ( 7 );
    after.depth = depth - 2;
    after.image_xscale *= 1.4 + random ( 0.4 );
    after.image_yscale *= 1.4 + random ( 0.4 );
    after.image_angle = random ( 360 );
    after_image ( 7 , c_aqua , 0.8 );
    after.sprite_index = b_spark_sprite;
    after.x += -3 + random ( 7 );
    after.y -= 12 * size * ysize;
    after.y += -3 + random ( 7 );
    after.depth = depth - 2;
    after.image_xscale *= 1.4 + random ( 0.4 );
    after.image_yscale *= 1.4 + random ( 0.4 );
    after.image_angle = random ( 360 );
    after_image ( 7 , c_aqua , 0.8 );
    after.sprite_index = b_spark_sprite;
    after.x += -3 + random ( 7 );
    after.y -= 12 * size * ysize;
    after.y += -3 + random ( 7 );
    after.depth = depth - 2;
    after.image_xscale *= 1.4 + random ( 0.4 );
    after.image_yscale *= 1.4 + random ( 0.4 );
    after.image_angle = random ( 360 );
    sound_play(electric_sound);
    percent += 1;
    create_throw_box ( 999 , 30+facing*120 , 300,300 , 0 , 30 , shock2 , obj_spark_shock , 0.53 , 0.84 , 10 , 12 , self.id , 1 , 1 );
    }
  }

if ( timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  attack_type = "none";
  state_type = "stand";
  timer = 0; time = -1;
  }