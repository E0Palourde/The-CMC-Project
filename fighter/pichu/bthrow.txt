if time = -1{
hspeed = 0;
state_type = "attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = bthrow_sprite;
image_index = 0;
timer = 0;
time = 68;
target.alarm[0] = 90
timer_speed = 1;
target.timer_speed = 0;
}

if timer < time {
switch ( timer )
{
case 2: image_index = 1; break;
case 4: image_index = 2; break;
case 6: image_index = 3; break;
case 8: image_index = 4; break;
case 10: image_index = 5; break;
case 12: image_index = 6; break;
case 14: image_index = 7; break;
case 16: image_index = 8; break;
case 18: image_index = 9; break;
case 20: image_index = 10; break;
case 22: image_index = 11; break;
case 24: image_index = 12; break;
case 26: image_index = 13; break;
case 28: image_index = 14; break;
case 30: image_index = 15; break;
case 32: image_index = 16; break;
case 34: image_index = 17; break;
case 36: image_index = 18; break;
case 38: image_index = 19; break;
case 40: image_index = 20; break;
case 42: image_index = 21; break;
case 44: image_index = 22; break;
case 46: image_index = 23; break;
case 48: image_index = 24; break;
case 50: image_index = 25; break;
case 52: image_index = 26; break;
case 54: image_index = 27; break;
case 56: image_index = 28; break;
case 58: image_index = 29; break;
case 60: image_index = 30; break;
case 62: image_index = 31; break;
case 64: image_index = 32; break;
case 66: image_index = 33; break;
}
if ( timer <= 3 )
{
target.x = x + 5 * size * (1-facing*2);
target.y = y;
}
if ( timer >= 4 && timer <= 6 )
{
target.x = x + 3 - facing*6 * size;
target.y = y - 3 * size;
}
if ( timer >= 7 && timer <= 9 )
{
target.x = x + 1 - facing*2 * size;
target.y = y - 6 * size;
}
if timer > 13 && timer < 46 && (collision_point(x-3*size*(1-facing*2),y+1,obj_floor,1,1) || collision_point(x-3*size*(1-facing*2),y+1,obj_platform,1,1) || collision_point(x-3*size*(1-facing*2),y+1,obj_slope_right2,1,1) || collision_point(x-3*size*(1-facing*2),y+1,obj_slope_left2,1,1)) {
hspeed = -1.8*size*(1-facing*2)
}
if timer = 10 || timer = 18 || timer = 26 || timer = 34 || timer = 42 {
sound_play(spin_sound)
}
if timer = 10 || timer = 11 || timer = 26 || timer = 27 || timer = 42 || timer = 43 {
target.x = x-3+facing*6 * size;
target.y = y-10 * size;
}
if timer = 24 || timer = 25 || timer = 40 || timer = 41 {
target.x = x+4-facing*8 * size;
target.y = y-10 * size;
}
if timer = 12 || timer = 13 || timer = 28 || timer = 29 {
target.x = x-10+facing*20 * size;
target.y = y-9 * size;
}
if timer = 14 || timer = 15 || timer = 30 || timer = 31 {
target.x = x-10+facing*20 * size;
target.y = y-4 * size;
}
if timer = 16 || timer = 32 || timer = 33 {
target.x = x-5+facing*10 * size;
target.y = y-1 * size;
}
if timer = 18 || timer = 19 || timer = 34 || timer = 35 {
target.x = x+1-facing*2 * size;
target.y = y-1 * size;
}
if timer = 20 || timer = 21 || timer = 36 || timer = 37 {
target.x = x+4-facing*8 * size;
target.y = y-4 * size;
}
if timer = 22 || timer = 23 || timer = 38 || timer = 39 {
target.x = x+6-facing*12 * size;
target.y = y-7 * size;
}
if timer = 44 {
target.x = x
target.y = y-14 * size;
play_attack_voice()
target.gethit = 0
create_throw_box(8,155-facing*130,6.9,4.75,1,1,-1,obj_spark_hit2,0.6,0.6,0,13,self.id,3);
throw_box.hit_stun = 7;
hspeed=0
hitbox.shake_kb = 3*size
hitbox.shake_ampl = 1.1
}
}

  if (timer >= 44){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 150)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
dontrepeat = 0
attack_type = "none";
state_type = "stand";
timer = 0;
time = -1;
}
        