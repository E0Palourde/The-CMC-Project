if state_type = "jump" {
    state_type = "air_attack";
    attack_type = "uair";
    image_speed = 0;
    sprite_index = uair_sprite;
    image_index = 0;
    timer = 0;
    time = 23;
    timer_speed = 1;
}

if timer < time {
	// Animate Sprite
    switch (timer) {
        case 4:
            image_index = 1;
            break;
        case 6:
            image_index = 2;
            break;
        case 8:
            image_index = 3;
            break;
        case 10:
            image_index = 4;
            break;
        case 12:
            image_index = 5;
            break;
        case 15:
            image_index = 6;
            break;
        case 17:
            image_index = 7;
            break;
        case 19:
            image_index = 8;
            break;
        case 21:
            image_index = 9;
            break;
    }
	
	// Animate VFX
	switch (timer){
		case 4: 
			blur = create_itmpnt_blur(/*Attacker*/self.id, /*Texture*/blur_texture, /*Start frame*/1, /*Apex Frame*/3, /*End frame*/6, /*CCW*/0, /*girth*/7.5, 15); 
			blur.index = 0;
			blur.image_index = 0;
			blur.v_squish = 1;
			blur.push_x = 1 * size * (1-facing*2);
			break;
		case 5: blur.index = 0.5; blur.image_index = 1; break;
		case 6: blur.index = 1; blur.image_index = 2; break;
		case 7: blur.index = 1.5; blur.image_index = 3; break;
		case 8: blur.index = 2; break;
		case 9: blur.index = 2.5; break;
		case 10: blur.index = 3; break;
		case 11: blur.index = 3.5; break;
		case 12: blur.index = 4; break;
		case 13: blur.index = 4.33; break;
		case 14: blur.index = 4.66; break;
		case 15: blur.index = 5; blur.image_index = 4; break;
		case 16: blur.image_index = 5; break;
		case 17: 
			with (blur){
				instance_destroy();
			}
			break;
	}

    if (timer = 4) {
        sound_play(tail_sound);
        create_hitbox(8, 75 + facing * 30, 5.15, 3.65, 12, 3, slap_m, obj_spark_hit2, 0.56, 0.43, -8.40, 11.20, self.id, 10, 1);
        hitbox.hit_stun = 9;
        hitbox.shield_stun = 3;
    }
    if (timer = 6) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * -5.60
        hitbox.hitbox_y = size * 14
        hitbox.image_xscale = size * 0.60
        hitbox.image_yscale = size * 0.48
    }
    if (timer = 8) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * 1.40
        hitbox.hitbox_y = size * 19.60
        hitbox.image_xscale = size * 0.61
        hitbox.image_yscale = size * 0.67
    }
    if (timer = 10) {
        hitbox.damage = 6;
        hitbox.bkb = 4.35;
        hitbox.hitbox_x = 1 - facing * 2;
        hitbox.hitbox_y = 14;
        hitbox.shield_damage = 8;
        hitbox.hitlag_frames = 2;
        hitbox.sfx = slap_s;
        hitbox.hitbox_x = size * (1 - (facing * 2)) * 9.80
        hitbox.hitbox_y = size * 18.20
        hitbox.image_xscale = size * 0.59
        hitbox.image_yscale = size * 0.63
        hitbox.image_angle = (1 - facing * 2) * 324.20
    }
    if (timer = 12) {
        hitbox.hitbox_x = size * (1 - (facing * 2)) * 14
        hitbox.hitbox_y = size * 7
        hitbox.image_xscale = size * 0.57
        hitbox.image_yscale = size * 0.43
        hitbox.image_angle = 0
    }


    if (air = 0) {
        state_type = "land";
        sprite_index = land_sprite;
        attack_type = "none";
        timer = 0;
        time = 8;
    }

}

if timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" {
    state_type = "jump";
    attack_type = "none";
    sprite_index = jump_sprite;
    image_index = 24;
    timer = 0;
    time = -1;
}