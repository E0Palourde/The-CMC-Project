if state_type = "jump"  {
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair_sprite;
        image_index=1;
        timer = 0;
        time = 40;
        timer_speed=1;
		temp = 0;
		attacking = 0;
		smash = 0;
}
if timer < time {
	switch ( timer )
      {
		case 1: image_index = 2; break;
		case 2: image_index = 3; break;
		case 3: image_index = 4; break;
		case 4: image_index = 6; break;
		case 5: image_index = 7; break;
		case 7: image_index = 8; break;
		case 9: image_index = 9; break;
		case 11: image_index = 10; break;
		case 13: image_index = 11; break;
		case 15: image_index = 12; break;
		case 17: image_index = 13; break;
		case 19: image_index = 14; break;
		case 21: image_index = 15; break;
		case 23: image_index = 16; break;
		case 25: image_index = 17; break;
		case 27: image_index = 18; break;
		case 29: image_index = 19; break;
		case 31: image_index = 20; break;
		case 33: image_index = 21; break;
		case 35: image_index = 22; break;
		case 36: image_index = 23; break;
		case 37: image_index = 24; break;
		case 38: image_index = 25; break;
		case 39: image_index = 26; break;
		
		case 102: image_index = 1; break;
		case 104: image_index = 2; break;
		case 106: image_index = 3; break;
		case 108: image_index = 4; break;
		case 113: image_index = 5; break;
		case 115: image_index = 6; break;
		case 117: image_index = 7; break;
		case 119: image_index = 8; break;
		case 121: image_index = 9; break;
		case 123: image_index = 10; break;
		case 125: image_index = 11; break;
		case 126: image_index = 12; break;
		case 128: image_index = 13; break;
		case 130: image_index = 14; break;
		case 132: image_index = 15; break;
		case 134: image_index = 16; break;
		case 135: image_index = 17; break;
		case 136: image_index = 18; break;
		case 137: image_index = 19; break;
		case 136: image_index = 20; break;
		case 137: image_index = 21; break;
		case 138: image_index = 22; break;
		case 139: image_index = 23; break;
		case 140: image_index = 24; break;
		case 141: image_index = 25; break;
		case 142: image_index = 26; break;
	  }
	  
	  // Animate VFX
	  switch (timer){
		  case 104: 
			blur = create_itmpnt_blur(/*Attacker*/self.id, /*Texture*/blur_texture, /*Start frame*/2, /*Apex Frame*/7, /*End frame*/10, /*CCW*/0, /*girth*/7.5, 15); 
			blur.image_index = 0; break;
		  break;
		  case 105: blur.index = 0.5; blur.image_index = 1; break;
		  case 106: blur.index = 1; break;
		  case 107: blur.index = 1.5; blur.image_index = 2; break;
		  case 108: blur.index = 2; blur.image_index = 3; 	break;
		  case 109: case 110: case 111: case 112: blur.index += (1/5); break;
		  case 113: blur.index = 3; 	break;
		  case 114: blur.index = 3.5; 	break;
		  case 115: blur.index = 4; 	break;
		  case 116: blur.index = 4.5; 	break;
		  case 117: blur.index = 5; 	break;
		  case 118: blur.index = 5.5; 	break;
		  case 119: blur.index = 6; 	break;
		  case 120: blur.index = 6.5; 	break;
		  case 121: blur.index = 7; blur.image_index = 4;	break;
		  case 122: blur.index = 7.5; 	break;
		  case 123: blur.index = 8;  break;
		  case 124: blur.image_index = 5; break;
		  case 125:
			with (blur) {
				instance_destroy();
			}
	  }
            if timer = 5
				{
                play_attack_voice();
                sound_play(electric_sound);
                instance_create(x+14-facing*28,y-24,obj_spark_effect2)
                create_hitbox(2,60+facing*60,1.8,0,5,3,shock2,obj_spark_shock,0.89 , 0.57 , 4.90 , 3.50,self.id,3,3);
				spark = instance_create( x - 1.5 * (1-facing*2) * size, y - 3 * size,obj_spark)
				spark.sprite_index = global.electricity_spark
				spark.image_index = 0;
				spark.image_xscale = 0.3 * (1-facing*2) * size;
				spark.image_yscale = 0.3 * size;
				spark.image_speed = 0.5;
                spark.image_alpha = 0.9;
				spark.snap = self.id;
                hitbox.di = 0.7;
				}
			if ( timer >= 5 && timer <= 29 && spark.image_index > 8 )
			{
			spark.image_index = 0
			}
			if ( timer = 30 )
			{
			with ( spark )
				{
				instance_destroy();
				}
			}

            if timer = 8 || timer = 11 || timer = 15 || timer = 19
				{
                create_hitbox(2,60+facing*60,2,0,4,3,shock2,obj_spark_shock,0.89 , 0.57 , 4.90 , 3.50,self.id,3,3);
                hitbox.di = 0.7
				}
	    if timer >= 0 && timer <= 20 && ( movedown || attacking )
		{
		temp = 1;
		}
	    if timer = 21 && temp = 1
		{
	    timer = 100
	    time = 143
		sprite_index = fair_sprite2;
		image_index = 0
				with ( spark )
				{
				instance_destroy();
				}
		}
            if timer = 24 {
                create_hitbox(3,40+facing*100,5.3,4.7,6,7,shock2,obj_spark_shock,0.89 , 0.57 , 4.90 , 3.50,self.id,5,3);
		} 
            if (timer = 9 || timer = 12 || timer = 15 || timer = 19 || timer = 23) && attack_success = 1
				{
                target.x+=hspeed*.75
                target.y+=vspeed*1
                }

	    if timer = 107
		{
		vspeed -= 6;
		}
	    if timer = 109
		{
		sound_play(sideb_voice2);
		sound_play(attacksnd2);
		}
	    if ( timer = 113 )
		{
		create_hitbox(7,270,3.5,4.9,9,8,kick3,obj_spark_hit3,0.50 , 0.36 , -0.70 , 16.10,self.id,11,3);
		}
		if ( timer = 115 )
		{
		hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 2.80
		hitbox.hitbox_y = size * 18.20
		hitbox.image_xscale = size * 0.47
		hitbox.image_yscale = size * 0.37
		}
		if ( timer = 117 )
		{
		hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 11.20
		hitbox.hitbox_y = size * 18.90
		hitbox.image_xscale = size * 0.55
		hitbox.image_yscale = size * 0.39
		hitbox.image_angle = ( 1 - facing * 2 ) * 30.96
		}
		if ( timer = 119 )
		{
		hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14
		hitbox.hitbox_y = size * 14.70
		hitbox.image_xscale = size * 0.66
		hitbox.image_yscale = size * 0.42
		hitbox.image_angle = ( 1 - facing * 2 ) * 7.43
		}
		if ( timer = 121 )
		{
	    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 17.50
		hitbox.hitbox_y = size * 10.50
		hitbox.image_xscale = size * 0.79
		hitbox.image_yscale = size * 0.49
		hitbox.image_angle = 0;
		}
		if ( timer = 123 )
		{
		hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 13.30
		hitbox.hitbox_y = size * 4.90
		hitbox.image_xscale = size * 0.61
		hitbox.image_yscale = size * 0.40
		}

	    if timer = 5 || timer = 20 || timer = 35
		{
		percent += 1
		}
            if air = 0
				{
                state_type="land";
                attack_type="none";
				vspeed=0;
                sprite_index = land_sprite;
                timer=0;
                time=7;
				with ( spark )
				{
				instance_destroy();
				}
				}
        }


          if (timer >= 113){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0) && target.offstage{
				if ((target.weight <= .22 && target.percent > 50) || (target.weight > .22 && target.weight < .3 && target.percent > 60) || (target.weight > .3 && target.percent > 75)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

		
if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0
	state_type = "jump";
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 24;
    timer = 0;
    time = -1;
  }