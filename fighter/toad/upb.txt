if (cant_upb == 1) exit;

fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump" && air < max_jumps {
    attacking = 0;
    special = 0;
    timer = 0;
    attack_type = "upb"
    if air = 0 {
        state_type = "air_attack";
        hspeed = 0;
         }
    else {
        state_type = "air_attack";
        }
		create_hurtbox_precise(self.id, 45, upb_mask)
        image_speed = 0;
        sprite_index = upb_sprite;
        image_index=0;

        time = 72;
        timer_speed=1;
        if moveright = 1 facing = 0
        if moveleft = 1 facing = 1
	temp = 0;
	drilltemp = 0;
}
        if timer < time {
switch ( timer ) {
	case 2:  image_index = 1; break;	
	case 3:  image_index = 2; break;
	case 4:  image_index = 3; break;
	case 5:  image_index = 4; break;
	case 7:  image_index = 5; break;
	case 9:  image_index = 6; break;
	case 11:  image_index = 7; break;
	case 13:  image_index = 8; break;
	case 15:  image_index = 9; break;
	case 17:  image_index = 10; break;
	case 19:  image_index = 11; break;
	case 21:  image_index = 12; break;
	case 23:  image_index = 5; break;
	case 25:  image_index = 6; break;
	case 27:  image_index = 7; break;
	case 29:  image_index = 8; break;
	case 31:  image_index = 9; break;
	case 33:  image_index = 10; break;
	case 35:  image_index = 11; break;
	case 37:  image_index = 12; break;

	}
	if timer > 25
	force_edge_grab = 1
          
            if timer < 7 {
                vspeed = 0
                gravity = 0 }
            if timer = 7 {
                duster = instance_create ( x , y , obj_dust_effect_bold );
                duster.image_xscale *= 1 * size;
                duster.image_yscale *= 1 * size;
                duster.facing = facing;
                sound_play(upb_voice);
                sound_play(upb_sound);
                create_hitbox(3,70+facing*40,6.1,0.1,6,3,slash1,obj_spark_slash2,0.65,0.75,0,21,self.id,3,3);
                hitbox.di = 0.2;
                hitbox.weight_kb = 1;
                hspeed = 2 * size * ( 1 - facing * 2 );
                vspeed = -4.6 * size;
                }
            if timer = 11 || timer = 15 || timer = 19 || timer = 23 || timer = 27 || timer = 31 {
                create_hitbox(1,60+facing*60,5.5-timer/30,0,4,3,slash1,obj_spark_slash2,0.65,0.75,0,21,self.id,3,2);
                hitbox.di = 0.2;
				hitbox.sdi = 0;
                hitbox.weight_kb = 1;
                hspeed = 1.5 * size * ( 1 - facing * 2 );
                vspeed = (-4.9+timer/27)*size;
                }
	    if timer > 25
		force_edge_grab = 1;
            if timer = 35 {
                 create_hitbox(4,90,6.2,3.8,7,6,slash2,obj_spark_slash2,0.65,0.75,0,21,self.id,4,3);
                 vspeed = -3.5 * size;
                 sprite_index = upb_rise_sprite
				 with(hurtbox)
					instance_destroy()
				 create_hurtbox_precise(self.id, 45, upb_rise_mask)
            }
            if timer > 39 && timer < 54 {
                air_move = 1
                if vspeed > 0.65 * size
                    vspeed = 0.65 * size;
                    image_blend = c_white
                if timer >= 53
				{
					with(hurtbox)
						instance_destroy()
					create_hurtbox_precise(self.id, 45, upb_rise_mask)
                    timer = 40
				}
				if hspeed > air_speed*0.75
                    hspeed = air_speed*0.75
                if hspeed < -air_speed*0.75
                    hspeed = -air_speed*0.75
            }

if timer > 9 && ( movedown || ( ai && ( !offstage || ( ( ( x > nearest_edge.x && facing = 0 ) || ( x < nearest_edge.x && facing = 1 ) ) && y < nearest_edge.y ) ) ) ) && state_type != "flinch" && state_type != "air_flinch" {
 create_hitbox(0.5,270,5,0,3,1,punch3,obj_spark_hit3,0.75,0.75,0,-7,self.id,2,3);
 hitbox.di = 0.2;
 hitbox.sdi = 0;
                 image_speed=1.2
    sprite_index = upb_fall_sprite;
	with(hurtbox)
		instance_destroy()
	create_hurtbox_precise(self.id, 45, upb_fall_mask)
	fallhurtboxtemp=1
	vspeed = 6 * size;
	hspeed=0
	if (timer < 40) timer = 40;
	temp = 1;
        if ( drilltemp = 0 )
        {
          sound_play(upbdrill_sound);
          drilltemp = 1;
        }
} 
if timer > 39 && !movedown
{
if fallhurtboxtemp=1 && instance_exists(hurtbox)
{
	sprite_index = upb_rise_sprite
	create_hurtbox_precise(self.id, 45, upb_rise_mask)
	fallhurtboxtemp=0
}
image_speed = 0.3
if ( drilltemp = 1 )
{
  sound_stop(upbdrill_sound);
  drilltemp = 0;
}
}
if (movejump && timer > 39 && timer < 54) {
		vspeed = -6.7 * size;
		air += 1;
		state_type = "jump";
		attack_type = "none";
		timer = 0;
		time = -1;
		cant_upb = 1;
		sound_play(jump_sound);
		spark = instance_create ( x , y , obj_spark_shockwave );
		spark.image_xscale *= 0.6*size;
		spark.image_yscale *= 0.08*size;
		spark.image_alpha = 0.5;
		spark = instance_create ( x , y , obj_spark_shockwave );
		spark.image_xscale *= 0.4*size;
		spark.image_yscale *= 0.05*size;
		spark.image_alpha = 0.7;
		spark = instance_create(x,y-23*size,obj_spark)
		spark.sprite_index = upb_hat_sprite
		spark.image_speed = 0.3
		spark.image_xscale = size*xsize
		spark.image_yscale = spark.image_xscale
		spark.vspeed = -2 * size
		spark.number = -number
		exit;
	} 
	
if air = 0 && timer >= 39 {
with hitbox instance_destroy();
			create_hitbox2(5,362,3.5,1.4,15,4,slash2,obj_spark_slash1,1.5,0.8,5,10,self.id,4,1);
			
    state_type="land";
    attack_type="none";
    sprite_index = land_sprite;
    image_index = 0
    image_speed = 0.2
    timer=0;
    time=24; 
 
    hspeed = 0; 
    spark = instance_create(x,y-23*size,obj_spark)
    spark.sprite_index = upb_hat_sprite
    spark.image_speed = 0.3
    spark.image_xscale = size*xsize
    spark.image_yscale = spark.image_xscale
    spark.vspeed = -2 * size
    spark.number = -number
}
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
		cant_upb = 1;
		hspeed = 1 * size * ( 1 - facing * 2 );
        attack_type = "none";
        if air > 0
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
}
        