if state_type = "stand" || state_type = "run" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "usmash";
        image_speed = 0;
        sprite_index = downb_sprite;
        image_index = 1;
        timer = 0;
        time = 54;
        timer_speed = 1;
        charge_frame = 7;
	tower = create_spark ( 0 , 0 , usmash_effect_sprite , 0 , 0.75 * ( 1 - facing * 2 ) , 0.75 );
	tower.snap = self.id;
	tower.alarm[0] = 144;
}
        if timer < time {
            state_type = "attack";
			switch ( timer ) {
			case 3: image_index = 2; break;	
			case 6: image_index = 3; tower.image_index += 1; break;
			case 9: image_index = 4; tower.image_index += 1; break;
			case 12: image_index = 5; tower.image_index += 1; break;
			case 15: image_index = 6; tower.image_index += 1; break;
			case 18: sprite_index = dtilt_sprite; image_index = 5; tower.image_index += 1; break;	
			case 21: image_index = 6; tower.image_index += 1; break;
			case 24: sprite_index = crouch_sprite; image_index = 0; tower.image_index += 1; break;
			case 27: sprite_index = stand_sprite; break;
			case 36: tower.image_index += 1; break;
			case 39: tower.image_index += 1; break;	
			case 42: tower.image_index += 1; break;
			}
            if timer = 3
                instance_create(x+10-facing*20,y-20,obj_spark_effect)
            if timer = 12 {
                duster = instance_create ( x + 3 * size * ( 1 - facing * 2 ) , y + 1 * size , obj_dust_effect_bold );
                duster.image_xscale *= 0.6 * size;
                duster.image_yscale *= 0.8 * size;
                duster.facing = facing;
                duster.depth = tower.depth - 0.1;
                duster = instance_create ( x + 3 * size * ( 1 - facing * 2 ) , y + 1 * size , obj_dust_effect_bold );
                duster.image_xscale *= 0.6 * size;
                duster.image_yscale *= 0.8 * size;
                duster.facing = !facing;
                duster.depth = tower.depth - 0.1;
                sound_play(usmash_voice);
                sound_play(downb_sound);
                sound_play(attacksnd3);
                create_hitbox(16,90,5.8,7.8,19,10,punch3,obj_spark_hit4,0.85,0.9,3,16,self.id,10,2);
                hitbox.charge_kb = 0.9
            }
            if timer = 15 {
                sound_play(usmash_sound);
		hitbox.image_yscale = 0.7;
                hitbox.damage = 14;
                hitbox.bkb = 5.5;
                hitbox.kbg = 6.2;
                hitbox.shield_damage = 18;
                hitbox.hitlag_frames = 9;
                hitbox.gfx = obj_spark_hit3;
                hitbox.priority = 1
		hitbox.hitbox_y = 44 * size;
                create_hitbox2(8,90,5,5,10,6,punch2,obj_spark_hit3,0.85,1.1,3,14,self.id,7,1);
            }
        if timer = 18 {
                hitbox.damage = 12;
                hitbox.bkb = 4.5;
                hitbox.kbg = 5.6;
                hitbox.shield_damage = 18;
                hitbox.hitlag_frames = 9;
                hitbox.gfx = obj_spark_hit3;
                hitbox.priority = 1
		hitbox.hitbox_y = 64 * size;
		hitbox2.hitbox_y = 24 * size;
		hitbox2.image_yscale = 1.5;
            }
            if timer = 42 {
                sound_play(usmash_sound);
            }
	    if timer = 45 {
		if ( instance_exists ( tower ) )
		with ( tower ) { instance_destroy(); }
	    }
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }