if ( state_type = "stand" || state_type = "run" || state_type = "crouch" )
  {
    state_type = "attack";
    attack_type = "usmash";
    timer = 0;
    time = 90;
    sprite_index = dsmash_sprite;
    image_speed = 0;
    image_index = 0;
    charge_frame = 23;
    hspeed = 0;
	create_hurtbox_precise(self.id,90,dsmash_mask)
  }

if ( timer < time )
  {
if hitbox.hit > 0
chaostemp = 1
    switch ( timer )
      {
	case 1: image_index = 1; break;
	case 3: image_index = 2; break;
	case 5: image_index = 3; break;
	case 7: image_index = 4; break;
	case 8: image_index = 5; break;
	case 9: image_index = 6; break;
	case 10: image_index = 7; break;
	case 20: image_index = 8; break;
	case 21: image_index = 9; break;
	case 22: image_index = 10; break;
	case 23: image_index = 11; break;
	case 24: image_index = 12; break;
	case 25: image_index = 13; break;
	case 21: image_index = 14; break;
	case 21: image_index = 15; break;
	case 25: image_index = 16; break;
	case 32: image_index = 17; break;
	case 34: image_index = 18; break;
	case 36: image_index = 19; break;
	case 38: image_index = 20; break;
	case 40: image_index = 21; break;
	case 42: image_index = 22; break;
	case 44: image_index = 23; break;
	case 48: image_index = 24; break;
	case 50: image_index = 25; break;
	case 52: image_index = 22; break;
	case 54: image_index = 23; break;
	case 56: image_index = 24; break;
	case 58: image_index = 25; break;
	case 60: image_index = 26; break;
	case 62: image_index = 27; break;
	case 64: image_index = 28; break;
	case 66: image_index = 29; break;
	case 68: image_index = 30; break;
	case 80: image_index = 31; break;
	case 83: image_index = 32; break;
	case 86: image_index = 33; break;
      }
    if ( timer = 2 ) {
	sound_play(usmash_voice);
	sound_play(usmashprep_sound);
	}
    if timer >= 11 && timer < 21 {
	visible = 0
	intangible = 1
	}
    else {
	visible = 1
	intangible = 0
	}
    if ( timer = 25 )
      {
	instance_create(x,y-20*size,obj_spark_effect);
      }
    if ( timer = 25 )
      {
	burst = instance_create(x+10*(1-facing*2),y-14,obj_spark);
	burst.sprite_index = chaosburst_sprite;
	burst.image_xscale = 0.75*size
	burst.image_yscale = 0.75*size
	burst.image_alpha = 0.65
	burst.image_speed = 0.5
	burst.image_index = 0
	burst.alarm[0] = 25
	burst.depth = -6
	burst2 = instance_create(x+10*(1-facing*2),y-14,obj_spark);
	burst2.sprite_index = chaosburst_sprite2;
	burst2.image_xscale = 0.083*size
	burst2.image_yscale = 0.083*size
	burst2.image_speed = 0
	burst2.image_index = 0
	burst2.depth = -5
	burst2.snap = self.id
	burst2.alarm[0] = 20
	sound_play(psi_sound3);
	create_hitbox(15,90,5.6,7.15,60,8,magic3,obj_spark_darkness,1.53,1.53,2,19,self.id,20,5);
	hitbox.charge_dmg = 1.1;
	hitbox.charge_hitlag = 0.8;
	hitbox.shield_stun = 4.5;
	hitbox.shake_ampl = 0.45;
	  }
	if timer = 25 && chaosboost > 0 {
	sound_play(psi_sound3);
	create_hitbox(19,90,5.8,7.25,90,12,magic3,obj_spark_shock,1.55,1.55,2,19,self.id,20,5);
	hitbox.charge_dmg = 1.2;
	duster = instance_create(x+size*(9-facing*18),y,obj_dust_effect);
	duster.facing = 1-facing;
	duster.image_alpha = 0.75;
	duster.image_xscale *= 0.6*size;
	duster.image_yscale *= 0.4*size;
	duster = instance_create(x-size*(9-facing*18),y,obj_dust_effect);
	duster.facing = facing;
	duster.image_alpha = 0.75;
	duster.image_xscale *= 0.6*size;
	duster.image_yscale *= 0.4*size;
      }
	burst.x = x+2*(1-facing*2)
	burst.y = y-19*size
	burst2.x = x+2*(1-facing*2)
	burst2.y = y-19*size
	burst2.image_alpha -= 0.05
	burst2.image_xscale += 0.005*size
	burst2.image_yscale += 0.005*size
    if ( timer = 27 )
      {
	hitbox.damage = 15*size;
	hitbox.kbg = 6*size;
	hitbox.shield_damage = 22*size;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }