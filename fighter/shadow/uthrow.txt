if ( time = -1 )
  {
    state_type = "attack";
    attack_type = "uthrow";
    timer = 0;
    time = 45;
    sprite_index = uthrow_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    target.timer_speed = 0;
    target.alarm[0] = 60;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 5: image_index = 2; break;
	case 6: image_index = 3; break;
	case 7: image_index = 4; break;
	case 8: image_index = 5; break;
	case 9: image_index = 6; break;
	case 10: image_index = 7; break;
	case 11: image_index = 8; break;
	case 12: image_index = 9; break;
	case 13: image_index = 10; break;
	case 14: image_index = 11; break;
	case 15: image_index = 12; break;
	case 16: image_index = 13; break;
	case 17: image_index = 14; break;
	case 18: image_index = 15; break;
	case 19: image_index = 16; break;
	case 20: image_index = 17; break;
	case 22: image_index = 18; break;
	case 24: image_index = 14; break;
	case 26: image_index = 13; break;
	case 28: image_index = 12; break;
	case 42: image_index = 11; break;
      }
if timer > 17 && hitbox.hit
chaostemp = 1
	if ( timer <= 0 )
	{
	target.x = x + 15 * size * (1-facing*2);
	target.y = y;
	}
    if ( timer >= 2 && timer <= 5)
      {
	target.x = x + size * (15-facing*30);
	traget.y = y - 10*size;
      }
    if ( timer = 5 )
      {
	play_attack_voice();
	sound_play(swingsnd2);
	create_hitbox(5,361,5,0,8,5,kick2,obj_spark_hit4,0.5,0.75,16,17,self.id,1,5);
	hitbox.di = -1;
	instance_create(x+size*(20-facing*40),y-20*size,obj_spark_effect);
      }
    if ( timer = 6 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 5 *size;
	}
    if ( timer = 7 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 10 *size;
	}
    if ( timer = 8 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 15 *size;
	}
    if ( timer = 9 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 20 *size;
	}
    if ( timer = 10 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 25 *size;
	}
    if ( timer = 11 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 28 *size;
	}
    if ( timer = 12 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 31 *size;
	}
    if ( timer = 13 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 34 *size;
	}
    if ( timer = 14 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 37 *size;
	}
    if ( timer = 15 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 39 *size;
	}
    if ( timer = 16 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 41 *size;
	}
    if ( timer = 17 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 43 *size;
	}
    if ( timer = 18 )
	{
	target.x = x + size * (15-facing*30);
	target.y = y - 45 *size;
	}
    if timer = 18 {
	create_throw_box(1,90,2,0,1,1,-1,obj_spark_darkness,1,1,15,65,self.id,2);
	hitbox.di = -1
	}
    if timer = 20 {
	void = create_projectile(1,90,1,0,1,1,magic2,obj_spark_darkness,1,1,15,65,self.id,60,char_custom4);
	sound_play(downb_sound);
	void.hit = 2
	}
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }