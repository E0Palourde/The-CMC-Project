if ( state_type = "down" )
  {
    state_type = "attack";
    attack_type = "down_attack";
    timer = 1;
    time = 35;
    sprite_index = down_attack_sprite;
    image_speed = 0;
    image_index = 0;
	create_hurtbox_precise(self.id,36,down_attack_mask)

  }

if ( timer < time )
  {
if hitbox.hit > 0
chaostemp = 1
    switch ( timer )
      {
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 4: image_index = 3; break;
	case 5: image_index = 4; break;
	case 6: image_index = 5; break;
	case 7: image_index = 6; break;
	case 8: image_index = 7; break;
	case 10: image_index = 8; break;
	case 23: image_index = 14; break;
	case 27: image_index = 15; break;
	case 31: image_index = 16; break;
      }
    if timer = 2
	intangible = 1
    if ( timer = 12 )
      {
	burst = instance_create(x+10*(1-facing*2),y-14,obj_spark);
	burst.sprite_index = chaosburst_sprite;
	burst.image_xscale = 0.45*size
	burst.image_yscale = 0.45*size
	burst.image_speed = 1.3
	burst.image_index = 0
	burst.alarm[0] = 25
	burst.depth = 1
	burst2 = instance_create(x+10*(1-facing*2),y-14,obj_spark);
	burst2.sprite_index = chaosburst_sprite;
	burst2.image_xscale = 0.45*size
	burst2.image_yscale = 0.45*size
	burst2.image_speed = 1.3
	burst2.image_index = 0
	burst2.alarm[0] = 25
	burst2.depth = 1
	burst3 = instance_create(x+10*(1-facing*2),y-14,obj_spark);
	burst3.sprite_index = chaosburst_sprite2;
	burst3.image_xscale = 0.05*size
	burst3.image_yscale = 0.05*size
	burst3.image_speed = 0
	burst3.image_index = 0
	burst3.depth = 0
	burst3.snap = self.id
	burst3.alarm[0] = 8
	burst4 = instance_create(x+10*(1-facing*2),y-14,obj_spark);
	burst4.sprite_index = chaosburst_sprite2;
	burst4.image_xscale = 0.05*size
	burst4.image_yscale = 0.05*size
	burst4.image_speed = 0
	burst4.image_index = 0
	burst4.depth = 0
	burst4.snap = self.id
	burst4.alarm[0] = 8
	play_attack_voice();
	sound_play(psi_sound1);
	create_hitbox(7,365,6.4,4.2,4,3,magic2,obj_spark_darkness,1.55,1,0,15,self.id,7,3);
	duster = instance_create(x+size*(6-facing*12),y,obj_dust_effect);
	duster.facing = 1-facing;
	duster.image_alpha = 0.75;
      }
	burst.x = x+13*(1-facing*2)*size
	burst.y = y-15*size
	burst2.x = x-13*(1-facing*2)*size
	burst2.y = y-15*size
	burst3.x = x+13*(1-facing*2)*size
	burst3.y = y-15*size
	burst4.x = x-13*(1-facing*2)*size
	burst4.y = y-15*size
	burst3.image_alpha -= 0.13
	burst3.image_xscale += 0.013*size
	burst3.image_yscale += 0.013*size
	burst4.image_alpha -= 0.13
	burst4.image_xscale += 0.013*size
	burst4.image_yscale += 0.013*size
    if timer = 15
	intangible = 0
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }