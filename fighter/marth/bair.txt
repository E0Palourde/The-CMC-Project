
if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "bair";
  image_speed = 0;
  sprite_index = bair_sprite;
  image_index = 0;
  timer = 0;
  time = 45;
  timer_speed = 1;
  xoff = 60; //Bigger is left
  if facing = 1
  xoff = 61
  effscale = xsize/2.0
  yoff = 70; //Bigger is up
  }
if timer = 0
{

}

//----------------- Tipper Marth --------------------
if notip = 0 {

if (timer < time) {
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 3: image_index = 2; break;
  case 4: image_index = 3; break;
  case 5: image_index = 4; break;
  case 6: image_index = 5; break;
  case 7: image_index = 6; break;
  case 8: image_index = 7; break;
  case 10: image_index = 8; break;
  case 11: image_index = 9; break;
  case 21: image_index = 10; break;
  case 24: image_index = 11; break;
  case 28: image_index = 12; break;
  }
  
  if (timer == 3) {
	play_attack_voice();
    sound_play ( swingsnd3 );
	}
  if (timer == 5) {
    create_hitbox ( 9 , 367-facing , 2 , 3.5 , 8 , 7 , slash1 , obj_spark_slash4 , 0.54 , 0.35 , -13.40 , 21 , self.id , 10 , 2 );
	hitbox.image_angle = 36.03;
    create_hitbox2 ( 10 , 367-facing , 5.5 , 6.5 , 7.3 , 7 , slash2 , obj_spark_slash4 , 0.29 , 0.39 , -23.20 , 10.50 , self.id , 8 , 2 );
	hitbox2.image_angle = 336.99;
	create_hitbox3 ( 13 , 367-facing , 5.5 , 6.5 , 7.3 , 11 , slash3 , obj_spark_slash3 , 0.28 , 0.45 , -26.70 , 0 , self.id , 8 , 3 );
	hitbox3.image_angle = 346.37;
	}
  if (timer == 7) {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -12.50
    hitbox.hitbox_y = size * 26.60
    hitbox.image_xscale = size * 0.54
    hitbox.image_yscale = size * 0.39
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -27.20
    hitbox2.hitbox_y = size * 28.70
    hitbox2.image_xscale = size * 0.48
    hitbox2.image_yscale = size * 0.32
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -41.20
    hitbox3.hitbox_y = size * 28.70
    hitbox3.image_xscale = size * 0.44
    hitbox3.image_yscale = size * 0.32
	hitbox3.image_angle = 0;
 	}
  if (timer == 8) {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -9.70
    hitbox.hitbox_y = size * 29.40
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.53
	hitbox.image_angle = 32.23;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16
    hitbox2.hitbox_y = size * 42
    hitbox2.image_xscale = size * 0.32
    hitbox2.image_yscale = size * 0.40
	hitbox2.image_angle = 18.43;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -20.90
    hitbox3.hitbox_y = size * 51.80
    hitbox3.image_xscale = size * 0.29
    hitbox3.image_yscale = size * 0.39
	hitbox3.image_angle = 24.02;
	}
   if (timer == 9) {
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -3.70
    hitbox.hitbox_y = size * 32.20
    hitbox.image_xscale = size * 0.35
    hitbox.image_yscale = size * 0.45
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -3.70
    hitbox2.hitbox_y = size * 42.70
    hitbox2.image_xscale = size * 0.29
    hitbox2.image_yscale = size * 0.38
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -2.30
    hitbox3.hitbox_y = size * 53.90
    hitbox3.image_xscale = size * 0.29
    hitbox3.image_yscale = size * 0.40
	hitbox3.image_angle = 0;
   	}

//Sword Trail VFX section - Tipper//
 switch (timer){
        case 5:
            sword_trail = create_sword_trail2(self.id,4,9,10,5,30,sword_texture);
            sword_trail.visible_frames = 3;
			sword_trail.index = 0;
            sword_trail.per_frame_radius = true;
            sword_trail.tip_radius[5] = 0;
            sword_trail.base_radius[5] = 2;
            sword_trail.tip_radius[4] = 26;
            sword_trail.base_radius[4] = 2;
            sword_trail.tip_radius[3] = 11;
            sword_trail.base_radius[3] = 5;
            sword_trail.tip_radius[2] = 33;
            sword_trail.base_radius[2] = -5;
            sword_trail.tip_radius[1] = 10;
            sword_trail.base_radius[1] = -3;
            sword_trail.tip_radius[0] = 10;
            sword_trail.base_radius[0] = 5;
            with(sword_trail) interpolate_sword_trail();
            break;
        case 6: sword_trail.index = 1; break;
        case 7: sword_trail.index = 2; break;
		case 8: sword_trail.visible_frames -= (1/3)/2; break;
        case 9: sword_trail.index = 3; break;
		case 10: sword_trail.visible_frames -= (1/3)/2; break;
        case 11: sword_trail.index = 4; break;
		//case 12: sword_trail.visible_frames -= (1/3)/2; break;
		case 12: sword_trail.index = 5; break;
        //case 13: sword_trail.index = 5; break;
	    case 13: case 14: sword_trail.visible_frames -= (1/3)/2; break;
		//case 14: 
		case 15: sword_trail.visible_frames -= (1/3)/2; break;
        case 16: sword_trail.visible_frames = 1.5; break;
        case 17: case 18: sword_trail.visible_frames -= (1/3); break;
        case 19: with (sword_trail) instance_destroy(); break;
		}


  
  }
}

//----------------- Spread Marth --------------------
if notip = 1 {

switch ( timer )
  {
  case 2: image_index = 1; break;
  case 3: image_index = 2; break;
  case 4: image_index = 3; break;
  case 5: image_index = 4; break;
  case 6: image_index = 5; break;
  case 7:
    play_attack_voice();
    sound_play ( swingsnd3 );
    image_index = 6;
    create_hitbox ( 12 , 367-facing , 5.5 , 6.35 , 8 , 9 , slash2 , obj_spark_slash4 , 0.54 , 0.35 , -1.40 , 21 , self.id , 8 , 2 );
	hitbox.image_angle = 36.03;
    create_hitbox2 ( 12 , 367-facing , 5.5 , 6.35 , 8 , 9 , slash2 , obj_spark_slash4 , 0.29 , 0.39 , -20.20 , 10.50 , self.id , 8 , 2 );
	hitbox2.image_angle = 336.99;
	create_hitbox3 ( 12 , 367-facing , 5.5 , 6.35 , 8 , 9 , slash2 , obj_spark_slash3 , 0.28 , 0.39 , -23.70 , 0 , self.id , 8 , 2 );
	hitbox3.image_angle = 346.37;
    if notip = 1 {
	hitbox.hitlag_frames = 10
	hitbox2.hitlag_frames = 10
	hitbox3.hitlag_frames = 10
	hitbox3.sfx = slash2
	hitbox3.gfx = obj_spark_slash4
	hitbox3.priority = 3
	}
    break;
  case 9:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -12.50
    hitbox.hitbox_y = size * 26.60
    hitbox.image_xscale = size * 0.54
    hitbox.image_yscale = size * 0.39
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -27.20
    hitbox2.hitbox_y = size * 28.70
    hitbox2.image_xscale = size * 0.48
    hitbox2.image_yscale = size * 0.32
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -41.20
    hitbox3.hitbox_y = size * 28.70
    hitbox3.image_xscale = size * 0.44
    hitbox3.image_yscale = size * 0.32
	hitbox3.image_angle = 0;
    image_index = 7;
    break;
  case 11:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -9.70
    hitbox.hitbox_y = size * 29.40
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.53
	hitbox.image_angle = 32.23;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16
    hitbox2.hitbox_y = size * 42
    hitbox2.image_xscale = size * 0.32
    hitbox2.image_yscale = size * 0.40
	hitbox2.image_angle = 18.43;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -20.90
    hitbox3.hitbox_y = size * 51.80
    hitbox3.image_xscale = size * 0.29
    hitbox3.image_yscale = size * 0.39
	hitbox3.image_angle = 24.02;
    image_index = 8;
    break;
  case 13:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -3.70
    hitbox.hitbox_y = size * 32.20
    hitbox.image_xscale = size * 0.35
    hitbox.image_yscale = size * 0.45
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -3.70
    hitbox2.hitbox_y = size * 42.70
    hitbox2.image_xscale = size * 0.29
    hitbox2.image_yscale = size * 0.38
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -2.30
    hitbox3.hitbox_y = size * 53.90
    hitbox3.image_xscale = size * 0.29
    hitbox3.image_yscale = size * 0.40
	hitbox3.image_angle = 0;
    image_index = 9;
    break;
  case 21: image_index = 10;
  case 24: image_index = 11; break;
  case 28: image_index = 12; break;
  }

//Sword Trail VFX section - Spread//
 switch (timer){
        case 5:
            sword_trail = create_sword_trail2(self.id,4,9,10,5,30,spread_texture);
            sword_trail.visible_frames = 3;
			sword_trail.index = 0;
            sword_trail.per_frame_radius = true;
            sword_trail.tip_radius[5] = 0;
            sword_trail.base_radius[5] = 2;
            sword_trail.tip_radius[4] = 26;
            sword_trail.base_radius[4] = 2;
            sword_trail.tip_radius[3] = 11;
            sword_trail.base_radius[3] = 5;
            sword_trail.tip_radius[2] = 33;
            sword_trail.base_radius[2] = -5;
            sword_trail.tip_radius[1] = 10;
            sword_trail.base_radius[1] = -3;
            sword_trail.tip_radius[0] = 10;
            sword_trail.base_radius[0] = 5;
            with(sword_trail) interpolate_sword_trail();
            break;
        case 6: sword_trail.index = 1; break;
        case 7: sword_trail.index = 2; break;
		case 8: sword_trail.visible_frames -= (1/3)/2; break;
        case 9: sword_trail.index = 3; break;
		case 10: sword_trail.visible_frames -= (1/3)/2; break;
        case 11: sword_trail.index = 4; break;
		case 12: sword_trail.visible_frames -= (1/3)/2; break;
        case 13: sword_trail.index = 5; break;
		case 14: case 15: sword_trail.visible_frames -= (1/3)/2; break;
        case 16: sword_trail.visible_frames = 1.5; break;
        case 17: case 18: sword_trail.visible_frames -= (1/3); break;
        case 19: with (sword_trail) instance_destroy(); break;
		}

}

//----------------- Centered Marth --------------------
if notip = 2 {

switch ( timer )
  {
  case 2: image_index = 1; break;
  case 3: image_index = 2; break;
  case 4: image_index = 3; break;
  case 5: image_index = 4; break;
  case 6: image_index = 5; break;
  case 7:
    play_attack_voice();
    sound_play ( swingsnd3 );
    image_index = 6;
    create_hitbox2 ( 13 , 367-facing , 6.8 , 5.65 , 8 , 11 , slash2 , obj_spark_slash4 , 0.29 , 0.39 , -20.20 , 10.50 , self.id , 8 , 2 );
	hitbox2.image_angle = 336.99;
    create_hitbox ( 12 , 367-facing , 6.75 , 5 , 8 , 10 , slash2 , obj_spark_slash4 , 0.54 , 0.35 , -10.40 , 21 , self.id , 8 , 3 );
	hitbox.image_angle = 36.03;
	create_hitbox3 ( 8 , 367-facing , 3 , 5.75 , 8 , 7 , punch3 , obj_spark_slash1 , 0.28 , 0.39 , -23.70 , 0 , self.id , 8 , 1 );
	hitbox3.image_angle = 346.37;
    if notip = 2 {
	hitbox.gfx = obj_spark_slash3
	hitbox.sfx = slash3
	}
    break;
  case 9:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -12.50
    hitbox.hitbox_y = size * 26.60
    hitbox.image_xscale = size * 0.54
    hitbox.image_yscale = size * 0.39
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -27.20
    hitbox2.hitbox_y = size * 28.70
    hitbox2.image_xscale = size * 0.48
    hitbox2.image_yscale = size * 0.32
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -41.20
    hitbox3.hitbox_y = size * 28.70
    hitbox3.image_xscale = size * 0.44
    hitbox3.image_yscale = size * 0.32
	hitbox3.image_angle = 0;
    image_index = 7;
    break;
  case 11:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -9.70
    hitbox.hitbox_y = size * 29.40
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.53
	hitbox.image_angle = 32.23;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16
    hitbox2.hitbox_y = size * 42
    hitbox2.image_xscale = size * 0.32
    hitbox2.image_yscale = size * 0.40
	hitbox2.image_angle = 18.43;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -20.90
    hitbox3.hitbox_y = size * 51.80
    hitbox3.image_xscale = size * 0.29
    hitbox3.image_yscale = size * 0.39
	hitbox3.image_angle = 24.02;
    image_index = 8;
    break;
  case 13:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -3.70
    hitbox.hitbox_y = size * 32.20
    hitbox.image_xscale = size * 0.35
    hitbox.image_yscale = size * 0.45
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -3.70
    hitbox2.hitbox_y = size * 42.70
    hitbox2.image_xscale = size * 0.29
    hitbox2.image_yscale = size * 0.38
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -2.30
    hitbox3.hitbox_y = size * 53.90
    hitbox3.image_xscale = size * 0.29
    hitbox3.image_yscale = size * 0.40
	hitbox3.image_angle = 0;
    image_index = 9;
    break;
  case 21: image_index = 10;
  case 24: image_index = 11; break;
  case 28: image_index = 12; break;
  }
  
  //Sword Trail VFX section - Tipper//
 switch (timer){
        case 5:
            sword_trail = create_sword_trail2(self.id,4,9,10,5,30,centered_texture);
            sword_trail.visible_frames = 3;
			sword_trail.index = 0;
            sword_trail.per_frame_radius = true;
            sword_trail.tip_radius[5] = 0;
            sword_trail.base_radius[5] = 2;
            sword_trail.tip_radius[4] = 26;
            sword_trail.base_radius[4] = 2;
            sword_trail.tip_radius[3] = 11;
            sword_trail.base_radius[3] = 5;
            sword_trail.tip_radius[2] = 33;
            sword_trail.base_radius[2] = -5;
            sword_trail.tip_radius[1] = 10;
            sword_trail.base_radius[1] = -3;
            sword_trail.tip_radius[0] = 10;
            sword_trail.base_radius[0] = 5;
            with(sword_trail) interpolate_sword_trail();
            break;
        case 6: sword_trail.index = 1; break;
        case 7: sword_trail.index = 2; break;
		case 8: sword_trail.visible_frames -= (1/3)/2; break;
        case 9: sword_trail.index = 3; break;
		case 10: sword_trail.visible_frames -= (1/3)/2; break;
        case 11: sword_trail.index = 4; break;
		case 12: sword_trail.visible_frames -= (1/3)/2; break;
        case 13: sword_trail.index = 5; break;
		case 14: case 15: sword_trail.visible_frames -= (1/3)/2; break;
        case 16: sword_trail.visible_frames = 1.5; break;
        case 17: case 18: sword_trail.visible_frames -= (1/3); break;
        case 19: with (sword_trail) instance_destroy(); break;
		}
  

}

//----------------- Every Marth --------------------

//endlag on each version

   if ( air == 0 )
  {
  dontrepeat = 0;
  state_type = "land";
  attack_type = "none";
  sprite_index = land_sprite;
  time = 25
  
  timer = 0;
  facing = !facing;
  }



if (timer >= 7 && notip = 0){
if ((attack_success) || target.object_index == obj_enemy) && (dontrepeat = 0) && place_meeting ( x + 13.94 , y , attack_box ) && obj_score_control.stocks[target.number-1] == 1{
				if ((target.weight <= .22 && target.percent > 105) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 135)){
			    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	  

if (timer >= 7 && notip = 0){
if ((attack_success) || target.object_index == obj_enemy) && (dontrepeat = 0) && place_meeting ( x - 13.925 , y , attack_box ){
				if ((target.weight <= .22 && target.percent > 120) || (target.weight > .22 && target.weight < .3 && target.percent > 130) || (target.weight > .3 && target.percent > 140)){
			    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	  
 

  if (timer >= time -1 && state_type != "flinch" && state_type != "air_flinch")
  {
    dontrepeat = 0;
	facing = !facing;
    attack_type = "none";
    if ( air > 0 )
	  {
      
      state_type = "jump";
	  sprite_index = jump_sprite;
	  image_index = 5;
	  image_speed = 0;
	  image_xscale *= -1
	  }
      else
	  {
      state_type = "stand";
	  }
    timer = 0;
    time = -1;
	}
