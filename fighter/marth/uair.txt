//----------------- Tipper Marth --------------------
if notip = 0 {
if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "uair";
  image_speed = 0;
  sprite_index = uair_sprite;
  image_index = 0;
  timer = 0;
  time = 42;
  timer_speed = 1;
  xoff = 54; //Bigger is left
  if facing = 1
  xoff = 55
  effscale = xsize/2.0
  yoff = 77; //Bigger is up
  }

switch ( timer )
  {
  case 3: image_index = 1;
    eff = create_blur(x,y,self.id);
    eff.sprite_index = uair_effect_spr;
    //eff.image_xscale = size;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2);
    eff.y = y - yoff*size;
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.snap = self.id
    eff.depth = -2; break;
  case 5:
    eff.image_speed = 0;
    eff.image_index = 1;
    sound_play ( swingsnd2 );
    image_index = 2;
    create_hitbox ( 10 , 80+facing*20 , 5.35 , 2.2 , 6 , 7 , slash2 , obj_spark_slash2 , 0.38 , 0.63 , 2.10 , 37.10 , self.id , 7 , 2 );
	hitbox.image_angle = 0;
    create_hitbox2 ( 9 , 80+facing*20 , 5.25 , 1.7 , 5 , 7 , slash2 , obj_spark_slash2 , 0.37 , 0.55 , 12.60 , 35 , self.id , 7 , 1 );
	hitbox2.image_angle = 349.99-facing*((2*349.99)-540);
	create_hitbox3 ( 13 , 90 , 5.85 , 3.6 , 7 , 9 , slash3 , obj_spark_slash3 , 0.41 , 0.75 , 23.40 , 29.20 , self.id , 7 , 2 );
	hitbox3.image_angle = 356.66-facing*((2*356.66)-540);
    hitbox3.hit_stun = 9;
    break;
  case 7:
    eff.image_speed = 0;
    eff.image_index = 2;
    image_index = 3;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -4.20
    hitbox.hitbox_y = size * 38.50
    hitbox.image_xscale = size * 0.35
    hitbox.image_yscale = size * 0.71
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 4.60
    hitbox2.hitbox_y = size * 47.40
    hitbox2.image_xscale = size * 0.33
    hitbox2.image_yscale = size * 0.51
	hitbox2.image_angle = 40+facing*(180-(2*40));
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14.40
    hitbox3.hitbox_y = size * 51.40
    hitbox3.image_xscale = size * 0.37
    hitbox3.image_yscale = size * 0.72
	hitbox3.image_angle =  40+facing*(180-(2*40));
    break;
  case 9:
    eff.image_speed = 0;
    eff.image_index = 3;
    image_index = 4;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -14
    hitbox.hitbox_y = size * 27.30
    hitbox.image_xscale = size * 0.52
    hitbox.image_yscale = size * 0.38
	hitbox.image_angle = 343.07-facing*((2*343.07)-540);
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -14.50
    hitbox2.hitbox_y = size * 44
    hitbox2.image_xscale = size * 1.1
    hitbox2.image_yscale = size * 0.5
	hitbox2.image_angle = 38.03+facing*(180-(2*38.03))
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16
    hitbox3.hitbox_y = size * 52
    hitbox3.image_xscale = size * 1.35
    hitbox3.image_yscale = size * 0.55
	hitbox3.image_angle = 31.09+facing*(180-(2*31.09));
    break;
  case 11:
    eff.image_speed = 0;
    eff.image_index = 4;
    image_index = 5;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -13.30
    hitbox.hitbox_y = size * 19.60
    hitbox.image_xscale = size * 0.52
    hitbox.image_yscale = size * 0.34
	hitbox.image_angle = 35.98+facing*(180-(2*35.98))
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -25.50
    hitbox2.hitbox_y = size * 23.5
    hitbox2.image_xscale = size * 0.35
    hitbox2.image_yscale = size * 0.69
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -34.30
    hitbox3.hitbox_y = size * 27.50
    hitbox3.image_xscale = size * 0.35
    hitbox3.image_yscale = size * 0.86
	hitbox3.image_angle = 0;
    break;
  case 13:
    eff.image_speed = 0;
    eff.image_index = 5; image_index = 6; break;
  case 14:
    with (eff){
      instance_destroy();
    }
  break;
  case 15: image_index = 7; break;
  case 19: image_index = 8; break;
  case 24: image_index = 9; break;
  case 30: image_index = 10; break;
  case 35: image_index = 11; break;
  case 39: image_index = 12; break;
  //case 42:
//    attack_type = "none";
  //  if ( air > 0 )
  //    state_type = "jump";
  //    else
  //    state_type = "stand";
  //  timer = 0;
  //  time = -1;
  //  exit;
  //  break;
  }
}

//----------------- Spread Marth --------------------
if notip = 1 {
if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "uair";
  image_speed = 0;
  sprite_index = uair_sprite;
  image_index = 0;
  timer = 0;
  time = 46;
  timer_speed = 1;
  xoff = 54; //Bigger is left
  if facing = 1
  xoff = 55
  effscale = xsize/2.0
  yoff = 77; //Bigger is up
  }

switch ( timer )
  {
  case 3: image_index = 1;
    eff = create_blur(x,y,self.id);
    eff.sprite_index = uair_effect_spr;
    //eff.image_xscale = size;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2);
    eff.y = y - yoff*size;
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.snap = self.id
    eff.depth = -2; break;
  case 5:
    eff.image_speed = 0;
    eff.image_index = 1;
    sound_play ( swingsnd2 );
    image_index = 2;
    create_hitbox ( 11 , 85+facing*10 , 5.3 , 3 , 6 , 8 , slash2 , obj_spark_slash2 , 0.38 , 0.63 , 2.10 , 37.10 , self.id , 7 , 2 );
	hitbox.image_angle = 0;
    create_hitbox2 ( 11 , 85+facing*10  , 5.3 , 3 , 6 , 8 , slash2 , obj_spark_slash2 , 0.37 , 0.55 , 12.60 , 35 , self.id , 7 , 2 );
	hitbox2.image_angle = 349.99-facing*((2*349.99)-540);
	create_hitbox3 ( 11 , 85+facing*10  , 5.3 , 3 , 6 , 8 , slash3 , obj_spark_slash3 ,0.41 , 0.75 , 23.40 , 29.20, self.id , 7 , 2 );
	hitbox3.image_angle = 347.66-facing*((2*347.66)-540);
    hitbox3.hit_stun = 9;
	if notip = 1 {
    hitbox2.hit_stun = 15
    hitbox3.dir = 80+facing*20
    hitbox.damage = 11
    hitbox2.damage = 11
    hitbox3.damage = 11
    hitbox.bkb = 5.5
    hitbox2.bkb = 5.5
    hitbox3.bkb = 5.5
    hitbox.kbg = 4.3
    hitbox2.kbg = 4.3
    hitbox3.kbg = 4.3
    hitbox.shield_damage = 6
    hitbox2.shield_damage = 6
    hitbox3.shield_damage = 6
    hitbox.hitlag_frames = 10
    hitbox3.hitlag_frames = 10
    hitbox2.hitlag_frames = 10
    hitbox3.sfx = slash2
    hitbox3.gfx = obj_spark_slash2
    hitbox2.priority = 2
	}
    break;
  case 7:
    eff.image_speed = 0;
    eff.image_index = 2;
    image_index = 3;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -4.20
    hitbox.hitbox_y = size * 38.50
    hitbox.image_xscale = size * 0.35
    hitbox.image_yscale = size * 0.71
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 4.60
    hitbox2.hitbox_y = size * 47.40
    hitbox2.image_xscale = size * 0.33
    hitbox2.image_yscale = size * 0.51
	hitbox2.image_angle = 40+facing*(180-(2*40));
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14.40
    hitbox3.hitbox_y = size * 51.40
    hitbox3.image_xscale = size * 0.37
    hitbox3.image_yscale = size * 0.72
	hitbox3.image_angle =  40+facing*(180-(2*40));
    break;
  case 9:
    eff.image_speed = 0;
    eff.image_index = 3;
    image_index = 4;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -14
    hitbox.hitbox_y = size * 27.30
    hitbox.image_xscale = size * 0.52
    hitbox.image_yscale = size * 0.38
	hitbox.image_angle = 343.07-facing*((2*343.07)-540);
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -14.50
    hitbox2.hitbox_y = size * 44
    hitbox2.image_xscale = size * 1.1
    hitbox2.image_yscale = size * 0.5
	hitbox2.image_angle = 38.03+facing*(180-(2*38.03))
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16
    hitbox3.hitbox_y = size * 52
    hitbox3.image_xscale = size * 1.35
    hitbox3.image_yscale = size * 0.55
	hitbox3.image_angle = 31.09+facing*(180-(2*31.09));
    break;
  case 11:
    eff.image_speed = 0;
    eff.image_index = 4;
    image_index = 5;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -13.30
    hitbox.hitbox_y = size * 19.60
    hitbox.image_xscale = size * 0.52
    hitbox.image_yscale = size * 0.34
	hitbox.image_angle = 35.98+facing*(180-(2*35.98))
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -25.50
    hitbox2.hitbox_y = size * 23.5
    hitbox2.image_xscale = size * 0.35
    hitbox2.image_yscale = size * 0.69
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -34.30
    hitbox3.hitbox_y = size * 27.50
    hitbox3.image_xscale = size * 0.35
    hitbox3.image_yscale = size * 0.86
	hitbox3.image_angle = 0;
    break;
  case 13:
    eff.image_speed = 0;
    eff.image_index = 5; image_index = 6; break;
  case 14:
    with (eff){
      instance_destroy();
    }
  break;
  case 15: image_index = 7; break;
  case 19: image_index = 8; break;
  case 24: image_index = 9; break;
  case 30: image_index = 10; break;
  case 35: image_index = 11; break;
  case 39: image_index = 12; break;
  //case 42:
//    attack_type = "none";
  //  if ( air > 0 )
  //    state_type = "jump";
  //    else
  //    state_type = "stand";
  //  timer = 0;
  //  time = -1;
  //  exit;
  //  break;
  }
}

//----------------- Centered Marth --------------------
if notip = 2 {
if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "uair";
  image_speed = 0;
  sprite_index = uair_sprite;
  image_index = 0;
  timer = 0;
  time = 42;
  timer_speed = 1;
  xoff = 54; //Bigger is left
  if facing = 1
  xoff = 55
  effscale = xsize/2.0
  yoff = 77; //Bigger is up
  }

switch ( timer )
  {
  case 3: image_index = 1;
    eff = create_blur(x,y,self.id);
    eff.sprite_index = uair_effect_spr;
    //eff.image_xscale = size;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2);
    eff.y = y - yoff*size;
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.snap = self.id
    eff.depth = -2; break;
  case 5:
    eff.image_speed = 0;
    eff.image_index = 1;
    sound_play ( swingsnd2 );
    image_index = 2;
    create_hitbox2 ( 9 , 80+facing*20 , 5.25 , 2.2 , 7 , 9 , slash2 , obj_spark_slash2 , 0.37 , 0.55 , 12.60 , 35, self.id , 7 , 3 );
	hitbox2.image_angle = 349.99-facing*((2*349.99)-540);
  hitbox2.hit_stun = 9;
    create_hitbox ( 9 , 80+facing*20 , 5.25 , 2.2 , 6 , 8 , slash2 , obj_spark_slash2 , 0.38 , 0.63 , 2.10 , 37.10 , self.id , 7 , 2 );
	hitbox.image_angle = 0;
	create_hitbox3 ( 6 , 90 , 5.85 , 1.7 , 5 , 7 , punch3 , obj_spark_slash1 ,0.41 , 0.75 , 23.40 , 29.20 , self.id , 7 , 1 );
	hitbox3.image_angle = 347.66-facing*((2*347.66)-540);
	if notip = 2 {
	hitbox.dir = 90
	hitbox3.dir = 80+facing*20
	hitbox.sfx = slash3
	hitbox2.sfx = slash3
	hitbox.gfx = obj_spark_slash3
	hitbox2.gfx = obj_spark_slash3
	hitbox3.hit_stun = 7
	hitbox2.hit_stun = 9
	}
    break;
  case 7:
    eff.image_speed = 0;
    eff.image_index = 2;
    image_index = 3;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -4.20
    hitbox.hitbox_y = size * 38.50
    hitbox.image_xscale = size * 0.35
    hitbox.image_yscale = size * 0.71
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 4.60
    hitbox2.hitbox_y = size * 47.40
    hitbox2.image_xscale = size * 0.33
    hitbox2.image_yscale = size * 0.51
	hitbox2.image_angle = 40+facing*(180-(2*40));
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14.40
    hitbox3.hitbox_y = size * 51.40
    hitbox3.image_xscale = size * 0.37
    hitbox3.image_yscale = size * 0.72
	hitbox3.image_angle =  40+facing*(180-(2*40));
    break;
  case 9:
    eff.image_speed = 0;
    eff.image_index = 3;
    image_index = 4;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -14
    hitbox.hitbox_y = size * 27.30
    hitbox.image_xscale = size * 0.52
    hitbox.image_yscale = size * 0.38
	hitbox.image_angle = 343.07-facing*((2*343.07)-540);
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -14.50
    hitbox2.hitbox_y = size * 44
    hitbox2.image_xscale = size * 1.1
    hitbox2.image_yscale = size * 0.5
	hitbox2.image_angle = 38.03+facing*(180-(2*38.03))
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16
    hitbox3.hitbox_y = size * 52
    hitbox3.image_xscale = size * 1.35
    hitbox3.image_yscale = size * 0.55
	hitbox3.image_angle = 31.09+facing*(180-(2*31.09));
    break;
  case 11:
    eff.image_speed = 0;
    eff.image_index = 4;
    image_index = 5;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -13.30
    hitbox.hitbox_y = size * 19.60
    hitbox.image_xscale = size * 0.52
    hitbox.image_yscale = size * 0.34
	hitbox.image_angle = 35.98+facing*(180-(2*35.98))
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -25.50
    hitbox2.hitbox_y = size * 23.5
    hitbox2.image_xscale = size * 0.35
    hitbox2.image_yscale = size * 0.69
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -34.30
    hitbox3.hitbox_y = size * 27.50
    hitbox3.image_xscale = size * 0.35
    hitbox3.image_yscale = size * 0.86
	hitbox3.image_angle = 0;
    break;
  case 13:
    eff.image_speed = 0;
    eff.image_index = 5; image_index = 6; break;
  case 14:
    with (eff){
      instance_destroy();
    }
  break;
  case 15: image_index = 7; break;
  case 19: image_index = 8; break;
  case 24: image_index = 9; break;
  case 30: image_index = 10; break;
  case 35: image_index = 11; break;
  case 39: image_index = 12; break;
  //case 42:
//    attack_type = "none";
  //  if ( air > 0 )
  //    state_type = "jump";
  //    else
  //    state_type = "stand";
  //  timer = 0;
  //  time = -1;
  //  exit;
  //  break;
  }
}

//----------------- Every Marth --------------------
if (timer >= time -1 && state_type != "flinch" && state_type != "air_flinch") {
  attack_type = "none";
  sprite_index = jump_sprite;
  image_index = 5;
  image_speed = 0;
  if ( air > 0 )
    state_type = "jump";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  exit;
  break;
}

  if (attack_type == "none"){
    if (instance_exists(eff)){
      with (eff){
        instance_destroy();
      }
    }
  }
if ( air == 0 )
  {
  if (instance_exists(eff)){
    with (eff){
      instance_destroy();
    }
  }
  state_type = "land";
  attack_type = "none";
  sprite_index = land_sprite;
  if notip = 0
    time = 7; // Tipper landing lag
  if notip = 1
    time = 8; // Spread landing lag
  if notip = 1 && timer > 29
    time = 5;
  if notip = 2
    time = 7; // Centered landing lag
  timer = 0;
  }
