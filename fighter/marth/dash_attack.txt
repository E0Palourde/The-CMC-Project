//----------------- Tipper Marth --------------------
if notip = 0 {
if ( state_type == "run" || state_type == "stand" )
  {
  state_type = "attack";
  attack_type = "dash";
  image_speed = 0;
  sprite_index = dash_attack_sprite;
  image_index = 0;
  timer = 0;
  time = 36;
  timer_speed = 1;
  hspeed = run_speed *(1-facing*2)
  xoff = -61; //Bigger is left
  if facing = 1
  xoff = -60
  effscale = xsize/2.0
  yoff = 44; //Bigger is up
  }
hspeed *= 0.98;
if timer <= 13
hspeed = run_speed *(1-facing*2)

switch ( timer )
  {
  case 1: image_index = 1; break;
  case 2: image_index = 2; break;
  case 3: image_index = 3; break;
  case 4: image_index = 4; break;
  case 10: image_index = 5; break;
  case 11:
    eff = create_blur(x,y,self.id);
    eff.sprite_index = dash_effect_spr;
    //eff.image_xscale = size;
    eff.image_xscale = (effscale*size)*(-1)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2);
    eff.y = y - yoff*size;
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.snap = self.id
    eff.depth = -2; image_index = 6; break;
  case 12:
    eff.image_speed = 0;
    eff.image_index = 1;
    sound_play ( swingsnd1 );
    play_attack_voice();
    image_index = 7;
    create_hitbox2 ( 10 , 90 , 5.2 , 3.8 , 7 , 6 , slash2 , obj_spark_slash2 , 0.33 , 0.36 , 31.50 , 11.20 , self.id , 6 , 1 );
	hitbox2.image_angle = 45.31;
    create_hitbox ( 9 , 45+facing*90 , 4.9 , 3.5 , 6 , 6 , slash2 , obj_spark_slash2 , 0.51 , 0.31 , 21.70 , 16.10 , self.id , 6 , 1 );
	hitbox.image_angle = 0;
    create_hitbox3 ( 12 , 115-facing*50 , 5.6 , 3.8 , 9 , 8 , slash3 , obj_spark_slash2 , 0.35 , 0.33 , 38.50 , 4.90 , self.id , 6 , 2 );
	hitbox3.image_angle = 0;
	hitbox3.hit_stun = 9;
	if notip = 1 {
    hitbox.hit_stun = 8
    hitbox2.hit_stun = 8
    hitbox3.hit_stun = 8
    hitbox.damage = 11
    hitbox2.damage = 11
    hitbox3.damage = 11
    hitbox.dir = 105-facing*30
    hitbox2.dir = 105-facing*30
    hitbox3.dir = 105-facing*30
    hitbox.bkb = 5.4
    hitbox2.bkb = 5.4
    hitbox3.bkb = 5.4
    hitbox.kbg = 3.1
    hitbox2.kbg = 3.1
    hitbox3.kbg = 3.1
    hitbox.shield_damage = 8
    hitbox2.shield_damage = 8
    hitbox3.shield_damage = 8
    hitbox.priority = 2
    hitbox3.priority = 2
	}
    if notip = 2 {
	hitbox.hit_stun = 9;
	hitbox.hit_stun = 7;
	hitbox.sfx = slash3;
	hitbox3.hit_stun = -3;
	hitbox3.sfx = slash2;
    hitbox.dir = 120-facing*60;
    hitbox2.dir = 45+facing*90;
    hitbox3.dir = 90;
	}
    break;
  case 13:
    eff.image_speed = 0;
    eff.image_index = 2;
    image_index = 8;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 22.40
    hitbox.hitbox_y = size * 20.30
    hitbox.image_xscale = size * 0.54
    hitbox.image_yscale = size * 0.35
	hitbox.image_angle = 5.86;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 34
    hitbox2.hitbox_y = size * 20.30
    hitbox2.image_xscale = size * 0.37
    hitbox2.image_yscale = size * 0.35
	hitbox2.image_angle = 0;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 44.80
    hitbox3.hitbox_y = size * 20.30
    hitbox3.image_xscale = size * 0.35
    hitbox3.image_yscale = size * 0.34
	hitbox3.image_angle = 0;
    break;
  case 14:
    eff.image_speed = 0;
    eff.image_index = 3;
    image_index = 9;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 21.70
    hitbox.hitbox_y = size * 23.80
    hitbox.image_xscale = size * 0.50
    hitbox.image_yscale = size * 0.31
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 32.20
    hitbox2.hitbox_y = size * 27.30
    hitbox2.image_xscale = size * 0.35
    hitbox2.image_yscale = size * 0.33
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 42
    hitbox3.hitbox_y = size * 30.10
    hitbox3.image_xscale = size * 0.35
    hitbox3.image_yscale = size * 0.34
    break;
  case 15:
    eff.image_speed = 0;
    eff.image_index = 4;
    image_index = 10;
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12.60
    hitbox.hitbox_y = size * 21.70
    hitbox.image_xscale = size * 0.26
    hitbox.image_yscale = size * 0.38
	hitbox.image_angle = 0;
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14.70
    hitbox2.hitbox_y = size * 28
    hitbox2.image_xscale = size * 0.27
    hitbox2.image_yscale = size * 0.28
	hitbox2.image_angle = 350.06;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 18.90
    hitbox3.hitbox_y = size * 35
    hitbox3.image_xscale = size * 0.28
    hitbox3.image_yscale = size * 0.25
	hitbox3.image_angle = 55.01;
    break;
  case 20:
    eff.image_speed = 0;
    eff.image_index = 5;
    eff.depth = 0; image_index = 11; break;
  case 29:
    with (eff){
      instance_destroy();
    }
  break;
  case 30: image_index = 12; break;
  case 33: image_index = 13; break;
  case 36: image_index = 14; break;
  case 39: image_index = 15; break;
  case 42: image_index = 16; break;


  if (attack_type == "none"){
    if (instance_exists(eff)){
      with (eff){
        instance_destroy();
      }
    }
  }
  case 46:
    attack_type = "none";
    if ( air == 0 )
      state_type = "stand";
      else
      state_type = "jump";
    timer = 0;
    time =-1;
    break;
  }
  }

  //----------------- Spread Marth --------------------
  if notip = 1 {
  if ( state_type == "run" || state_type == "stand" )
    {
    state_type = "attack";
    attack_type = "dash";
    image_speed = 0;
    sprite_index = dash_attack_sprite;
    image_index = 0;
    timer = 0;
    time = 36;
    timer_speed = 1;
    hspeed = run_speed *(1-facing*2)
    xoff = -61; //Bigger is left
    if facing = 1
    xoff = -60
    effscale = xsize/2.0
    yoff = 44; //Bigger is up
    }
  hspeed *= 0.98;
  if timer <= 13
  hspeed = run_speed *(1-facing*2)

  switch ( timer )
    {
    case 1: image_index = 1; break;
    case 2: image_index = 2; break;
    case 3: image_index = 3; break;
    case 4: image_index = 4; break;
    case 10: image_index = 5; break;
    case 11:
      eff = create_blur(x,y,self.id);
      eff.sprite_index = dash_effect_spr;
      //eff.image_xscale = size;
      eff.image_xscale = (effscale*size)*(-1)*(1-facing*2);
      eff.image_yscale = (effscale*size);
      eff.x = x - xoff*size*(1-facing*2);
      eff.y = y - yoff*size;
      eff.image_speed = 0;
      eff.image_index = 0;
      eff.alarm[0] = 40;
      eff.snap = self.id
      eff.depth = -2; image_index = 6; break;
    case 12:
      eff.image_speed = 0;
      eff.image_index = 1;
      sound_play ( swingsnd1 );
      play_attack_voice();
      image_index = 7;
      create_hitbox2 ( 10 , 45+facing*90 , 5.2 , 3.9 , 7 , 6 , slash2 , obj_spark_slash2 , 0.33 , 0.36 , 31.50 , 11.20 , self.id , 6 , 2 );
  	hitbox2.image_angle = 45.31;
      create_hitbox ( 10 , 45+facing*90 , 5.2 , 3.9 , 7 , 7 , slash2 , obj_spark_slash2 , 0.51 , 0.31 , 21.70 , 16.10 , self.id , 6 , 2 );
  	hitbox.image_angle = 0;
      create_hitbox3 ( 10 , 45+facing*90 , 5.2 , 3.9 , 7 , 7 , slash3 , obj_spark_slash2 , 0.35 , 0.33 , 38.50 , 4.90 , self.id , 6 , 2 );
  	hitbox3.image_angle = 0;
  	if notip = 1 {
      hitbox.hit_stun = 8
      hitbox2.hit_stun = 8
      hitbox3.hit_stun = 8
      hitbox.damage = 11
      hitbox2.damage = 11
      hitbox3.damage = 11
      hitbox.dir = 105-facing*30
      hitbox2.dir = 105-facing*30
      hitbox3.dir = 105-facing*30
      hitbox.bkb = 5.4
      hitbox2.bkb = 5.4
      hitbox3.bkb = 5.4
      hitbox.kbg = 3.1
      hitbox2.kbg = 3.1
      hitbox3.kbg = 3.1
      hitbox.shield_damage = 8
      hitbox2.shield_damage = 8
      hitbox3.shield_damage = 8
      hitbox.priority = 2
      hitbox3.priority = 2
  	}
      break;
    case 13:
      eff.image_speed = 0;
      eff.image_index = 2;
      image_index = 8;
      hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 22.40
      hitbox.hitbox_y = size * 20.30
      hitbox.image_xscale = size * 0.54
      hitbox.image_yscale = size * 0.35
  	hitbox.image_angle = 5.86;
      hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 34
      hitbox2.hitbox_y = size * 20.30
      hitbox2.image_xscale = size * 0.37
      hitbox2.image_yscale = size * 0.35
  	hitbox2.image_angle = 0;
      hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 44.80
      hitbox3.hitbox_y = size * 20.30
      hitbox3.image_xscale = size * 0.35
      hitbox3.image_yscale = size * 0.34
  	hitbox3.image_angle = 0;
      break;
    case 14:
      eff.image_speed = 0;
      eff.image_index = 3;
      image_index = 9;
      hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 21.70
      hitbox.hitbox_y = size * 23.80
      hitbox.image_xscale = size * 0.50
      hitbox.image_yscale = size * 0.31
      hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 32.20
      hitbox2.hitbox_y = size * 27.30
      hitbox2.image_xscale = size * 0.35
      hitbox2.image_yscale = size * 0.33
      hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 42
      hitbox3.hitbox_y = size * 30.10
      hitbox3.image_xscale = size * 0.35
      hitbox3.image_yscale = size * 0.34
      break;
    case 15:
      eff.image_speed = 0;
      eff.image_index = 4;
      image_index = 10;
      hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12.60
      hitbox.hitbox_y = size * 21.70
      hitbox.image_xscale = size * 0.26
      hitbox.image_yscale = size * 0.38
  	hitbox.image_angle = 0;
      hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14.70
      hitbox2.hitbox_y = size * 28
      hitbox2.image_xscale = size * 0.27
      hitbox2.image_yscale = size * 0.28
  	hitbox2.image_angle = 350.06;
      hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 18.90
      hitbox3.hitbox_y = size * 35
      hitbox3.image_xscale = size * 0.28
      hitbox3.image_yscale = size * 0.25
  	hitbox3.image_angle = 55.01;
      break;
    case 20:
      eff.image_speed = 0;
      eff.image_index = 5;
    eff.depth = 0; image_index = 11; break;
    case 29:
      with (eff){
        instance_destroy();
      }
    break;
    case 30: image_index = 12; break;
    case 33: image_index = 13; break;
    case 36: image_index = 14; break;
    case 39: image_index = 15; break;
    case 42: image_index = 16; break;


    if (attack_type == "none"){
      if (instance_exists(eff)){
        with (eff){
          instance_destroy();
        }
      }
    }
    case 46:
      attack_type = "none";
      if ( air == 0 )
        state_type = "stand";
        else
        state_type = "jump";
      timer = 0;
      time =-1;
      break;
    }
    }

    //----------------- Centered Marth --------------------
    if notip = 2 {
    if ( state_type == "run" || state_type == "stand" )
      {
      state_type = "attack";
      attack_type = "dash";
      image_speed = 0;
      sprite_index = dash_attack_sprite;
      image_index = 0;
      timer = 0;
      time = 36;
      timer_speed = 1;
      hspeed = run_speed *(1-facing*2)
      xoff = -61; //Bigger is left
      if facing = 1
      xoff = -60
      effscale = xsize/2.0
      yoff = 44; //Bigger is up
      }
    hspeed *= 0.98;
    if timer <= 13
    hspeed = run_speed *(1-facing*2)

    switch ( timer )
      {
      case 1: image_index = 1; break;
      case 2: image_index = 2; break;
      case 3: image_index = 3; break;
      case 4: image_index = 4; break;
      case 10: image_index = 5; break;
      case 11:
        eff = create_blur(x,y,self.id);
        eff.sprite_index = dash_effect_spr;
        //eff.image_xscale = size;
        eff.image_xscale = (effscale*size)*(-1)*(1-facing*2);
        eff.image_yscale = (effscale*size);
        eff.x = x - xoff*size*(1-facing*2);
        eff.y = y - yoff*size;
        eff.image_speed = 0;
        eff.image_index = 0;
        eff.alarm[0] = 40;
        eff.snap = self.id
        eff.depth = -2; image_index = 6; break;
      case 12:
        eff.image_speed = 0;
        eff.image_index = 1;
        sound_play ( swingsnd1 );
        play_attack_voice();
        image_index = 7;
        create_hitbox2 ( 13 , 52+facing*76 , 5.6 , 3.8 , 9 , 9 , slash2 , obj_spark_slash2 , 0.33 , 0.36 , 31.50 , 11.20 , self.id , 6 , 2 );
    	hitbox2.image_angle = 45.31;
        create_hitbox ( 10 , 52+facing*76 , 5.6 , 3.8 , 7 , 8 , slash2 , obj_spark_slash2 , 0.51 , 0.31 , 21.70 , 16.10 , self.id , 6 , 3 );
    	hitbox.image_angle = 0;
    	hitbox.hit_stun = 9;
        create_hitbox3 ( 8 , 367-facing , 4.9 , 3.5 , 6 , 6 , punch3 , obj_spark_slash1 , 0.35 , 0.33 , 38.50 , 4.90 , self.id , 6 , 1 );
    	hitbox3.image_angle = 0;
        if notip = 2 {
    	hitbox2.hit_stun = 9;
    	hitbox.hit_stun = 7;
    	hitbox.sfx = slash3;
    	hitbox3.hit_stun = -3;
        hitbox2.dir = 120-facing*60;
        hitbox3.dir = 45+facing*90;
        hitbox.dir = 90;
    	}
        break;
      case 13:
        eff.image_speed = 0;
        eff.image_index = 2;
        image_index = 8;
        hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 22.40
        hitbox.hitbox_y = size * 20.30
        hitbox.image_xscale = size * 0.54
        hitbox.image_yscale = size * 0.35
    	hitbox.image_angle = 5.86;
        hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 34
        hitbox2.hitbox_y = size * 20.30
        hitbox2.image_xscale = size * 0.37
        hitbox2.image_yscale = size * 0.35
    	hitbox2.image_angle = 0;
        hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 44.80
        hitbox3.hitbox_y = size * 20.30
        hitbox3.image_xscale = size * 0.35
        hitbox3.image_yscale = size * 0.34
    	hitbox3.image_angle = 0;
        break;
      case 14:
        eff.image_speed = 0;
        eff.image_index = 3;
        image_index = 9;
        hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 21.70
        hitbox.hitbox_y = size * 23.80
        hitbox.image_xscale = size * 0.50
        hitbox.image_yscale = size * 0.31
        hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 32.20
        hitbox2.hitbox_y = size * 27.30
        hitbox2.image_xscale = size * 0.35
        hitbox2.image_yscale = size * 0.33
        hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 42
        hitbox3.hitbox_y = size * 30.10
        hitbox3.image_xscale = size * 0.35
        hitbox3.image_yscale = size * 0.34
        break;
      case 15:
        eff.image_speed = 0;
        eff.image_index = 4;
        image_index = 10;
        hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12.60
        hitbox.hitbox_y = size * 21.70
        hitbox.image_xscale = size * 0.26
        hitbox.image_yscale = size * 0.38
    	hitbox.image_angle = 0;
        hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14.70
        hitbox2.hitbox_y = size * 28
        hitbox2.image_xscale = size * 0.27
        hitbox2.image_yscale = size * 0.28
    	hitbox2.image_angle = 350.06;
        hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 18.90
        hitbox3.hitbox_y = size * 35
        hitbox3.image_xscale = size * 0.28
        hitbox3.image_yscale = size * 0.25
    	hitbox3.image_angle = 55.01;
        break;
      case 20:
        eff.image_speed = 0;
        eff.image_index = 5;
    eff.depth = 0; image_index = 11; break;
      case 29:
        with (eff){
          instance_destroy();
        }
      break;
      case 30: image_index = 12; break;
      case 33: image_index = 13; break;
      case 36: image_index = 14; break;
      case 39: image_index = 15; break;
      case 42: image_index = 16; break;

      if (attack_type == "none"){
        if (instance_exists(eff)){
          with (eff){
            instance_destroy();
          }
        }
      }
      case 46:
        attack_type = "none";
        if ( air == 0 )
          state_type = "stand";
          else
          state_type = "jump";
        timer = 0;
        time =-1;
        break;
      }
      }
