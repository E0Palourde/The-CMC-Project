//----------------- Tipper Marth --------------------
if notip = 0 {
if ( state_type == "stand" || state_type == "run" )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "usmash";
  image_speed = 0;
  sprite_index = usmash_sprite;
  image_index = 0;
  timer = 0;
  time = 55;
  timer_speed = 1;
  charge_frame = 9;
  xoff = 18; //Bigger is left
  if facing = 1
  xoff = 19
  effscale = xsize/2
  yoff = 61; //Bigger is up
  }
if timer = 13 {
    eff = create_blur(x,y,self.id);
    eff.sprite_index = dtilt_effect_spr;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2)+size*(22-(45*facing));
    eff.y = y - yoff*size+size*(44+facing*1);
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.depth = -2;
    eff.image_angle = 108+facing*144
    eff2 = create_blur(x,y,self.id);
    eff2.sprite_index = dtilt_effect_spr;
    eff2.image_xscale = (effscale*size)*(1-facing*2);
    eff2.image_yscale = (effscale*size)*-1;
    eff2.x = x - xoff*size*(1-facing*2)+size*(13.5-(28*facing));
    eff2.y = y - yoff*size + size*(44+facing*1);
    eff2.image_speed = 0;
    eff2.image_index = 0;
    eff2.alarm[0] = 40;
    eff2.depth = -2;
    eff2.image_angle = 72+facing*216
}
if timer > 13 && timer < 16 {
    eff.x = x - xoff*size*(1-facing*2)+size*(22-(45*facing));
    eff.y = y - yoff*size+size*(44+facing*1);
    eff2.x = x - xoff*size*(1-facing*2)+size*(13.5-(28*facing));
    eff2.y = y - yoff*size + size*(44+facing*1);
}
if timer >= 16 && timer < 19 {
    eff.image_speed = 0;
    eff.image_index = 1;
    eff2.image_speed = 0;
    eff2.image_index = 1;
    eff.x = x - xoff*size*(1-facing*2)+size*(25.5-(52*facing));
    eff.y = y - yoff*size + size*( 65+facing*1 );
    eff2.x = x - xoff*size*(1-facing*2)+size*(10-(21*facing));
    eff2.y = y - yoff*size + size*(65+facing*1);
}
if timer >= 19 && timer < 22 {
    eff.image_speed = 0;
    eff.image_index = 2;
    eff2.image_speed = 0;
    eff2.image_index = 2;
    eff.x = x - xoff*size*(1-facing*2)+size*(25.5-(52*facing));
    eff.y = y - yoff*size + size*(65+facing*1);
    eff2.x = x - xoff*size*(1-facing*2)+size*(10-(21*facing));
    eff2.y = y - yoff*size + size*(65+facing*1);
}
if timer = 22{
    with (eff){
      instance_destroy();
    }
    with (eff2){
      instance_destroy();
    }
}
  if (attack_type == "none"){
    if (instance_exists(eff)){
      with (eff){
        instance_destroy();
      }
    }
    if (instance_exists(eff2)){
      with (eff2){
        instance_destroy();
      }
    }
  }
switch ( timer )
  {
  case 3: image_index = 1; break;
  case 5: image_index = 2; break;
  case 7: image_index = 3; break;
  case 8: image_index = 4; break;
  case 13:
    attacking = 0;
    image_index = 5;
    sound_play ( swingsnd1 );
    create_hitbox ( 15 , 90 , 6.3 , 6.4 , 10 , 11 , slash2 , obj_spark_slash3 , 0.43 , 0.90 , -0.70 , 39.20 , self.id , 4 , 3 );
    create_hitbox2 ( 17 , 90 , 7.3 , 6.6 , 10 , 11 , slash3 , obj_spark_slash3 , 0.37 , 0.47 , -0.70 , 59.50 , self.id , 4 , 3 );
    create_hitbox3 ( 4 , 118-facing*46 , 5.5 , 0 , 5 , 7 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , -14.70 , 11.20 , self.id , 4 , 1 );
    create_hitbox4 ( 4 , 72+facing*46 , 5.5 , 0 , 5 , 7 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , 13.30 , 11.20 , self.id , 4 , 1 );
    hitbox3.hit_stun = 11
    hitbox4.hit_stun = 11
    break;
  case 16: image_index = 6; break;
  case 34: image_index = 7; break;
  case 36: image_index = 8; break;
  case 38: image_index = 9; break;
  case 40: image_index = 10; break;
  case 42: image_index = 11; break;
  case 44: image_index = 12; break;
  case 46: image_index = 13; interrupt = 1; break;
  case 48: image_index = 14; break;
  case 50: image_index = 15; break;
  case 54:
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    break;
  }
}

//----------------- Spread Marth --------------------
if notip = 1 {
if ( state_type == "stand" || state_type == "run" )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "usmash";
  image_speed = 0;
  sprite_index = usmash_sprite;
  image_index = 0;
  timer = 0;
  time = 55;
  timer_speed = 1;
  charge_frame = 9;
  xoff = 18; //Bigger is left
  if facing = 1
  xoff = 19
  effscale = xsize/2
  yoff = 61; //Bigger is up
  }
if timer = 13 {
    eff = create_blur(x,y,self.id);
    eff.sprite_index = dtilt_effect_spr;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2)+size*(22-(45*facing));
    eff.y = y - yoff*size+size*(44+facing*1);
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.depth = -2;
    eff.image_angle = 108+facing*144
    eff2 = create_blur(x,y,self.id);
    eff2.sprite_index = dtilt_effect_spr;
    eff2.image_xscale = (effscale*size)*(1-facing*2);
    eff2.image_yscale = (effscale*size)*-1;
    eff2.x = x - xoff*size*(1-facing*2)+size*(13.5-(28*facing));
    eff2.y = y - yoff*size + size*(44+facing*1);
    eff2.image_speed = 0;
    eff2.image_index = 0;
    eff2.alarm[0] = 40;
    eff2.depth = -2;
    eff2.image_angle = 72+facing*216
}
if timer > 13 && timer < 16 {
    eff.x = x - xoff*size*(1-facing*2)+size*(22-(45*facing));
    eff.y = y - yoff*size+size*(44+facing*1);
    eff2.x = x - xoff*size*(1-facing*2)+size*(13.5-(28*facing));
    eff2.y = y - yoff*size + size*(44+facing*1);
}
if timer >= 16 && timer < 19 {
    eff.image_speed = 0;
    eff.image_index = 1;
    eff2.image_speed = 0;
    eff2.image_index = 1;
    eff.x = x - xoff*size*(1-facing*2)+size*(25.5-(52*facing));
    eff.y = y - yoff*size + size*(65+facing*1);
    eff2.x = x - xoff*size*(1-facing*2)+size*(10-(21*facing));
    eff2.y = y - yoff*size + size*(65+facing*1);
}
if timer >= 19 && timer < 22 {
    eff.image_speed = 0;
    eff.image_index = 2;
    eff2.image_speed = 0;
    eff2.image_index = 2;
    eff.x = x - xoff*size*(1-facing*2)+size*(25.5-(52*facing));
    eff.y = y - yoff*size + size*(65+facing*1);
    eff2.x = x - xoff*size*(1-facing*2)+size*(10-(21*facing));
    eff2.y = y - yoff*size + size*(65+facing*1);
}
if timer = 22{
    with (eff){
      instance_destroy();
    }
    with (eff2){
      instance_destroy();
    }
}
  if (attack_type == "none"){
    if (instance_exists(eff)){
      with (eff){
        instance_destroy();
      }
    }
    if (instance_exists(eff2)){
      with (eff2){
        instance_destroy();
      }
    }
  }
switch ( timer )
  {
  case 3: image_index = 1; break;
  case 5: image_index = 2; break;
  case 7: image_index = 3; break;
  case 8: image_index = 4; break;
  case 13:
    attacking = 0;
    image_index = 5;
    sound_play ( swingsnd1 );
    create_hitbox ( 13 , 90 , 6.3 , 6.4 , 9 , 10 , slash3 , obj_spark_slash3 , 0.43 , 0.90 , -0.70 , 39.20 , self.id , 4 , 3 );
    create_hitbox2 ( 13 , 90 , 6.3 , 6.4 , 9 , 10 , slash3 , obj_spark_slash3 , 0.37 , 0.47 , -0.70 , 59.50 , self.id , 4 , 3 );
    create_hitbox3 ( 10 , 80+facing*20 , 5.5 , 6.3 , 7 , 8 , slash2 , obj_spark_slash2 , 0.66 , 0.68 , -14.70 , 11.20 , self.id , 4 , 1 );
    create_hitbox4 ( 10 , 100-facing*20 , 5.5 , 6.3 , 7 , 8 , slash2 , obj_spark_slash2 , 0.66 , 0.68 , 13.30 , 11.20 , self.id , 4 , 1 );
    hitbox3.hit_stun = 11
    hitbox4.hit_stun = 11
	if notip = 1 {
    hitbox.hit_stun = 10
    hitbox2.hit_stun = 10
    hitbox3.hit_stun = 10
    hitbox4.hit_stun = 10
    hitbox3.dir = 90
    hitbox4.dir = 90
    hitbox.damage = 16
    hitbox2.damage = 16
    hitbox3.damage = 16
    hitbox4.damage = 16
    hitbox.bkb = 6.8
    hitbox2.bkb = 6.8
    hitbox3.bkb = 6.8
    hitbox4.bkb = 6.8
    hitbox.kbg = 7.1
    hitbox2.kbg = 7.1
    hitbox3.kbg = 7.1
    hitbox4.kbg = 7.1
    hitbox3.shield_damage = 10
    hitbox4.shield_damage = 10
    hitbox3.hitlag_frames = 11
    hitbox4.hitlag_frames = 11
    hitbox3.sfx = slash3
    hitbox4.sfx = slash3
    hitbox3.gfx = obj_spark_slash3
    hitbox4.gfx = obj_spark_slash3
    hitbox3.priority = 3
    hitbox4.priority = 3
	}
    break;
  case 16: image_index = 6; break;
  case 34: image_index = 7; break;
  case 36: image_index = 8; break;
  case 38: image_index = 9; break;
  case 40: image_index = 10; break;
  case 42: image_index = 11; break;
  case 44: image_index = 12; break;
  case 46: image_index = 13; interrupt = 1; break;
  case 48: image_index = 14; break;
  case 50: image_index = 15; break;
  case 54:
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    break;
  }
}

//----------------- Centered Marth --------------------
if notip = 2 {
if ( state_type == "stand" || state_type == "run" )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "usmash";
  image_speed = 0;
  sprite_index = usmash_sprite;
  image_index = 0;
  timer = 0;
  time = 55;
  timer_speed = 1;
  charge_frame = 9;
  xoff = 18; //Bigger is left
  if facing = 1
  xoff = 19
  effscale = xsize/2
  yoff = 61; //Bigger is up
  }
if timer = 13 {
    eff = create_blur(x,y,self.id);
    eff.sprite_index = dtilt_effect_spr;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2)+size*(22-(45*facing));
    eff.y = y - yoff*size+size*(44+facing*1);
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.depth = -2;
    eff.image_angle = 108+facing*144
    eff2 = create_blur(x,y,self.id);
    eff2.sprite_index = dtilt_effect_spr;
    eff2.image_xscale = (effscale*size)*(1-facing*2);
    eff2.image_yscale = (effscale*size)*-1;
    eff2.x = x - xoff*size*(1-facing*2)+size*(13.5-(28*facing));
    eff2.y = y - yoff*size + size*(44+facing*1);
    eff2.image_speed = 0;
    eff2.image_index = 0;
    eff2.alarm[0] = 40;
    eff2.depth = -2;
    eff2.image_angle = 72+facing*216
}
if timer > 13 && timer < 16 {
    eff.x = x - xoff*size*(1-facing*2)+size*(22-(45*facing));
    eff.y = y - yoff*size+size*(44+facing*1);
    eff2.x = x - xoff*size*(1-facing*2)+size*(13.5-(28*facing));
    eff2.y = y - yoff*size + size*(44+facing*1);
}
if timer >= 16 && timer < 19 {
    eff.image_speed = 0;
    eff.image_index = 1;
    eff2.image_speed = 0;
    eff2.image_index = 1;
    eff.x = x - xoff*size*(1-facing*2)+size*(25.5-(52*facing));
    eff.y = y - yoff*size + size*(65+facing*1);
    eff2.x = x - xoff*size*(1-facing*2)+size*(10-(21*facing));
    eff2.y = y - yoff*size + size*(65+facing*1);
}
if timer >= 19 && timer < 22 {
    eff.image_speed = 0;
    eff.image_index = 2;
    eff2.image_speed = 0;
    eff2.image_index = 2;
    eff.x = x - xoff*size*(1-facing*2)+size*(25.5-(52*facing));
    eff.y = y - yoff*size + size*(65+facing*1);
    eff2.x = x - xoff*size*(1-facing*2)+size*(10-(21*facing));
    eff2.y = y - yoff*size + size*(65+facing*1);
}
if timer = 22{
    with (eff){
      instance_destroy();
    }
    with (eff2){
      instance_destroy();
    }
}
  if (attack_type == "none"){
    if (instance_exists(eff)){
      with (eff){
        instance_destroy();
      }
    }
    if (instance_exists(eff2)){
      with (eff2){
        instance_destroy();
      }
    }
  }
switch ( timer )
  {
  case 3: image_index = 1; break;
  case 5: image_index = 2; break;
  case 7: image_index = 3; break;
  case 8: image_index = 4; break;
  case 13:
    attacking = 0;

    image_index = 5;
    sound_play ( swingsnd3 );
    create_hitbox ( 2 , 270 , 1 , 1 , 10 , 3 , slash2 , obj_spark_slash3 , 0.73 , 0.90 , -0.70 , 39.20 , self.id , 2 , 3 );
    create_hitbox2 ( 3 , 90 , 0 , 0 , 10 , 3 , slash3 , obj_spark_slash3 , 0.47 , 0.87 , -0.70 , 59.50 , self.id , 4 , 2 );
    create_hitbox3 ( 1 , 105-facing*75 , 3 , 2 , 5 , 3 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , -14.70 , 11.20 , self.id , 2 , 2 );
    create_hitbox4 ( 1 , 75+facing*30 , 3 , 2 , 5 , 3 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , 13.30 , 11.20 , self.id , 2 , 2 );
    hitbox.di = 0;
    hitbox2.di = 0;
    hitbox3.di = 0;
    hitbox4.di = 0;
    hitbox.charge_dmg = 0.1;
    hitbox2.charge_dmg = 0.1;
    hitbox3.charge_dmg = 0.1;
    hitbox4.charge_dmg = 0.1;
    break;
  case 15:
    attacking = 0;
    image_index = 5;
    create_hitbox ( 2 , 270 , 0 , 0 , 5 , 3 , slash2 , obj_spark_slash3 , 0.73 , 0.90 , -0.70 , 39.20 , self.id , 2 , 2 );
    create_hitbox2 ( 2 , 90 , 0 , 0 , 5 , 3 , slash3 , obj_spark_slash3 , 0.47 , 0.87 , -0.70 , 59.50 , self.id , 4 , 2 );
    create_hitbox3 ( 2 , 105-facing*75 , 1 , 1 , 5 , 3 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , -12.70 , 11.20 , self.id , 2 , 2 );
    create_hitbox4 ( 2 , 75+facing*30 , 1 , 1 , 5 , 3 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , 11.30 , 11.20 , self.id , 2 , 2 );
    hitbox.di = 0;
    hitbox2.di = 0;
    hitbox3.di = 0;
    hitbox4.di = 0;
    hitbox.charge_dmg = 0.1;
    hitbox2.charge_dmg = 0.1;
    hitbox3.charge_dmg = 0.1;
    hitbox4.charge_dmg = 0.1;
    break;
  case 17:
    attacking = 0;
    image_index = 6;
    create_hitbox ( 2 , 270 , 0 , 0 , 5 , 3 , slash1 , obj_spark_slash2 , 0.73 , 0.90 , -0.70 , 39.20 , self.id , 2 , 2 );
    create_hitbox2 ( 2 , 90 , 0 , 0 , 5 , 3 , slash1 , obj_spark_slash2 , 0.77 , 0.87 , -0.70 , 59.50 , self.id , 2 , 2 );
    create_hitbox3 ( 2 , 105-facing*75 , 0 , 0 , 5 , 3 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , -10.70 , 11.20 , self.id , 2 , 2 );
    create_hitbox4 ( 2 , 75+facing*30 , 0 , 0 , 5 , 3 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , 9.30 , 11.20 , self.id , 2 , 2 );
    hitbox.di = 0;
    hitbox2.di = 0;
    hitbox3.di = 0;
    hitbox4.di = 0;
    hitbox.charge_dmg = 0.1;
    hitbox2.charge_dmg = 0.1;
    hitbox3.charge_dmg = 0.1;
    hitbox4.charge_dmg = 0.1;
    break;
  case 19:
    attacking = 0;
    image_index = 6;
    create_hitbox ( 2 , 270 , 0 , 0 , 5 , 3 , slash1 , obj_spark_slash2 , 0.73 , 1.00 , -0.70 , 39.20 , self.id , 2 , 2 );
    create_hitbox2 ( 2 , 90 , 0 , 0 , 5 , 3 , slash1 , obj_spark_slash2 , 0.87 , 0.97 , -0.70 , 59.50 , self.id , 2 , 2 );
    create_hitbox3 ( 2 , 105-facing*75 , 0 , 0 , 5 , 3 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , -10.70 , 11.20 , self.id , 2 , 2 );
    create_hitbox4 ( 2 , 75+facing*30 , 0 , 0 , 5 , 3 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , 9.30 , 11.20 , self.id , 2 , 2 );
    hitbox.di = 0;
    hitbox2.di = 0;
    hitbox3.di = 0;
    hitbox4.di = 0;
    hitbox.charge_dmg = 0.1;
    hitbox2.charge_dmg = 0.1;
    hitbox3.charge_dmg = 0.1;
    hitbox4.charge_dmg = 0.1;
    break;
  case 22:
    attacking = 0;
    image_index = 7;
    create_hitbox ( 17 , 90 , 6.5 , 6.4 , 10 , 11 , slash2 , obj_spark_slash3 , 0.93 , 1.10 , -0.70 , 39.20 , self.id , 4 , 3 );
    create_hitbox2 ( 15 , 90 , 5.5 , 6.4 , 10 , 11 , slash3 , obj_spark_slash3 , 0.87 , 0.97 , -0.70 , 59.50 , self.id , 4 , 2 );
    create_hitbox3 ( 10 , 90 , 4.5 , 5.5 , 5 , 7 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , -10.70 , 11.20 , self.id , 4 , 1 );
    create_hitbox4 ( 10 , 90 , 4.5 , 5.5 , 5 , 7 , slash1 , obj_spark_slash2 , 0.66 , 0.68 , 9.30 , 11.20 , self.id , 4 , 1 );
    hitbox3.di = 0;
    hitbox4.di = 0;
    break;
  case 34: image_index = 7; break;
  case 36: image_index = 8; break;
  case 38: image_index = 9; break;
  case 40: image_index = 10; break;
  case 42: image_index = 11; break;
  case 44: image_index = 12; break;
  case 46: image_index = 13; interrupt = 1; break;
  case 48: image_index = 14; break;
  case 50: image_index = 15; break;
  case 54:
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    break;
  }
}
