//----------------- Tipper Marth --------------------
if notip = 0 {
if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "nair";
  image_speed = 0;
  sprite_index = nair_sprite;
  image_index = 0;
  timer = 0;
  time = 34;
  timer_speed = 1;
  xoff = 44; //Bigger is left
  if facing = 1
  xoff = 45
  effscale = xsize/2
  yoff = 53; //Bigger is up
  }

if timer = 6 {
    eff = create_blur(x,y,self.id);
    eff.sprite_index = nair_effect_spr;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2);
    eff.y = y - yoff*size;
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.snap = self.id
    eff.depth = -2;
}
if timer = 8 {
    eff.image_speed = 0;
    eff.image_index = 1;
}
if timer = 10 {
    eff.image_speed = 0;
    eff.image_index = 2;
}
if timer = 12 {
    eff.image_speed = 0;
    eff.image_index = 3;
}
if timer = 15 {
    eff.image_speed = 0;
    eff.image_index = 4;
}
if timer = 16 {
    eff.image_speed = 0;
    eff.image_index = 5;
    eff.depth = 2;
}
if timer = 17 {
    eff.image_speed = 0;
    eff.image_index = 6;
    eff.depth = -2;
}
if timer = 18 {
    eff.image_speed = 0;
    eff.image_index = 7;
}
if timer = 19 {
    eff.image_speed = 0;
    eff.image_index = 8;
}
if timer = 20 {
    eff.image_speed = 0;
    eff.image_index = 9;
}
  if timer = 21 {
    with (eff){
      instance_destroy();
    } 
}
  if (attack_type == "none"){
    if (instance_exists(eff)){
      with (eff){
        instance_destroy();
      }
    }
  }
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 5: image_index = 3; break;
  case 6:
    sound_play ( swingsnd1 );
	create_hitbox ( 3 , 100-facing*20 , 4 , 0 , 3 , 5 , slash1 , obj_spark_slash2 , 0.39 , 0.56 , -1.40 , 26.60 , self.id , 2 , 1 );
	hitbox.image_angle = 345.53;
    create_hitbox2 ( 3 , 100-facing*20 , 4 , 0 , 3 , 5 , slash1 , obj_spark_slash2 , 0.52 , 0.34 , 11.20 , 27.30 , self.id , 2 , 1 );
	hitbox2.image_angle = 343.91;
    create_hitbox3 ( 3 , 90 , 4 , 0 , 3 , 4 , slash1 , obj_spark_slash2 , 0.36 , 0.28 , 23.10 , 22.40 , self.id , 2 , 2 );
	hitbox3.image_angle = 339.68;
	create_hitbox4 ( 6 , 100-facing*20 , 4 , 0 , 3 , 7 , slash2 , obj_spark_slash3 , 0.37 , 0.28 , 33.60 , 18.20 , self.id , 2 , 3 );
	hitbox4.image_angle = 345.96;
	hitbox.di = 0.3;
	hitbox2.di = 0.3;
	hitbox3.di = 0.3;
	hitbox4.di = 0.3;
    image_index = 4;
    break;
  case 8: image_index = 5; break;
  case 10: image_index = 6; break;
  case 12: image_index = 7; break;
  case 14: image_index = 8; break;
  case 15:
    sound_play ( swingsnd2 );
	create_hitbox ( 7 , 42+facing*96 , 5.8 , 5 , 5 , 6 , slash3 , obj_spark_slash3 , 0.39 , 0.52 , 3.50 , 25.90 , self.id , 7 , 2 );
	hitbox.image_angle = 354.17;
    create_hitbox2 ( 7 , 42+facing*96 , 5.2 , 5 , 5 , 6 , slash3 , obj_spark_slash3 , 0.49 , 0.32 , 14.70 , 26.60 , self.id , 7 , 2 );
	hitbox2.image_angle = 352.87;
    create_hitbox3 ( 6 , 42+facing*96 , 5.1 , 5 , 5, 6 , slash2 , obj_spark_slash2 , 0.36 , 0.29 , 27.30 , 22.40 , self.id , 7 , 2 );
	hitbox3.image_angle = 345.26;
	create_hitbox4 ( 10 , 42+facing*96 , 6.1 , 5.85 , 10, 12 , slash3 , obj_spark_slash4 , 0.39 , 0.30 , 37.10 , 17.50 , self.id , 7 , 3 );
	hitbox4.image_angle = 339.68;
    hitbox.hit_stun = 9
	hitbox2.hit_stun = 9
    hitbox3.hit_stun = 9
    hitbox4.hit_stun = 9
    image_index = 9;
    break;
  case 16:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 21.70
    hitbox.image_xscale = size * 0.18
    hitbox.image_yscale = size * 0.26
	hitbox.image_angle = 20.70;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -1.40
    hitbox2.hitbox_y = size * 31.50
    hitbox2.image_xscale = size * 0.18
    hitbox2.image_yscale = size * 0.29
	hitbox2.image_angle = 311.01;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 2.10
    hitbox3.hitbox_y = size * 28
    hitbox3.image_xscale = size * 0.17
    hitbox3.image_yscale = size * 0.28
	hitbox3.image_angle = 322.43;
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7
    hitbox4.hitbox_y = size * 23.80
    hitbox4.image_xscale = size * 0.27
    hitbox4.image_yscale = size * 0.27
	hitbox4.image_angle = 0;
    image_index = 10;
    break;
  case 17:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 1.40
    hitbox.hitbox_y = size * 27.30
    hitbox.image_xscale = size * 0.45
    hitbox.image_yscale = size * 0.59
	hitbox.image_angle = 0;
	//hitbox.dir = 138-facing*96
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -10.50
    hitbox2.hitbox_y = size * 35
    hitbox2.image_xscale = size * 0.48
    hitbox2.image_yscale = size * 0.34
	hitbox2.image_angle = 345.62;
	hitbox2.dir = 138-facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -21.70
    hitbox3.hitbox_y = size * 38.50
    hitbox3.image_xscale = size * 0.36
    hitbox3.image_yscale = size * 0.27
	hitbox3.image_angle = 353.16;
	hitbox3.dir = 138-facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -31.50
    hitbox4.hitbox_y = size * 40.60
    hitbox4.image_xscale = size * 0.32
    hitbox4.image_yscale = size * 0.26
	hitbox4.image_angle = 352.57;
	hitbox4.dir = 138-facing*96
    image_index = 11;
    break;
  case 18:
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 3.50
    hitbox.hitbox_y = size * 25.20
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.56
	hitbox.image_angle = 0;
	//hitbox.dir = 138-facing*96
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -0.70
    hitbox2.hitbox_y = size * 30.10
    hitbox2.image_xscale = size * 0.30
    hitbox2.image_yscale = size * 0.22
	hitbox2.image_angle = 0;
	hitbox2.dir = 138-facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -8.40
    hitbox3.hitbox_y = size * 34.30
    hitbox3.image_xscale = size * 0.31
    hitbox3.image_yscale = size * 0.28
	hitbox3.image_angle = 349.70;
	hitbox3.dir = 138-facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16.80
    hitbox4.hitbox_y = size * 38.50
    hitbox4.image_xscale = size * 0.35
    hitbox4.image_yscale = size * 0.28
	hitbox4.image_angle = 342.35;
	hitbox4.dir = 138-facing*96
	image_index = 12;
	break;
  case 19:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 24.50
    hitbox.image_xscale = size * 0.40
    hitbox.image_yscale = size * 0.57
	hitbox.image_angle = 0;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7.70
    hitbox2.hitbox_y = size * 25.90
    hitbox2.image_xscale = size * 0.34
    hitbox2.image_yscale = size * 0.22
	hitbox2.image_angle = 351.25;
	hitbox2.dir = 42+facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12.60
    hitbox3.hitbox_y = size * 21.70
    hitbox3.image_xscale = size * 0.27
    hitbox3.image_yscale = size * 0.20
	hitbox3.image_angle = 37.69;
	hitbox3.dir = 42+facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 16.10
    hitbox4.hitbox_y = size * 18.20
    hitbox4.image_xscale = size * 0.26
    hitbox4.image_yscale = size * 0.19
	hitbox4.image_angle = 28.07;
	hitbox4.dir = 42+facing*96
	image_index = 13;
	break;
  case 20:
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 23.80
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.52
	hitbox.image_angle = 0;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 13.30
    hitbox2.hitbox_y = size * 24.50
    hitbox2.image_xscale = size * 0.45
    hitbox2.image_yscale = size * 0.32
	hitbox2.image_angle = 348.11;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 23.80
    hitbox3.hitbox_y = size * 19.60
    hitbox3.image_xscale = size * 0.35
    hitbox3.image_yscale = size * 0.26
	hitbox3.image_angle = 333.43;
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 32.20
    hitbox4.hitbox_y = size * 14
    hitbox4.image_xscale = size * 0.34
    hitbox4.image_yscale = size * 0.26
	hitbox4.image_angle = 341.57;
	image_index = 14;
	break;
  case 22: image_index = 15; break;
  case 25: image_index = 16; break;
  case 28: image_index = 17; break;
  case 31: image_index = 18; break;
  case 33: interrupt = 1; break;
  case 34: image_index = 19; break;
  }
}

//----------------- Spread Marth --------------------
if notip = 1 {
if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "nair";
  image_speed = 0;
  sprite_index = nair_sprite;
  image_index = 0;
  timer = 0;
  time = 34;
  timer_speed = 1;
  xoff = 44; //Bigger is left
  if facing = 1
  xoff = 45
  effscale = xsize/2
  yoff = 53; //Bigger is up
  }

if timer = 6 {
    eff = create_blur(x,y,self.id);
    eff.sprite_index = nair_effect_spr;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2);
    eff.y = y - yoff*size;
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.snap = self.id
    eff.depth = -2;
}
if timer = 8 {
    eff.image_speed = 0;
    eff.image_index = 1;
}
if timer = 10 {
    eff.image_speed = 0;
    eff.image_index = 2;
}
if timer = 12 {
    eff.image_speed = 0;
    eff.image_index = 3;
}
if timer = 15 {
    eff.image_speed = 0;
    eff.image_index = 4;
}
if timer = 16 {
    eff.image_speed = 0;
    eff.image_index = 5;
    eff.depth = 2;
}
if timer = 17 {
    eff.image_speed = 0;
    eff.image_index = 6;
    eff.depth = -2;
}
if timer = 18 {
    eff.image_speed = 0;
    eff.image_index = 7;
}
if timer = 19 {
    eff.image_speed = 0;
    eff.image_index = 8;
}
if timer = 20 {
    eff.image_speed = 0;
    eff.image_index = 9;
}
  if timer = 21 {
    with (eff){
      instance_destroy();
    } 
}
  if (attack_type == "none"){
    if (instance_exists(eff)){
      with (eff){
        instance_destroy();
      }
    }
  }

switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 5: image_index = 3; break;
  case 6:
    sound_play ( swingsnd1 );
	create_hitbox ( 4 , 100-facing*20 , 4 , 0 , 3 , 6 , slash1 , obj_spark_slash2 , 0.39 , 0.56 , -1.40 , 26.60 , self.id , 2 , 2 );
	hitbox.image_angle = 345.53;
    create_hitbox2 ( 4 , 100-facing*20 , 4 , 0 , 3 , 6 , slash1 , obj_spark_slash2 , 0.52 , 0.34 , 11.20 , 27.30 , self.id , 2 , 2 );
	hitbox2.image_angle = 343.91;
    create_hitbox3 ( 4 , 90 , 4 , 0 , 3 , 5 , slash1 , obj_spark_slash2 , 0.36 , 0.28 , 23.10 , 22.40 , self.id , 2 , 2 );
	hitbox3.image_angle = 339.68;
	create_hitbox4 ( 4 , 100-facing*20 , 4 , 0 , 3 , 6 , slash2 , obj_spark_slash3 , 0.37 , 0.28 , 33.60 , 18.20 , self.id , 2 , 2 );
	hitbox4.image_angle = 345.96;
	hitbox.di = 0.3;
	hitbox2.di = 0.3;
	hitbox3.di = 0.3;
	hitbox4.di = 0.3;
	if notip = 1 {
    hitbox.damage = 4
	hitbox2.damage = 4
    hitbox3.damage = 4
    hitbox4.damage = 4
    hitbox3.dir = 100-facing*20
    hitbox.bkb = 4.4
	hitbox2.bkb = 4.4
    hitbox3.bkb = 4.4
    hitbox4.bkb = 4.4
    hitbox.hitlag_frames = 7
    hitbox3.hitlag_frames = 7
    hitbox4.hitlag_frames = 7
	hitbox.sfx = slash2
	hitbox2.sfx = slash2
    hitbox3.sfx = slash2
    hitbox3.gfx = obj_spark_slash2
    hitbox4.gfx = obj_spark_slash2
	}
    image_index = 4;
    break;
  case 8: image_index = 5; break;
  case 10: image_index = 6; break;
  case 12: image_index = 7; break;
  case 14: image_index = 8; break;
  case 15:
    sound_play ( swingsnd2 );
	create_hitbox ( 8 , 42+facing*96 , 5.8 , 5 , 7 , 9 , slash3 , obj_spark_slash3 , 0.39 , 0.52 , 3.50 , 25.90 , self.id , 7 , 2 );
	hitbox.image_angle = 354.17;
    create_hitbox2 ( 8 , 42+facing*96 , 5.2 , 5 , 7 , 9 , slash3 , obj_spark_slash3 , 0.49 , 0.32 , 14.70 , 26.60 , self.id , 7 , 2 );
	hitbox2.image_angle = 352.87;
    create_hitbox3 ( 8 , 42+facing*96 , 5.1 , 5 , 7, 9 , slash2 , obj_spark_slash2 , 0.36 , 0.29 , 27.30 , 22.40 , self.id , 7 , 2 );
	hitbox3.image_angle = 345.26;
	create_hitbox4 ( 8 , 42+facing*96 , 6.1 , 5 , 7 , 9 , slash3 , obj_spark_slash4 , 0.39 , 0.30 , 37.10 , 17.50 , self.id , 7 , 2 );
	hitbox4.image_angle = 339.68;
    hitbox.hit_stun = 9
	hitbox2.hit_stun = 9
    hitbox3.hit_stun = 9
    hitbox4.hit_stun = 9
	if notip = 1 {
    hitbox.damage = 8
	hitbox2.damage = 8
    hitbox3.damage = 8
    hitbox4.damage = 8
    hitbox.bkb = 5.85
	hitbox2.bkb = 5.85
    hitbox3.bkb = 5.85
    hitbox4.bkb = 5.85
    hitbox.kbg = 5.3
	hitbox2.kbg = 5.3
    hitbox3.kbg = 5.3
    hitbox4.kbg = 5.3
    hitbox.shield_damage = 8
	hitbox2.shield_damage = 8
    hitbox3.shield_damage = 8
    hitbox4.shield_damage = 8
    hitbox.hitlag_frames = 10
	hitbox2.hitlag_frames = 10
    hitbox3.hitlag_frames = 10
    hitbox4.hitlag_frames = 10
    hitbox4.sfx = slash3
    hitbox4.gfx = obj_spark_slash3
    hitbox3.gfx = obj_spark_slash3
	}
    image_index = 9;
    break;
  case 16:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 21.70
    hitbox.image_xscale = size * 0.18
    hitbox.image_yscale = size * 0.26
	hitbox.image_angle = 20.70;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -1.40
    hitbox2.hitbox_y = size * 31.50
    hitbox2.image_xscale = size * 0.18
    hitbox2.image_yscale = size * 0.29
	hitbox2.image_angle = 311.01;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 2.10
    hitbox3.hitbox_y = size * 28
    hitbox3.image_xscale = size * 0.17
    hitbox3.image_yscale = size * 0.28
	hitbox3.image_angle = 322.43;
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7
    hitbox4.hitbox_y = size * 23.80
    hitbox4.image_xscale = size * 0.27
    hitbox4.image_yscale = size * 0.27
	hitbox4.image_angle = 0;
    image_index = 10;
    break;
  case 17:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 1.40
    hitbox.hitbox_y = size * 27.30
    hitbox.image_xscale = size * 0.45
    hitbox.image_yscale = size * 0.59
	hitbox.image_angle = 0;
	//hitbox.dir = 138-facing*96
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -10.50
    hitbox2.hitbox_y = size * 35
    hitbox2.image_xscale = size * 0.48
    hitbox2.image_yscale = size * 0.34
	hitbox2.image_angle = 345.62;
	hitbox2.dir = 138-facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -21.70
    hitbox3.hitbox_y = size * 38.50
    hitbox3.image_xscale = size * 0.36
    hitbox3.image_yscale = size * 0.27
	hitbox3.image_angle = 353.16;
	hitbox3.dir = 138-facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -31.50
    hitbox4.hitbox_y = size * 40.60
    hitbox4.image_xscale = size * 0.32
    hitbox4.image_yscale = size * 0.26
	hitbox4.image_angle = 352.57;
	hitbox4.dir = 138-facing*96
    image_index = 11;
    break;
  case 18:
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 3.50
    hitbox.hitbox_y = size * 25.20
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.56
	hitbox.image_angle = 0;
	//hitbox.dir = 138-facing*96
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -0.70
    hitbox2.hitbox_y = size * 30.10
    hitbox2.image_xscale = size * 0.30
    hitbox2.image_yscale = size * 0.22
	hitbox2.image_angle = 0;
	hitbox2.dir = 138-facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -8.40
    hitbox3.hitbox_y = size * 34.30
    hitbox3.image_xscale = size * 0.31
    hitbox3.image_yscale = size * 0.28
	hitbox3.image_angle = 349.70;
	hitbox3.dir = 138-facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16.80
    hitbox4.hitbox_y = size * 38.50
    hitbox4.image_xscale = size * 0.35
    hitbox4.image_yscale = size * 0.28
	hitbox4.image_angle = 342.35;
	hitbox4.dir = 138-facing*96
	image_index = 12;
	break;
  case 19:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 24.50
    hitbox.image_xscale = size * 0.40
    hitbox.image_yscale = size * 0.57
	hitbox.image_angle = 0;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7.70
    hitbox2.hitbox_y = size * 25.90
    hitbox2.image_xscale = size * 0.34
    hitbox2.image_yscale = size * 0.22
	hitbox2.image_angle = 351.25;
	hitbox2.dir = 42+facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12.60
    hitbox3.hitbox_y = size * 21.70
    hitbox3.image_xscale = size * 0.27
    hitbox3.image_yscale = size * 0.20
	hitbox3.image_angle = 37.69;
	hitbox3.dir = 42+facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 16.10
    hitbox4.hitbox_y = size * 18.20
    hitbox4.image_xscale = size * 0.26
    hitbox4.image_yscale = size * 0.19
	hitbox4.image_angle = 28.07;
	hitbox4.dir = 42+facing*96
	image_index = 13;
	break;
  case 20:
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 23.80
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.52
	hitbox.image_angle = 0;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 13.30
    hitbox2.hitbox_y = size * 24.50
    hitbox2.image_xscale = size * 0.45
    hitbox2.image_yscale = size * 0.32
	hitbox2.image_angle = 348.11;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 23.80
    hitbox3.hitbox_y = size * 19.60
    hitbox3.image_xscale = size * 0.35
    hitbox3.image_yscale = size * 0.26
	hitbox3.image_angle = 333.43;
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 32.20
    hitbox4.hitbox_y = size * 14
    hitbox4.image_xscale = size * 0.34
    hitbox4.image_yscale = size * 0.26
	hitbox4.image_angle = 341.57;
	image_index = 14;
	break;
  case 22: image_index = 15; break;
  case 25: image_index = 16; break;
  case 28: image_index = 17; break;
  case 31: image_index = 18; break;
  case 33: interrupt = 1; break;
  case 34: image_index = 19; break;
  }
}

//----------------- Centered Marth --------------------
if notip = 2 {
if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "nair";
  image_speed = 0;
  sprite_index = nair_sprite;
  image_index = 0;
  timer = 0;
  time = 34;
  timer_speed = 1;
  xoff = 44; //Bigger is left
  if facing = 1
  xoff = 45
  effscale = xsize/2
  yoff = 53; //Bigger is up
  }
if timer = 6 {
    eff = create_blur(x,y,self.id);
    eff.sprite_index = nair_effect_spr;
    eff.image_xscale = (effscale*size)*(1-facing*2);
    eff.image_yscale = (effscale*size);
    eff.x = x - xoff*size*(1-facing*2);
    eff.y = y - yoff*size;
    eff.image_speed = 0;
    eff.image_index = 0;
    eff.alarm[0] = 40;
    eff.snap = self.id
    eff.depth = -2;
}
if timer = 8 {
    eff.image_speed = 0;
    eff.image_index = 1;
}
if timer = 10 {
    eff.image_speed = 0;
    eff.image_index = 2;
}
if timer = 12 {
    eff.image_speed = 0;
    eff.image_index = 3;
}
if timer = 15 {
    eff.image_speed = 0;
    eff.image_index = 4;
}
if timer = 16 {
    eff.image_speed = 0;
    eff.image_index = 5;
    eff.depth = 2;
}
if timer = 17 {
    eff.image_speed = 0;
    eff.image_index = 6;
    eff.depth = -2;
}
if timer = 18 {
    eff.image_speed = 0;
    eff.image_index = 7;
}
if timer = 19 {
    eff.image_speed = 0;
    eff.image_index = 8;
}
if timer = 20 {
    eff.image_speed = 0;
    eff.image_index = 9;
}
  if timer = 21 {
    with (eff){
      instance_destroy();
    } 
}
  if (attack_type == "none"){
    if (instance_exists(eff)){
      with (eff){
        instance_destroy();
      }
    }
  }

switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 5: image_index = 3; break;
  case 6:
    sound_play ( swingsnd1 );
	create_hitbox ( 5 , 100-facing*20 , 4 , 0 , 3 , 6 , slash1 , obj_spark_slash2 , 0.39 , 0.56 , -1.40 , 26.60 , self.id , 2 , 2 );
	hitbox.image_angle = 345.53;
    create_hitbox2 ( 6 , 100-facing*20 , 4 , 0 , 3 , 7 , slash1 , obj_spark_slash2 , 0.52 , 0.34 , 11.20 , 27.30 , self.id , 2 , 3 );
	hitbox2.image_angle = 343.91;
    create_hitbox3 ( 3 , 100-facing*20 , 4 , 0 , 3 , 4 , slash1 , obj_spark_slash2 , 0.36 , 0.28 , 23.10 , 22.40 , self.id , 2 , 1 );
	hitbox3.image_angle = 339.68;
	create_hitbox4 ( 2 , 90 , 4 , 0 , 3 , 5 , punch3 , obj_spark_slash1 , 0.37 , 0.28 , 33.60 , 18.20 , self.id , 2 , 1 );
	hitbox4.image_angle = 345.96;
	hitbox.di = 0.3;
	hitbox2.di = 0.3;
	hitbox3.di = 0.3;
	hitbox4.di = 0.3;
	if notip = 2 {
	hitbox4.dir = 90
	hitbox3.dir = 100-facing*20
	hitbox.gfx = obj_spark_slash3
	hitbox2.gfx = obj_spark_slash3
	}
    image_index = 4;
    break;
  case 8: image_index = 5; break;
  case 10: image_index = 6; break;
  case 12: image_index = 7; break;
  case 14: image_index = 8; break;
  case 15:
    sound_play ( swingsnd2 );
    create_hitbox2 ( 12 , 42+facing*96 , 6.1 , 6.15 , 10 , 12 , slash3 , obj_spark_slash3 , 0.49 , 0.32 , 14.70 , 26.60 , self.id , 7 , 3 );
	hitbox2.image_angle = 352.87;
    create_hitbox3 ( 11 , 42+facing*96 , 5.8 , 5.9 , 9 , 10 , slash3 , obj_spark_slash3 , 0.36 , 0.29 , 27.30 , 22.40 , self.id , 7 , 2 );
	hitbox3.image_angle = 345.26;
	create_hitbox ( 9 , 42+facing*96 , 5.5 , 5.4 , 6 , 8 , slash3 , obj_spark_slash3 , 0.39 , 0.52 , 3.50 , 25.90 , self.id , 7 , 3 );
	hitbox.image_angle = 354.17;
	create_hitbox4 ( 8 , 42+facing*96 , 5.1 , 5 , 5 , 6 , punch3 , obj_spark_slash1 , 0.39 , 0.30 , 37.10 , 17.50 , self.id , 7 , 2 );
	hitbox4.image_angle = 339.68;
    hitbox.hit_stun = 9
	hitbox2.hit_stun = 9
    hitbox3.hit_stun = 9
    hitbox4.hit_stun = 5
	if notip = 2 {
	hitbox.gfx = obj_spark_slash4
	hitbox2.gfx = obj_spark_slash4
	}
    image_index = 9;
    break;
  case 16:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 21.70
    hitbox.image_xscale = size * 0.18
    hitbox.image_yscale = size * 0.26
	hitbox.image_angle = 20.70;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -1.40
    hitbox2.hitbox_y = size * 31.50
    hitbox2.image_xscale = size * 0.18
    hitbox2.image_yscale = size * 0.29
	hitbox2.image_angle = 311.01;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 2.10
    hitbox3.hitbox_y = size * 28
    hitbox3.image_xscale = size * 0.17
    hitbox3.image_yscale = size * 0.28
	hitbox3.image_angle = 322.43;
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7
    hitbox4.hitbox_y = size * 23.80
    hitbox4.image_xscale = size * 0.27
    hitbox4.image_yscale = size * 0.27
	hitbox4.image_angle = 0;
    image_index = 10;
    break;
  case 17:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 1.40
    hitbox.hitbox_y = size * 27.30
    hitbox.image_xscale = size * 0.45
    hitbox.image_yscale = size * 0.59
	hitbox.image_angle = 0;
	//hitbox.dir = 138-facing*96
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -10.50
    hitbox2.hitbox_y = size * 35
    hitbox2.image_xscale = size * 0.48
    hitbox2.image_yscale = size * 0.34
	hitbox2.image_angle = 345.62;
	hitbox2.dir = 138-facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -21.70
    hitbox3.hitbox_y = size * 38.50
    hitbox3.image_xscale = size * 0.36
    hitbox3.image_yscale = size * 0.27
	hitbox3.image_angle = 353.16;
	hitbox3.dir = 138-facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -31.50
    hitbox4.hitbox_y = size * 40.60
    hitbox4.image_xscale = size * 0.32
    hitbox4.image_yscale = size * 0.26
	hitbox4.image_angle = 352.57;
	hitbox4.dir = 138-facing*96
    image_index = 11;
    break;
  case 18:
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 3.50
    hitbox.hitbox_y = size * 25.20
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.56
	hitbox.image_angle = 0;
	//hitbox.dir = 138-facing*96
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -0.70
    hitbox2.hitbox_y = size * 30.10
    hitbox2.image_xscale = size * 0.30
    hitbox2.image_yscale = size * 0.22
	hitbox2.image_angle = 0;
	hitbox2.dir = 138-facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -8.40
    hitbox3.hitbox_y = size * 34.30
    hitbox3.image_xscale = size * 0.31
    hitbox3.image_yscale = size * 0.28
	hitbox3.image_angle = 349.70;
	hitbox3.dir = 138-facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16.80
    hitbox4.hitbox_y = size * 38.50
    hitbox4.image_xscale = size * 0.35
    hitbox4.image_yscale = size * 0.28
	hitbox4.image_angle = 342.35;
	hitbox4.dir = 138-facing*96
	image_index = 12;
	break;
  case 19:
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 24.50
    hitbox.image_xscale = size * 0.40
    hitbox.image_yscale = size * 0.57
	hitbox.image_angle = 0;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7.70
    hitbox2.hitbox_y = size * 25.90
    hitbox2.image_xscale = size * 0.34
    hitbox2.image_yscale = size * 0.22
	hitbox2.image_angle = 351.25;
	hitbox2.dir = 42+facing*96
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12.60
    hitbox3.hitbox_y = size * 21.70
    hitbox3.image_xscale = size * 0.27
    hitbox3.image_yscale = size * 0.20
	hitbox3.image_angle = 37.69;
	hitbox3.dir = 42+facing*96
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 16.10
    hitbox4.hitbox_y = size * 18.20
    hitbox4.image_xscale = size * 0.26
    hitbox4.image_yscale = size * 0.19
	hitbox4.image_angle = 28.07;
	hitbox4.dir = 42+facing*96
	image_index = 13;
	break;
  case 20:
	hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
    hitbox.hitbox_y = size * 23.80
    hitbox.image_xscale = size * 0.39
    hitbox.image_yscale = size * 0.52
	hitbox.image_angle = 0;
	hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 13.30
    hitbox2.hitbox_y = size * 24.50
    hitbox2.image_xscale = size * 0.45
    hitbox2.image_yscale = size * 0.32
	hitbox2.image_angle = 348.11;
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 23.80
    hitbox3.hitbox_y = size * 19.60
    hitbox3.image_xscale = size * 0.35
    hitbox3.image_yscale = size * 0.26
	hitbox3.image_angle = 333.43;
    hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 32.20
    hitbox4.hitbox_y = size * 14
    hitbox4.image_xscale = size * 0.34
    hitbox4.image_yscale = size * 0.26
	hitbox4.image_angle = 341.57;
	image_index = 14;
	break;
  case 22: image_index = 15; break;
  case 25: image_index = 16; break;
  case 28: image_index = 17; break;
  case 31: image_index = 18; break;
  case 33: interrupt = 1; break;
  case 34: image_index = 19; break;
  }
}

//----------------- Every Marth --------------------
if ( air == 0 )
  {
  state_type = "land";
  attack_type = "none";
  sprite_index = land_sprite;
  if notip = 0
    time = 7; // Tipper landing lag
  if notip = 1
    time = 7; // Spread landing lag
  if notip = 2
    time = 7; // Centered landing lag
  timer = 0;
  }
if (timer >= time -1 && state_type != "flinch" && state_type != "air_flinch")
{
    attack_type = "none";
    if ( air > 0 )
	{
    state_type = "jump";
	sprite_index = jump_sprite;
    image_index = 5;
    image_speed = 0;
	}
    else
	{
    state_type = "stand";
	}
    timer = 0;
    time = -1;
}
