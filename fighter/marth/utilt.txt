//----------------- Tipper Marth --------------------
if notip = 0 {
    if (state_type == "stand" || state_type == "run") {
        hspeed = 0;
        state_type = "attack";
        attack_type = "utilt";
        image_speed = 0;
        sprite_index = utilt_sprite;
        image_index = 0;
        timer = 0;
        time = 29;
        timer_speed = 1;
        xoff = 42; //greater is left
        if (facing == 1) {
            xoff = 44;
        }
        yoff = 78; //greater is up
        effscale = xsize / 2.0
    }

    switch (timer) {
        case 0:
            image_index = 0;
            eff = create_sword_trail(self.id, 9, 30, sword_texture);
            break;
        case 2:
            image_index = 1;
            break;
        case 4:
            image_index = 2;
            break;
        case 5:
            image_index = 3;
            break;
        case 6:
            play_attack_voice();
            attacking = 0;
            image_index = 4;
            //eff = create_blur(x,y,self.id);

            sound_play(swingsnd2);
            create_hitbox2(9, 110 - facing * 40, 5.85, 4.8, 6, 6, slash2, obj_spark_slash2, 0.575, 0.44, 23.50, 21, self.id, 6, 2);
            hitbox2.image_angle = 25.16 + facing * 129.68;
            create_hitbox(8, 366 + facing, 5.75, 5.25, 6, 6, slash2, obj_spark_slash2, 0.63, 0.32, 14.70, 30.10, self.id, 6, 2);
            hitbox.image_angle = 0 + facing * 180;
            create_hitbox3(12, 110 - facing * 40, 6.6, 4.9, 8, 9, slash3, obj_spark_slash3, 0.59, 0.44, 27.50, 11, self.id, 6, 3);
            hitbox3.image_angle = 30.40 + facing * 119.2;
            hitbox.hit_stun = 4;
            hitbox2.hit_stun = 5;
            hitbox3.hit_stun = 8;
            hitbox.di = 1.1;
            hitbox2.di = 1.1;
            hitbox3.di = 1.1;
            break;
        case 7:
            hitbox.image_xscale = 0.35 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.55 * size;
            hitbox.hitbox_x = 13.60 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 37.40 * size;
            hitbox.image_angle = 340.29 - facing * 140.58;
            hitbox2.image_xscale = 0.43 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.68 * size;
            hitbox2.hitbox_x = 24.20 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 41.20 * size;
            hitbox2.image_angle = 15.2 + facing * 149.6;
            hitbox3.image_xscale = 0.4 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.9 * size;
            hitbox3.hitbox_x = 34.5 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 44.80 * size;
            hitbox3.image_angle = 31.32 + facing * 117.36;
            image_index = 5;

            break;
        case 8:
            hitbox.image_xscale = 0.35 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.49 * size;
            hitbox.hitbox_x = 2.80 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 42.70 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.61 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.37 * size;
            hitbox2.hitbox_x = 6.40 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 52.50 * size;
            hitbox2.image_angle = 0 + facing * 180;
            hitbox3.image_xscale = 0.68 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.40 * size;
            hitbox3.hitbox_x = 8 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 63.00 * size;
            hitbox3.image_angle = 350 - facing * 160;
            image_index = 6;
            break;
        case 9:
            hitbox.image_xscale = 0.56 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.36 * size;
            hitbox.hitbox_x = -4.20 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 28 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox.dir = 85 + facing * 10
            hitbox.kbg = 4.75
            hitbox2.image_xscale = 0.42 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.46 * size;
            hitbox2.hitbox_x = -11.5 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 37.30 * size;
            hitbox2.image_angle = 350.39 - facing * 160.78;
            hitbox2.dir = 85 + facing * 10
            hitbox2.kbg = 4.55
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.69 * size;
            hitbox3.hitbox_x = -16.30 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 49.30 * size;
            hitbox3.image_angle = 336.85 - facing * 133.7;
            hitbox3.dir = 85 + facing * 10
            hitbox3.kbg = 4.6
            image_index = 7;
            break;
        case 10:
            image_index = 8;
            //eff.image_index = 4;
            hitbox.image_xscale = 0.45 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.25 * size;
            hitbox.hitbox_x = -2.10 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 16.10 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.285 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.55 * size;
            hitbox2.hitbox_x = -11.90 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 24.50 * size;
            hitbox2.image_angle = 0 + facing * 180;
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.75 * size;
            hitbox3.hitbox_x = -19.60 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 29.60 * size;
            hitbox3.image_angle = 5 + facing * 170;
            eff.index += 1;
            //eff.end_decay = 1;
            break;
        case 12:
            image_index = 9;
            eff.image_index = 5;
            hitbox.image_xscale = 0.38 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.25 * size;
            hitbox.hitbox_x = 1 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 13.10 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.285 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.55 * size;
            hitbox2.hitbox_x = -8.50 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 16.50 * size;
            hitbox2.image_angle = 8 + facing * 164;
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.75 * size;
            hitbox3.hitbox_x = -17.90 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 16.60 * size;
            hitbox3.image_angle = 12 + facing * 156;
            break;

        case 17:
            image_index = 10;
            break;
        case 21:
            image_index = 11;
            if (instance_exists(eff)) {
                with(eff) {
                    instance_destroy();
                }
            }
            break;
        case 25:
            image_index = 12;
            break;
        case 27:
            image_index = 13;
            break;
            //  case 29:
            //  attack_type = "none";
            //state_type = "stand";
            //timer = 0;
            //time =-1;
            //break;
    }

    // Animate VFX
    switch (timer){
      case 0: eff = create_sword_trail(self.id, 9, 30, sword_texture); break;
      case 5: eff.index = 1; break;
      case 6: eff.index = 2; eff.depth = -2; break;
      case 7: eff.index = 3; break;
      case 8: eff.index = 4; break;
      case 9: eff.index = 5; break;
      case 10: eff. index = 6; break;
      case 11: eff.end_decay = 2; break;
      case 12: eff.index = 7; break;
      case 17: eff.index = 8; break;
      case 21:
        with (eff){
          instance_destroy();
        }
        break;
    }
} // End Tipper

//----------------- Spread Marth --------------------
if notip = 1 {
    if (state_type == "stand" || state_type == "run") {
        hspeed = 0;
        state_type = "attack";
        attack_type = "utilt";
        image_speed = 0;
        sprite_index = utilt_sprite;
        image_index = 0;
        timer = 0;
        time = 29;
        timer_speed = 1;
        xoff = 42; //greater is left
        if (facing == 1) {
            xoff = 44;
        }
        yoff = 78; //greater is up
        effscale = xsize / 2.0
    }

    switch (timer) {
        case 0:
            image_index = 0;
            break;
        case 2:
            image_index = 1;
            break;
        case 4:
            image_index = 2;
            break;
        case 5:
            image_index = 3;
            break;
        case 6:
            play_attack_voice();
            attacking = 0;
            image_index = 4;
            sound_play(swingsnd2);
            create_hitbox2(8, 100 - facing * 20, 6.18, 5, 7, 7, slash2, obj_spark_slash2, 0.575, 0.44, 23.50, 21, self.id, 6, 2);
            hitbox2.image_angle = 25.16 + facing * 129.68;
            create_hitbox(8, 100 - facing * 20, 6.18, 5, 7, 7, slash2, obj_spark_slash2, 0.63, 0.32, 14.70, 30.10, self.id, 6, 2);
            hitbox.image_angle = 0 + facing * 180;
            create_hitbox3(8, 100 - facing * 20, 6.18, 5, 7, 7, slash3, obj_spark_slash3, 0.59, 0.44, 27.50, 11, self.id, 6, 2);
            hitbox3.image_angle = 30.40 + facing * 119.2;
            hitbox.di = 1.1;
            hitbox2.di = 1.1;
            hitbox3.di = 1.1;
            if notip = 1 {
                hitbox.hit_stun = 6;
                hitbox2.hit_stun = 6;
                hitbox3.hit_stun = 6;
                hitbox2.di = 1.1
                hitbox3.dir = 100 - facing * 20
                hitbox.damage = 10
                hitbox2.damage = 10
                hitbox3.damage = 10
                hitbox3.damage = 10
                hitbox.bkb = 6.3
                hitbox2.bkb = 6.3
                hitbox3.bkb = 6.3
                hitbox.kbg = 4
                hitbox2.kbg = 4
                hitbox3.kbg = 4
                hitbox.shield_damage = 7
                hitbox2.shield_damage = 7
                hitbox3.shield_damage = 7
                hitbox.hitlag_frames = 8
                hitbox2.hitlag_frames = 8
                hitbox3.hitlag_frames = 8
                hitbox3.sfx = slash2
                hitbox3.gfx = obj_spark_slash2
                hitbox3.priority = 2
            }
            break;
        case 7:
            hitbox.image_xscale = 0.35 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.55 * size;
            hitbox.hitbox_x = 13.60 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 37.40 * size;
            hitbox.image_angle = 340.29 - facing * 140.58;
            hitbox2.image_xscale = 0.43 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.68 * size;
            hitbox2.hitbox_x = 24.20 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 41.20 * size;
            hitbox2.image_angle = 15.2 + facing * 149.6;
            hitbox3.image_xscale = 0.4 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.9 * size;
            hitbox3.hitbox_x = 34.5 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 44.80 * size;
            hitbox3.image_angle = 31.32 + facing * 117.36;
            image_index = 5;
            break;
        case 8:
            hitbox.image_xscale = 0.35 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.49 * size;
            hitbox.hitbox_x = 2.80 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 42.70 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.61 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.37 * size;
            hitbox2.hitbox_x = 6.40 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 52.50 * size;
            hitbox2.image_angle = 0 + facing * 180;
            hitbox3.image_xscale = 0.68 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.40 * size;
            hitbox3.hitbox_x = 8 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 63.00 * size;
            hitbox3.image_angle = 350 - facing * 160;
            if notip = 1 {
                hitbox3.dir = 85 + facing * 10
            }
            image_index = 6;
            break;
        case 9:
            hitbox.image_xscale = 0.56 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.36 * size;
            hitbox.hitbox_x = -4.20 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 28 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox.dir = 85 + facing * 10
            hitbox.kbg = 4.75
            hitbox2.image_xscale = 0.42 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.46 * size;
            hitbox2.hitbox_x = -11.5 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 37.30 * size;
            hitbox2.image_angle = 350.39 - facing * 160.78;
            hitbox2.dir = 85 + facing * 10
            hitbox2.kbg = 4.55
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.69 * size;
            hitbox3.hitbox_x = -16.30 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 49.30 * size;
            hitbox3.image_angle = 336.85 - facing * 133.7;
            hitbox3.dir = 85 + facing * 10
            hitbox3.kbg = 4.6
            image_index = 7;
            break;
        case 10:
            image_index = 8;
            hitbox.image_xscale = 0.45 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.25 * size;
            hitbox.hitbox_x = -2.10 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 16.10 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.285 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.55 * size;
            hitbox2.hitbox_x = -11.90 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 24.50 * size;
            hitbox2.image_angle = 0 + facing * 180;
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.75 * size;
            hitbox3.hitbox_x = -19.60 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 29.60 * size;
            hitbox3.image_angle = 5 + facing * 170;
            break;
        case 12:
            image_index = 9;
            hitbox.image_xscale = 0.38 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.25 * size;
            hitbox.hitbox_x = 1 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 13.10 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.285 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.55 * size;
            hitbox2.hitbox_x = -8.50 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 16.50 * size;
            hitbox2.image_angle = 8 + facing * 164;
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.75 * size;
            hitbox3.hitbox_x = -17.90 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 16.60 * size;
            hitbox3.image_angle = 12 + facing * 156;
            break;
        case 17:
            image_index = 10;
            break;
        case 21:
            image_index = 11;
            break;
        case 25:
            image_index = 12;
            break;
        case 27:
            image_index = 13;
            break;
    }
    
    // Animate VFX
    switch (timer){
      case 0: eff = create_sword_trail(self.id, 9, 30, spread_texture); break;
      case 5: eff.index = 1; break;
      case 6: eff.index = 2; eff.depth = -2; break;
      case 7: eff.index = 3; break;
      case 8: eff.index = 4; break;
      case 9: eff.index = 5; break;
      case 10: eff. index = 6; break;
      case 11: eff.end_decay = 2; break;
      case 12: eff.index = 7; break;
      case 17: eff.index = 8; break;
      case 21:
        with (eff){
          instance_destroy();
        }
        break;
    }
} // End Spread

//----------------- Centered Marth --------------------
if notip = 2 {
    if (state_type == "stand" || state_type == "run") {
        hspeed = 0;
        state_type = "attack";
        attack_type = "utilt";
        image_speed = 0;
        sprite_index = utilt_sprite;
        image_index = 0;
        timer = 0;
        time = 29;
        timer_speed = 1;

    }

    switch (timer) {
        case 0:
            image_index = 0;
            break;
        case 2:
            image_index = 1;
            break;
        case 4:
            image_index = 2;
            break;
        case 5:
            image_index = 3;
            break;
        case 6:
            play_attack_voice();
            attacking = 0;
            image_index = 4;
            sound_play(swingsnd2);
            create_hitbox2(13, 110 - facing * 40, 6.6, 4.9, 8, 9, slash2, obj_spark_slash2, 0.575, 0.44, 23.50, 21, self.id, 6, 3);
            hitbox2.image_angle = 25.16 + facing * 129.68;
            hitbox2.hit_stun = 8;
            create_hitbox(10, 366 + facing, 5.85, 5.25, 7, 7, slash2, obj_spark_slash2, 0.63, 0.32, 14.70, 30.10, self.id, 6, 2);
            hitbox.image_angle = 0 + facing * 180;
            create_hitbox3(7, 110 - facing * 40, 5.75, 4.8, 5, 5, punch3, obj_spark_slash1, 0.59, 0.44, 27.50, 11, self.id, 6, 1);
            hitbox3.image_angle = 30.40 + facing * 119.2;
            hitbox.di = 1.1;
            hitbox2.di = 1.1;
            hitbox3.di = 1.1;
            if notip = 2 {
                hitbox.hit_stun = 6;
                hitbox2.hit_stun = 8;
                hitbox3.hit_stun = 4;
                hitbox.sfx = slash3
                hitbox2.sfx = slash3
                hitbox.gfx = obj_spark_slash3
                hitbox2.gfx = obj_spark_slash3
            }
            break;
        case 7:
            hitbox.image_xscale = 0.35 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.55 * size;
            hitbox.hitbox_x = 13.60 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 37.40 * size;
            hitbox.image_angle = 340.29 - facing * 140.58;
            hitbox2.image_xscale = 0.43 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.68 * size;
            hitbox2.hitbox_x = 24.20 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 41.20 * size;
            hitbox2.image_angle = 15.2 + facing * 149.6;
            hitbox3.image_xscale = 0.4 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.9 * size;
            hitbox3.hitbox_x = 34.5 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 44.80 * size;
            hitbox3.image_angle = 31.32 + facing * 117.36;
            image_index = 5;
            break;
        case 8:
            hitbox.image_xscale = 0.35 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.49 * size;
            hitbox.hitbox_x = 2.80 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 42.70 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.61 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.37 * size;
            hitbox2.hitbox_x = 6.40 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 52.50 * size;
            hitbox2.image_angle = 0 + facing * 180;
            hitbox3.image_xscale = 0.68 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.40 * size;
            hitbox3.hitbox_x = 8 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 63.00 * size;
            hitbox3.image_angle = 350 - facing * 160;
            image_index = 6;
            break;
        case 9:
            hitbox.image_xscale = 0.56 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.36 * size;
            hitbox.hitbox_x = -4.20 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 28 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox.dir = 85 + facing * 10
            hitbox.kbg = 4.75
            hitbox2.image_xscale = 0.42 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.46 * size;
            hitbox2.hitbox_x = -11.5 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 37.30 * size;
            hitbox2.image_angle = 350.39 - facing * 160.78;
            hitbox2.dir = 85 + facing * 10
            hitbox2.kbg = 4.55
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.69 * size;
            hitbox3.hitbox_x = -16.30 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 49.30 * size;
            hitbox3.image_angle = 336.85 - facing * 133.7;
            hitbox3.dir = 85 + facing * 10
            hitbox3.kbg = 4.6
            if notip = 2 {
                hitbox.damage = 12 * size;
                hitbox2.damage = 12 * size;
            }
            image_index = 7;
            break;
        case 10:
            image_index = 8;
            hitbox.image_xscale = 0.45 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.25 * size;
            hitbox.hitbox_x = -2.10 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 16.10 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.285 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.55 * size;
            hitbox2.hitbox_x = -11.90 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 24.50 * size;
            hitbox2.image_angle = 0 + facing * 180;
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.75 * size;
            hitbox3.hitbox_x = -19.60 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 29.60 * size;
            hitbox3.image_angle = 5 + facing * 170;
            break;
        case 12:
            image_index = 9;
            hitbox.image_xscale = 0.38 * (1 - facing * 2) * size;
            hitbox.image_yscale = 0.25 * size;
            hitbox.hitbox_x = 1 * (1 - facing * 2) * size;
            hitbox.hitbox_y = 13.10 * size;
            hitbox.image_angle = 0 + facing * 180;
            hitbox2.image_xscale = 0.285 * (1 - facing * 2) * size;
            hitbox2.image_yscale = 0.55 * size;
            hitbox2.hitbox_x = -8.50 * (1 - facing * 2) * size;
            hitbox2.hitbox_y = 16.50 * size;
            hitbox2.image_angle = 8 + facing * 164;
            hitbox3.image_xscale = 0.32 * (1 - facing * 2) * size;
            hitbox3.image_yscale = 0.75 * size;
            hitbox3.hitbox_x = -17.90 * (1 - facing * 2) * size;
            hitbox3.hitbox_y = 16.60 * size;
            hitbox3.image_angle = 12 + facing * 156;
            break;
        case 17:
            //break;
            image_index = 10;
            break;
        case 21:
            image_index = 11;
            break;
        case 25:
            image_index = 12;
            break;
        case 27:
            image_index = 13;
            break;
            //  case 29:
            //  attack_type = "none";
            //state_type = "stand";
            //timer = 0;
            //time =-1;
            //break;
    }
    
    // Animate VFX
    switch (timer){
      case 0: eff = create_sword_trail(self.id, 9, 30, centered_texture); break;
      case 5: eff.index = 1; break;
      case 6: eff.index = 2; eff.depth = -2; break;
      case 7: eff.index = 3; break;
      case 8: eff.index = 4; break;
      case 9: eff.index = 5; break;
      case 10: eff. index = 6; break;
      case 11: eff.end_decay = 2; break;
      case 12: eff.index = 7; break;
      case 17: eff.index = 8; break;
      case 21:
        with (eff){
          instance_destroy();
        }
        break;
    }
} // End Centered

//----------------- Every Marth --------------------
if (timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch") {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time = -1;
    if (instance_exists(eff)) {
        with(eff) {
            instance_destroy();
        }
    }
}