//----------------- Tipper Marth --------------------
if notip = 0 {

if ( time == -1 )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "dthrow";
  image_speed = 0;
  image_index = 0;
  sprite_index = dthrow_sprite;
  timer = 0;
  time = 26;
  timer_speed = 1;
  target . timer_speed = 0;
  target . alarm[0] = 50;
  }

switch ( timer )
  {
  case 7: image_index = 1; break;
  case 9:
    target . x -= 3 * size * (1-facing-facing);
    target . y += 3 * size;
    play_attack_voice();
    image_index = 2;
    break;
  case 11: image_index = 3; break;
  case 13: image_index = 4;
	target.sprite_index = target.down_sprite;
	target.image_index = 0;
	target.image_speed = 0;
	target.timer_speed = 1;
	target.alarm[0] = time;
	break;
  case 14:
	instance_create(x,y,obj_down_impact);
	target.timer = timer;
	target.time = time;
	target.speed = 0;
	break;
  case 15:
    image_index = 5;
    create_throw_box ( 5 , 225+facing*90 , 6.2 , 2 , 1 , 1 , -1 , obj_spark_effect , 0.78 , 0.66 , -3.50 , 9.10 , self.id , 1 );
    hitbox.weight_kb = 1
    hitbox.hit_stun = 12
    break;
  case 17: image_index = 6; break;
  case 18: image_index = 7; break;
  case 20: image_index = 8; break;
  case 22: image_index = 9; break;
  case 24: image_index = 10; break;
  }
if ( timer <= 8 )
{
target.x = x + 8 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 9 || timer = 10 )
{
target.x = x + 15 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer >= 11 && timer <= 12 )
{
target.x = x + 12 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 13 )
{
target.x = x + 9 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 14 || timer = 15 )
{
target.x = x;
target.y = y;
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }
}

//----------------- Spread Marth --------------------
if notip = 1 {

if ( time == -1 )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "dthrow";
  image_speed = 0;
  image_index = 0;
  sprite_index = dthrow_sprite;
  timer = 0;
  time = 26;
  timer_speed = 1;
  target . timer_speed = 0;
  target . alarm[0] = 50;
  }

switch ( timer )
  {
  case 7: image_index = 1; break;
  case 9:
    play_attack_voice();
    image_index = 2;
    break;
  case 11: image_index = 3; break;
  case 13: image_index = 4;
	target.sprite_index = target.down_sprite;
	target.image_index = 0;
	target.image_speed = 0;
	target.timer_speed = 1;
	target.alarm[0] = time;
	break;
  case 14:
	instance_create(x,y,obj_down_impact);
	target.timer = timer;
	target.time = time;
	target.speed = 0;
	break;
  case 15:
    image_index = 5;
    create_throw_box ( 5 , 100-facing*20 , 5.5 , 2 , 1 , 1 , -1 , obj_spark_effect , 0.78 , 0.66 , -3.50 , 9.10 , self.id , 1 );
    hitbox.weight_kb = 1
    hitbox.hit_stun = 12
    break;
  case 17: image_index = 6; break;
  case 18: image_index = 7; break;
  case 20: image_index = 8; break;
  case 22: image_index = 9; break;
  case 24: image_index = 10; break;
  }
if ( timer <= 8 )
{
target.x = x + 8 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 9 || timer = 10 )
{
target.x = x + 15 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer >= 11 && timer <= 12 )
{
target.x = x + 12 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 13 )
{
target.x = x + 9 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 14 || timer = 15 )
{
target.x = x;
target.y = y;
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }
}

//----------------- Centered Marth --------------------
if notip = 2 {

if ( time == -1 )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "dthrow";
  image_speed = 0;
  image_index = 0;
  sprite_index = dthrow_sprite;
  timer = 0;
  time = 26;
  timer_speed = 1;
  target . timer_speed = 0;
  target . alarm[0] = 50;
  }

switch ( timer )
  {
  case 7: image_index = 1; break;
  case 9:
    play_attack_voice();
    image_index = 2;
    break;
  case 11: image_index = 3; break;
  case 13: image_index = 4;
	target.sprite_index = target.down_sprite;
	target.image_index = 0;
	target.image_speed = 0;
	target.timer_speed = 1;
	target.alarm[0] = time;
	break;
  case 14:
	instance_create(x,y,obj_down_impact);
	target.timer = timer;
	target.time = time;
	target.speed = 0;
	break;
  case 15:
    image_index = 5;
    create_throw_box ( 5 , 85+facing*10 , 6.2 , 2 , 1 , 1 , -1 , obj_spark_effect , 0.78 , 0.66 , -3.50 , 9.10 , self.id , 1 );
    hitbox.weight_kb = 1
    hitbox.hit_stun = 12
    break;
  case 17: image_index = 6; break;
  case 18: image_index = 7; break;
  case 20: image_index = 8; break;
  case 22: image_index = 9; break;
  case 24: image_index = 10; break;
  }
if ( timer <= 8 )
{
target.x = x + 8 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 9 || timer = 10 )
{
target.x = x + 15 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer >= 11 && timer <= 12 )
{
target.x = x + 12 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 13 )
{
target.x = x + 9 * size * (1-facing*2);
target.y = y - 6 * size;
}
if ( timer = 14 || timer = 15 )
{
target.x = x;
target.y = y;
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }
}
