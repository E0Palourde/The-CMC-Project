//----------------- Tipper Marth --------------------
if notip = 0 {
  if ( state_type == "jump" || state_type == "run" || state_type == "stand" || state_type == "crouch" )
  {
    sound_play ( upb_voice );
    state_type = "air_attack";
    attack_type = "upb";
    sprite_index = upb_sprite;
    image_index = 1;
    image_speed = 0;
    time = 40;
    timer = 0;
    timer_speed = 1;
    special = 0;
    change = 0;
    temp = 0;
    temp2 = 0;
    xoff = 36; //Bigger is left
    if facing = 1
    xoff = 37
    effscale = 0.33 * xsize;
    yoff = 88; //Bigger is up
  }
  if ( timer > 1 || timer < 5 ) {
    intangible = 1; }
    if ( timer < 5 )
    vspeed = 0;
    if timer = 5 {
      if notip = 2 && (((facing=0 && moveright && !moveleft) || (facing=1 && moveleft && !moveright)) && moveup)
      temp2 = 1
      if notip = 2 && (((facing=0 && moveright && !moveleft) || (facing=1 && moveleft && !moveright)) && !moveup)
      temp2 = 2 }
      if ( timer >= 5 && timer < 20 )
      {
        intangible = 0;
        after_image ( 2 , c_blue , 0.2 );
        after_image ( 3 , c_blue , 0.2 );
        after_image ( 4 , c_blue , 0.2 );
        after_image ( 5 , c_blue , 0.2 );
        fast_fall = 0;
        fast_fall_temp = 0;
        hspeed = (5+(temp2*7)) * size * ( 1-facing*2 );
        vspeed = (-25+(temp2*2.75)+((notip=2)*3)) * size;
        if ( timer > 14 )
        { hspeed *= 0.1; vspeed *= 0.1; }
        else
        if ( timer > 9 )
        { hspeed *= 0.2; vspeed *= 0.2; }
        else
        if ( timer > 7 )
        { hspeed *= 0.3; vspeed *= 0.3; }
      }
      if ( timer > 20 )
      {
        hspeed *= 0.2;
        vspeed *= 0.2;
      }
      if timer > 7
      force_edge_grab = 1

      switch ( timer )
      {
        case 1: image_index = 2; break;
        case 3:     image_index = 3;
        create_hitbox ( 13 , 25+facing*130 , 6.6 , 5.05 , 14 , 9 , slash3 , obj_spark_slash3 , 0.88 , 0.69 , 2.90 , 7 , self.id , 1 , 3 );
        hitbox.image_angle = 0;
        create_hitbox2 ( 13 , 25+facing*130 , 6.6 , 5.05 , 14 , 9 , slash3 , obj_spark_slash3 , 0.88 , 0.69 , 2.90 , 7, self.id , 9 , 3 );
        hitbox2.image_angle = 0;
        create_hitbox3 ( 13 , 25+facing*130 , 6.6 , 5.05 , 14 , 9 , slash3 , obj_spark_slash3 , 0.88 , 0.69 , 2.90 , 7, self.id , 9 , 3 );
        hitbox3.image_angle = 0;
        create_hitbox4 ( 13 , 25+facing*130 , 6.6 , 5.05 , 14 , 9 , slash3 , obj_spark_slash3 , 0.88 , 0.69 , 2.90 , 7 , self.id , 9 , 3 );
        hitbox4.image_angle = 0;
        break;
        case 4:
        if ( moveright ) facing = 0;
        if ( moveleft ) facing = 1;
        if hitbox.hit = 1 temp = 1;
        image_index = 4;


        hitbox.dir = 25+facing*130
        hitbox2.dir = 25+facing*130
        hitbox3.dir = 25+facing*130
        hitbox4.dir = 25+facing*130
        break;
        // hitstart
        case 5:
        image_index = 5;
        /* create effect */
        eff = create_blur(x,y,self.id);
        yoff = -76;
        xoff = -8;
        eff.sprite_index = upb_effect_spr;
        effscale = 0.33 * xsize;
        eff.image_xscale = (effscale*size)*(1-facing*2);
        eff.image_yscale = (effscale*size);
        eff.x = x + xoff*size*(1-facing*2);
        eff.y = y + yoff*size;
        eff.image_speed = 0;
        eff.alarm[0] = 40;
        eff.snap = self.id;
        sound_play ( upb_sound );
        hitbox2.image_xscale = 0.55 * (1-facing*2) * size;
        hitbox2.image_yscale = 0.36 * size;
        hitbox2.hitbox_x = 6.30 *(1-facing*2) * size;
        hitbox2.hitbox_y = 36.40 * size;
        hitbox2.image_angle = 32.47;
        hitbox3.image_xscale = 0.42 * (1-facing*2) * size;
        hitbox3.image_yscale = 0.32 * size;
        hitbox3.hitbox_x = 18.20 *(1-facing*2) * size;
        hitbox3.hitbox_y = 44.10 * size;
        hitbox3.image_angle = 21.54;
        hitbox4.image_xscale = 0.42 * (1-facing*2) * size;
        hitbox4.image_yscale = 0.31 * size;
        hitbox4.hitbox_x = 28 *(1-facing*2) * size;
        hitbox4.hitbox_y = 49.70 * size;
        hitbox4.image_angle = 27.15;
        if temp = 0 {
          hitbox2.bkb = 4.2
          hitbox2.kbg = 3.1
          hitbox3.bkb = 4.2
          hitbox3.kbg = 4.1
          hitbox4.dir = 74+facing*32
          hitbox4.bkb = 4.8
          hitbox4.kbg = 3.5
          if notip = 1 {
            hitbox4.dir = 20+facing*140
            hitbox2.bkb = 4.5
            hitbox3.bkb = 4.5
            hitbox4.bkb = 4.5
            hitbox2.kbg = 3.8
            hitbox3.kbg = 3.8
            hitbox4.kbg = 3.8
          }
          if notip = 2 {
            hitbox2.bkb = 4.2
            hitbox3.bkb = 4.8
            hitbox4.bkb = 4.2
            hitbox2.kbg = 4.1
            hitbox3.kbg = 3.5
            hitbox4.kbg = 3.1
          }
        }
        //image_index = 3;
        air_move = 0;
        break;
        case 6:
        eff.image_index = 1;
        hitbox2.damage = 6*size;
        hitbox3.damage = 6*size;
        hitbox4.damage = 7*size;
        hitbox2.bkb = 3*size;
        hitbox3.bkb = 3*size;
        hitbox4.bkb = 3.4*size;
        hitbox2.kbg = 2.7*size;
        hitbox3.kbg = 2.7*size;
        hitbox4.kbg = 3*size;
        hitbox2.sfx = slash1;
        hitbox3.sfx = slash1;
        hitbox4.sfx = slash2;
        hitbox2.gfx = obj_spark_slash1;
        hitbox3.gfx = obj_spark_slash1;
        hitbox4.gfx = obj_spark_slash2;
        if notip = 1 {
          hitbox4.damage = 6*size;
          hitbox4.bkb = 3*size;
          hitbox4.kbg = 2.7*size;
          hitbox4.sfx = slash1;
          hitbox4.gfx = obj_spark_slash1;
        }
        if notip = 2 {
          hitbox2.damage = 6*size;
          hitbox3.damage = 7*size;
          hitbox4.damage = 6*size;
          hitbox2.bkb = 3*size;
          hitbox3.bkb = 3.4*size;
          hitbox4.bkb = 3*size;
          hitbox2.kbg = 2.7*size;
          hitbox3.kbg = 3*size;
          hitbox4.kbg = 2.7*size;
          hitbox2.sfx = slash1;
          hitbox3.sfx = slash2;
          hitbox4.sfx = slash1;
          hitbox2.gfx = obj_spark_slash1;
          hitbox3.gfx = obj_spark_slash2;
          hitbox4.gfx = obj_spark_slash1;
        }
        //image_index = 4;
        break;
        case 7: eff.image_index = 2; break;
        case 8: eff.image_index = 3; break;
        case 9: eff.iamge_index = 4; break;
        // hitend
        case 10:
        image_index = 6;
        eff.image_index = 5; break;
        break;
        case 11:
        eff.image_index = 6; break;
        case 12: with (eff) instance_destroy(); break;
        case 13:
        image_index = 7;
        break;
        case 16: image_index = 8; break;
        case 19: image_index = 9; break;
        case 21: image_index = 10; break;
        case 24: image_index = 11; break;
        case 27: image_index = 12; break;
        case 30: image_index = 13; break;
        case 33: image_index = 14; break;
        case 36: image_index = 15; break;
        case 39:
        attack_type = "none";
        if ( air > 0 )
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time = -1;
        break;
      }


      if ( air == 0 && timer > 6 )
      {
        state_type = "land";
        attack_type = "none";
        intangible = 0;
        sprite_index = land_sprite;
        if (  timer > 36 )
        time = 3;
        else
        time = 34;
        timer = 0;
      }
    }

    //----------------- Spread Marth --------------------
    if notip = 1 {
      if ( state_type == "jump" || state_type == "run" || state_type == "stand" || state_type == "crouch" )
      {
        sound_play ( upb_voice );
        state_type = "air_attack";
        attack_type = "upb";
        sprite_index = upb_sprite;
        image_index = 1;
        image_speed = 0;
        time = 40;
        timer = 0;
        timer_speed = 1;
        special = 0;
        change = 0;
        temp = 0;
        temp2 = 0;
        xoff = 36; //Bigger is left
        if facing = 1
        xoff = 37

        yoff = 88; //Bigger is up
      }
      if ( timer > 1 || timer < 5 ) {
        intangible = 1; }
        if ( timer < 5 )
        vspeed = 0;
        if timer = 5 {
          if notip = 2 && (((facing=0 && moveright && !moveleft) || (facing=1 && moveleft && !moveright)) && moveup)
          temp2 = 1
          if notip = 2 && (((facing=0 && moveright && !moveleft) || (facing=1 && moveleft && !moveright)) && !moveup)
          temp2 = 2 }
          if ( timer >= 5 && timer < 20 )
          {
            intangible = 0;
            after_image ( 2 , c_navy , 0.2 );
            after_image ( 3 , c_navy , 0.2 );
            after_image ( 4 , c_navy , 0.2 );
            after_image ( 5 , c_navy , 0.2 );
            fast_fall = 0;
            fast_fall_temp = 0;
            hspeed = (5+(temp2*7)) * size * ( 1-facing*2 );
            vspeed = (-25+(temp2*2.75)+((notip=2)*3)) * size;
            if ( timer > 14 )
            { hspeed *= 0.1; vspeed *= 0.1; }
            else
            if ( timer > 9 )
            { hspeed *= 0.2; vspeed *= 0.2; }
            else
            if ( timer > 7 )
            { hspeed *= 0.3; vspeed *= 0.3; }
          }
          if ( timer > 20 )
          {
            hspeed *= 0.2;
            vspeed *= 0.2;
          }
          if timer > 7
          force_edge_grab = 1

          switch ( timer )
          {
            case 1: image_index = 2; break;
            case 3:     image_index = 3;
            create_hitbox ( 11 , 25+facing*130 , 6.6 , 5.05 , 14 , 9 , slash3 , obj_spark_slash3 , 0.95 , 0.69 , 2.95 , 7 , self.id , 1 , 3 );
            hitbox.image_angle = 0;
            create_hitbox2 ( 11 , 25+facing*130 , 6.6 , 5.05 , 14 , 9 , slash3 , obj_spark_slash3 , 0.95 , 0.69 , 2.95 , 7, self.id , 9 , 3 );
            hitbox2.image_angle = 0;
            create_hitbox3 ( 11 , 25+facing*130 , 6.6 , 5.05 , 14 , 9 , slash3 , obj_spark_slash3 , 0.95 , 0.69 , 2.95 , 7, self.id , 9 , 3 );
            hitbox3.image_angle = 0;
            create_hitbox4 ( 11 , 25+facing*130 , 6.6 , 5.05 , 14 , 9 , slash3 , obj_spark_slash3 , 0.95 , 0.69 , 2.95 , 7 , self.id , 9 , 3 );
            hitbox4.image_angle = 0;
            break;
            case 4:
            if ( moveright ) facing = 0;
            if ( moveleft ) facing = 1;
            if hitbox.hit = 1 temp = 1;
            image_index = 4;

            hitbox.dir = 25+facing*130
            hitbox2.dir = 25+facing*130
            hitbox3.dir = 25+facing*130
            hitbox4.dir = 25+facing*130
            break;
            // hitstart
            case 5:

            image_index = 5;
            /* create effect */
            eff = create_blur(x,y,self.id);
            yoff = -76;
            xoff = -8;
            eff.sprite_index = upb_effect_spr;
            eff.image_xscale = (effscale*size)*(1-facing*2);
            eff.image_yscale = (effscale*size);
            eff.x = x + xoff*size*(1-facing*2);
            eff.y = y + yoff*size;
            eff.image_speed = 0;
            eff.alarm[0] = 40;
            eff.snap = self.id;

            sound_play ( upb_sound );
            hitbox2.image_xscale = 0.55 * (1-facing*2) * size;
            hitbox2.image_yscale = 0.36 * size;
            hitbox2.hitbox_x = 6.30 *(1-facing*2) * size;
            hitbox2.hitbox_y = 36.40 * size;
            hitbox2.image_angle = 32.47;
            hitbox3.image_xscale = 0.42 * (1-facing*2) * size;
            hitbox3.image_yscale = 0.32 * size;
            hitbox3.hitbox_x = 18.20 *(1-facing*2) * size;
            hitbox3.hitbox_y = 44.10 * size;
            hitbox3.image_angle = 21.54;
            hitbox4.image_xscale = 0.42 * (1-facing*2) * size;
            hitbox4.image_yscale = 0.31 * size;
            hitbox4.hitbox_x = 28 *(1-facing*2) * size;
            hitbox4.hitbox_y = 49.70 * size;
            hitbox4.image_angle = 27.15;
            if temp = 0 {
              hitbox2.bkb = 4.2
              hitbox2.kbg = 3.1
              hitbox3.bkb = 4.2
              hitbox3.kbg = 4.1
              hitbox4.dir = 74+facing*32
              hitbox4.bkb = 4.8
              hitbox4.kbg = 3.5
              if notip = 1 {
                hitbox4.dir = 20+facing*140
                hitbox2.bkb = 4.5
                hitbox3.bkb = 4.5
                hitbox4.bkb = 4.5
                hitbox2.kbg = 3.8
                hitbox3.kbg = 3.8
                hitbox4.kbg = 3.8
              }
            }
            //image_index = 3;
            air_move = 0;
            break;
            case 6:
            eff.image_index = 1;
            hitbox2.damage = 6*size;
            hitbox3.damage = 6*size;
            hitbox4.damage = 7*size;
            hitbox2.bkb = 3*size;
            hitbox3.bkb = 3*size;
            hitbox4.bkb = 3.4*size;
            hitbox2.kbg = 2.7*size;
            hitbox3.kbg = 2.7*size;
            hitbox4.kbg = 3*size;
            hitbox2.sfx = slash1;
            hitbox3.sfx = slash1;
            hitbox4.sfx = slash2;
            hitbox2.gfx = obj_spark_slash1;
            hitbox3.gfx = obj_spark_slash1;
            hitbox4.gfx = obj_spark_slash2;
            if notip = 1 {
              hitbox4.damage = 6*size;
              hitbox4.bkb = 3*size;
              hitbox4.kbg = 2.7*size;
              hitbox4.sfx = slash1;
              hitbox4.gfx = obj_spark_slash1;
            }
            break;
            case 7: eff.image_index = 2; break;
            case 8: eff.image_index = 3; break;
            case 9: eff.iamge_index = 4; break;
            // hitend
            case 10: image_index = 6;
            eff.image_index = 5;
            break;
            case 11: eff.image_index = 6;
            case 12: with (eff) instance_destroy(); break;
            case 13: image_index = 7;
            break;
            case 16: image_index = 8;
            break;

            case 19: image_index = 9; break;
            case 21: image_index = 10; break;
            case 24: image_index = 11; break;
            case 27: image_index = 12; break;
            case 30: image_index = 13; break;
            case 33: image_index = 14; break;
            case 36: image_index = 15; break;
            case 39:
            attack_type = "none";
            if ( air > 0 )
            state_type = "fall";
            else
            state_type = "stand";
            timer = 0;
            time = -1;
            break;
          }


          if ( air == 0 && timer > 6 )
          {
            state_type = "land";
            attack_type = "none";
            intangible = 0;
            sprite_index = land_sprite;
            if (  timer > 36 )
            time = 3;
            else
            time = 34;
            timer = 0;
          }
        }

        //----------------- Centered Marth --------------------
        if notip = 2 {
          if ( state_type == "jump" || state_type == "run" || state_type == "stand" || state_type == "crouch" )
          {
            sound_play ( upb_voice );
            state_type = "air_attack";
            attack_type = "upb";
            sprite_index = upb_sprite;
            image_index = 1;
            image_speed = 0;
            time = 40;
            timer = 0;
            timer_speed = 1;
            special = 0;
            change = 0;
            temp = 0;
            temp2 = 0;
            xoff = 36; //Bigger is left
            yoff = 88; //Bigger is up
	    if air = 0
		temp = 1
	    else
		temp = 0
          }
          if ( timer > 1 || timer < 5 ) {
            intangible = 1; }
            if ( timer < 7 )
            vspeed = 0;
            if timer = 2 {
              if (((facing=0 && moveright && !moveleft) || (facing=1 && moveleft && !moveright)) && moveup)
              temp2 = 1
              if (((facing=0 && moveright && !moveleft) || (facing=1 && moveleft && !moveright)) && !moveup)
              temp2 = 1.5 }
              if ( timer >= 5 && timer < 40 )
              fast_fall = 0;
              fast_fall_temp = 0;
              if ( timer >= 5 && timer < 25 )
              {
                intangible = 0;
                after_image ( 5 , c_red , 0.2 );
                after_image ( 6 , c_red , 0.2 );
                after_image ( 7 , c_red , 0.2 );
                after_image ( 8 , c_red , 0.2 );
		if timer < 14 {
                hspeed = (2.75+(temp2*3.5)) * size * ( 1-facing*2 );
                vspeed = (-12.5+(temp2*1.375)+1.45) * size;
		}
                if ( timer > 22 )
                { hspeed *= 0.1; vspeed *= 0.1; }
                else
                if ( timer > 18 && timer < 22 )
                { hspeed *= 0.5; vspeed *= 0.4; }
                else
                if ( timer > 14 && timer < 18 )
                { hspeed *= 0.55; vspeed *= 0.45; }
              }
              if ( timer > 25 )
              {
                hspeed *= 0.2;
                vspeed *= 0.2;
              }
              if timer > 7
              force_edge_grab = 1

              switch ( timer )
              {
                case 1: image_index = 2; break;

                case 3:
                create_hitbox ( 5.5 , 75+facing*30 , 8 , 0 , 14 , 3 , slash2 , obj_spark_slash2 , 1 , 1.1 , 4.90 , 7.5 , self.id , 2 , 3 );
                hitbox.image_angle = 0;
                hitbox.di = 0;
		hitbox.weight_kb = 1;
		if temp2 = 1
		hitbox.dir = 55+facing*70
		else if temp2 = 0
		hitbox.dir = 80+facing*20
		else if temp2 = 1.5
		hitbox.dir = 45+facing*90
                if ( moveright ) facing = 0;
                if ( moveleft ) facing = 1;
                image_index = 3;
                break;
                // hitstart
                case 4:
                create_hitbox ( 1.1 , 75+facing*30 , 8 , 0 , 3 , 1 , slash1 , obj_spark_slash1 , 1 , 1.75 , 11 , 23 , self.id , 3 , 3 );
		hitbox.image_angle = 330-facing*((2*330)-540)
                hitbox.di = 0;
		hitbox.weight_kb = 1;
		if temp2 = 1
		hitbox.dir = 55+facing*70
		else if temp2 = 0
		hitbox.dir = 80+facing*20
		else if temp2 = 1.5
		hitbox.dir = 45+facing*90
                image_index = 4;
                sound_play ( upb_sound );
                air_move = 0;
                break;

		case 5:
		image_index = 5;
                /* create effect */
                eff = create_blur(x,y,self.id);
                yoff = -76;
                xoff = -8;
                eff.sprite_index = upb_effect_spr;
                effscale = 0.33 * xsize;
                eff.image_xscale = (effscale*size)*(1-facing*2);
                eff.image_yscale = (effscale*size);
                eff.x = x + xoff*size*(1-facing*2);
                eff.y = y + yoff*size;
                eff.image_speed = 0;
                eff.alarm[0] = 40;
                eff.snap = self.id;
		break;

                case 7:
                create_hitbox ( 1.1 , 75+facing*30 , 8 , 0 , 3 , 1 , slash1 , obj_spark_slash1 , 1 , 1.75 , 11 , 23, self.id , 3 , 3 );
		hitbox.image_angle = 330-facing*((2*330)-540)
                hitbox.di = 0;
		hitbox.weight_kb = 1;
		if temp2 = 1
		hitbox.dir = 55+facing*70
		else if temp2 = 0
		hitbox.dir = 80+facing*20
		else if temp2 = 1.5
		hitbox.dir = 45+facing*90
                break;

                case 10:
		eff.image_index = 1;
                create_hitbox ( 1.1 , 75+facing*30 , 8 , 0 , 3 , 1 , slash1 , obj_spark_slash1 , 1 , 1.75 , 11 , 23 , self.id , 3 , 3 );
		hitbox.image_angle = 330-facing*((2*330)-540)
                hitbox.di = 0;
		hitbox.weight_kb = 1;
		if temp2 = 1
		hitbox.dir = 55+facing*70
		else if temp2 = 0
		hitbox.dir = 80+facing*20
		else if temp2 = 1.5
		hitbox.dir = 45+facing*90
                break;

                case 12:
                image_index = 5;
                create_hitbox ( 1.1 , 75+facing*30 , 8 , 0 , 3 , 1 , slash1 , obj_spark_slash1 , 1 , 1.75 , 11 , 23 , self.id , 2 , 3 );
		hitbox.image_angle = 330-facing*((2*330)-540)
                hitbox.di = 0;
		hitbox.weight_kb = 1;
		if temp2 = 1
		hitbox.dir = 55+facing*70
		else if temp2 = 0
		hitbox.dir = 80+facing*20
		else if temp2 = 1.5
		hitbox.dir = 45+facing*90
		eff.image_index = 2;
                break;
                case 13: eff.image_index = 3; break;
                case 14:
                image_index = 6;
                eff.image_index = 5;
                create_hitbox ( 8 , 75+facing*30 , 8 , 2 , 14 , 9 , slash3 , obj_spark_slash3 , 1 , 2 , 14 , 38 , self.id , 1 , 3 );
                hitbox.image_angle = 0;
                hitbox.hit_stun = 9;
		if temp = 0
		hitbox.kbg = 1
                break;
                case 16:
                  eff.image_index = 6;
                image_index = 7;
                break;
		case 17:
                with (eff) instance_destroy(); break;
                case 18: image_index = 8; break;
                case 21: image_index = 9; break;
                case 22:
                image_index = 10;
                break;
                case 25: image_index = 11; break;
                case 27: image_index = 12; break;
                case 30: image_index = 13; break;
                case 33: image_index = 14; break;
                case 35: image_index = 15; break;
                case 39:
                attack_type = "none";
                if ( air > 0 )
                state_type = "fall";
                else
                state_type = "stand";
                timer = 0;
                time = -1;
                break;
              }

              if ( air == 0 && timer > 6 )
              {
                state_type = "land";
                attack_type = "none";
                intangible = 0;
                sprite_index = land_sprite;
                if (  timer > 36 )
                time = 3;
                else
                time = 34;
                timer = 0;
              }
            }
