if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "bair";
        image_speed = 0;
        sprite_index = bair_sprite;
        image_index = 0;
        timer = 0;
        time = 50;
        timer_speed=1;
}
xoff = 0;
yoff = 0;
effscale = 0.18;

if timer < time && state_type = "air_attack" {
		switch ( timer )
		{
		case 5: image_index = 1; break;
		case 7: image_index = 2; break;
		case 9: image_index = 3; break;
		case 11: image_index = 4; break;
      
		case 14: image_index = 5;
                        break; //hitbox start
		case 15: image_index = 6;
                          break;
		case 16: image_index = 7;
                          break;
		case 18: image_index = 8;
				  break; //hitbox end
		case 20: image_index = 9;
			   break;
		case 22: image_index = 10;
				 break;
		case 32: image_index = 11; break;
		case 37: image_index = 12; break;
		case 43: image_index = 13; break;
		}
		
		// Animate VFX
		switch (timer){
			case 7:
				blur = create_itmpnt_blur(/*Attacker*/self.id, /*Texture*/blur_texture, /*Start frame*/2, /*Apex Frame*/6, /*End frame*/10, /*CCW*/0, /*girth*/10, 15); 
				blur.index = 0; 
				blur.image_index = 0;
				break;
			case 8: blur.index = 0.5; break;
			case 9: blur.index = 1; blur.image_index = 1; break;
			case 11: blur.index = 2; blur.image_index = 2; break;
			case 12: case 13: blur.index += 0.33; break;
			case 14: blur.index = 3; break;
			case 15: blur.index = 4; blur.image_index = 3; break;
			case 16: blur.index = 5; break;
			case 17: blur.index = 5.5; break;
			case 18: blur.index = 6; break;
			case 19: blur.index = 6.5; break;
			case 20: blur.index = 7; blur.start_index = 2; break;
			case 21: blur.index = 7.5; break;
			case 22: blur.index = 8; blur.image_index = 4; break;
			case 23: blur.index = 8.5; break;
			case 24: blur.image_index = 5; break;
			case 27: 
				with (blur){
					instance_destroy();
				}
				break;
		}
		
            if timer = 5 {
                sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
                //instance_create(x-3+facing*6,y-19,obj_spark_effect) 
                }
            if timer = 13 {
                sound_play(stilt_sound);
               create_hitbox2(11,135-facing*90,4,9,13,6,kick2,obj_spark_hit3,0.6,0.6,-17,6,self.id,5,3);
                create_hitbox(8,135-facing*90,4,9,13,6,kick2,obj_spark_hit3,0.9,0.7,-12,17,self.id,5,3);

                }
            if timer = 14 {
                hitbox.hitbox_x = (-20+facing*40)*size;
                hitbox.hitbox_y = 20*size; 
                hitbox.image_xscale = 0.9*size;
                hitbox.image_yscale = 0.7*size;  

     		hitbox2.hitbox_x = (-31+facing*62)*size;
                hitbox2.hitbox_y = 10*size; 
          

                }
            if timer = 15 {
                hitbox.hitbox_x = (-21+facing*42)*size;
                hitbox.hitbox_y = 28*size; 
		hitbox.image_angle=166+-152*facing
       		hitbox.image_xscale = 1.1*size;
        

		hitbox2.hitbox_x = (-36+facing*72)*size;
                hitbox2.hitbox_y = 24*size; 
            }
            if timer = 16 {
                hitbox.hitbox_x = (-16+facing*32)*size;
                hitbox.hitbox_y = 35*size;
		hitbox.image_angle=0+180*facing
                hitbox.image_xscale = 0.8*size;
                hitbox.image_yscale = 1.2*size;  

		hitbox2.hitbox_x = (-26+facing*52)*size;
                hitbox2.hitbox_y = 51*size; 
            }
        if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=13 - (timer>=23)*4; }
        }  
if (timer >= 13){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 130) || (target.weight > .22 && target.weight < .3 && target.percent > 150) || (target.weight > .3 && target.percent > 170)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.055;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 100
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
				dontrepeat = 1;
				}
				}
        
  }	           
if timer >= time -1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }
        
