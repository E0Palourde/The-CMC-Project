hoverlock = 0;
if state_type = "jump" {
    force_edge_grab = 0;
    if sprite_index != mid_jump_sprite  {
		if ( timer = 0 )
			{
			image_index = 0;
			image_speed = 0.25;
			}
		if ( hover_timer = 0 )
			{
			sprite_index = jump_sprite;    
			}
		if ( hover_timer > 0 )
			{
			sprite_index = hover_sprite;       
			}
    }
    else {
        if timer = 0 {
            vspeed = 2.8*size
      	    boosting_frames = 7 + mid_jump_speed / 0.75;
	    }
    if ( timer < 30 )
      {
	image_index = ( timer / 4 );
	image_speed = 0
      }
      else
      {
	image_index = 8
	image_speed = 0
      }
    }
    climbing = 0;
}

if ( gravity_lock == 0 )
  {
  if ( boosting_frames > 0 )
    {
    if ( air == 0 )
      {
      boosting_frames = 0;
      }
      else
    if ( attack_type != "none" && !holdjump )
      {
      boosting_frames = 0;
      vspeed = 0;
      }
      else if state_type != "flinch" && state_type != "air_flinch"
      {
      if vspeed > -mid_jump_speed*size
        vspeed -= size * 0.8;
      boosting_frames -= 1;
      hoverlock = 1;
      force_edge_grab = 1;
      }
     else {
      boosting_frames = 0;
    }
    }
  }
  else
  boosting_frames = 0;
if sprite_index = ukemi_sprite
{
	image_speed = 0.35;
	if timer == 6
	sound_play ( upb_sound )
}
if ( sprite_index = air_dodge_sprite && state_type = "air_dodge" )
{
image_speed = 0.45;
}

if ( sprite_index = roll_sprite && state_type = "dodge" )
{
image_speed = 0;
switch ( timer )
    {
	case 0: image_index = 7; break;
	case 1: image_index = 6; break;
	case 2: image_index = 0; break;
	case 4: image_index = 1; break;
	case 5: image_index = 2; break;
	case 6: image_index = 3; break;
	case 20: image_index = 2; break;
	case 21: image_index = 1; break;
	case 22: image_index = 0; break;
	case 23: image_index = 4; break;
	case 24: image_index = 5; break;
	case 25: image_index = 6; break;
	case 26: image_index = 7; break;
	}
}
if state_type = "land" || state_type = "respawn" || state_type = "edge" || state_type = "stand"
    can_sideb = 1;
	
if ( state_type = "flinch" || state_type = "air_flinch" || state_type = "out" )
{
sound_stop(b_charge_sound);
sound_stop(b_loop_sound);
}

if ( place_meeting ( target.x , target.y , projectile_box ) )
    {
    obj = instance_nearest ( target.x , target.y , projectile_box );
    if ( obj.hit <= 2 ){
    if ( shadow_ball.sizetemp > 0.16){
if (dontrepeat = 0 && (sprite_index == b_shoot_sprite || instance_exists(shadow_ball)) && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 85) || (target.weight > .22 && target.weight < .3 && target.percent > 95) || (target.weight > .3 && target.percent > 110)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.055;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 100
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
        enemy.state_type = "flinch"
				enemy.timer = 0
				enemy.time = 70
				enemy.speed = temp_speed * 2
				enemy.gravity = temp_grav + 1.5
        enemy.direction += 90

				dontrepeat = 1;
				}
				}
      }
    }
    with ( obj )
		{
			hit = 2;
			instance_destroy();
    }           
    }