if global.gs_form[number-1] = 0
{
if time = -1 {
    hspeed = 0;
    state_type = "attack";
    attack_type = "bthrow";
    image_speed = 0;
    sprite_index = ssmash2_sprite;
    image_index=0;
    timer = 0;
    time = 42;
    timer_speed=1;
    target.timer_speed = 0;
    target.alarm[0] = 51
}
if timer < time {
		
		    switch ( timer )
			{
			case 3: image_index = 1; break;
			case 10: image_index = 4; break;
			case 12: image_index = 5; image_xscale *= 1.1; image_yscale *= 1.1; shakex = 2 - facing*4; break;
			case 13: shakex = -2 + facing*4; break;
			case 14: shakex = 2 - facing*4; break;
			case 15: shakex = -2 + facing*4; break;
			case 16: shakex = 1 - facing*2; break;
			case 17: shakex = -1 + facing*2; break;
			case 18: shakex = 0; break;
			case 22: image_index = 6; break;
			case 24: image_index = 7; break;
			}
if timer = 0 {
        facing = 1-facing;
    }  
            if timer <= 12 {
        target.x = x + 16 * (1-facing*2) * size;
        target.y = y-1;
    }          
            if timer >= 10 && timer <= 12 {
                hspeed = (0.75-facing*1.5)*size
            }
            if timer = 12 {
                duster = instance_create(x,y,obj_dust_effect);
                duster.facing = facing;
                hspeed = 0
                sound_play(ssmash_sound);
                sound_play(ssmash_voice);
                create_hitbox(15+round(aura/3),22+facing*136,5+aura/7,4.8+aura/8,15+round(aura),7+round(aura/2),aura4,obj_spark_aura,1.35+aura/48,0.8+aura/70,36,13,self.id,8,4);
                hitbox.hit_stun = 5;
                spark = create_spark(25,18,smashaura_sprite,1,0.2+aura/200,0.2+aura/200)
                spark.image_angle = 0+facing*180
            }
            if timer = 15 {
                hitbox.damage = size*(9+round(aura/3));
                hitbox.bkb *= 0.75
                hitbox.kbg *= 0.8
                hitbox.sfx = aura3
                set_hitlag(hitbox,round(5+aura/3))
            }
        }  
        if timer = 28
if image_index >= image_number - image_speed
        image_speed = 0
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    facing = 1-facing;
}
        
}        
if global.gs_form[number-1] = 1
{
if time = -1 {
    hspeed = 0;
    state_type = "attack";
    attack_type = "bthrow";
    image_speed = 0;
    sprite_index = ssmash2_sprite;
    image_index=0;
    timer = 0;
    time = 42;
    timer_speed=1;
    target.timer_speed = 0;
    target.alarm[0] = 51
}
if timer < time {
		
		    switch ( timer )
			{
			case 3: image_index = 1; break;
			case 10: image_index = 4; break;
			case 12: image_index = 5; image_xscale *= 1.1; image_yscale *= 1.1; shakex = 2 - facing*4; break;
			case 13: shakex = -2 + facing*4; break;
			case 14: shakex = 2 - facing*4; break;
			case 15: shakex = -2 + facing*4; break;
			case 16: shakex = 1 - facing*2; break;
			case 17: shakex = -1 + facing*2; break;
			case 18: shakex = 0; break;
			case 22: image_index = 6; break;
			case 24: image_index = 7; break;
			}
if timer = 0 {
        facing = 1-facing;
    }  
            if timer <= 12 {
        target.x = x + 16 * (1-facing*2) * size;
        target.y = y-1;
    }          
            if timer >= 10 && timer <= 12 {
                hspeed = (0.75-facing*1.5)*size
            }
            if timer = 12 {
                duster = instance_create(x,y,obj_dust_effect);
                duster.facing = facing;
                hspeed = 0
                sound_play(ssmash_sound);
                sound_play(ssmash_voice);
                create_hitbox(15,22+facing*136,5,7,15,7,aura4,obj_spark_aura,1.35,0.8,36,13,self.id,8,4);
                spark = create_spark(25,18,smashaura_sprite,1,0.2,0.2)
                spark.image_angle = 0+facing*180
            }
            if timer = 15 {
                hitbox.damage = 9*size
                hitbox.bkb *= 0.75
                hitbox.kbg *= 0.8
                hitbox.sfx = aura3
                set_hitlag(hitbox,round(5+aura/3))
            }
        }  
        if timer = 28
if image_index >= image_number - image_speed
        image_speed = 0
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    facing = 1-facing;
}
}
