if global.gs_form[number-1] = 0
{
if state_type = "crouch" || state_type = "stand" {
    hspeed = 0;
    state_type = "attack";
    attack_type = "dsmash";
    image_speed = 0;
    sprite_index = newdsmash_sprite;
    image_index = 0;
    timer = 0;
    time = 45;
    charge_frame = 2;
}
if timer < time {

    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 5: image_index = 2; break;
        case 7: image_index = 3; break;
        case 9: image_index = 4; break;
        case 11: image_index = 5; break;
        case 14: image_index = 6; break;
	case 16: image_index = 7; break;
	case 19: image_index = 8; break;        
	case 34: image_index = 9; break;
        case 36: image_index = 10; break;
        case 38: image_index = 11; break;
        case 42: image_index = 12; break;
      }
	  
    if timer = 16 {
        sound_play(dsmash_sound);
        sound_play(dsmash_voice);
        create_hitbox(15+aura/3,18+facing*144,5+aura/4.5,6+aura/8,13+round(aura/1.2),6+round(aura/2),aura4,obj_spark_aura,1.4+aura/50,0.85,34,14,self.id,4,4);
        hitbox.hit_stun = 4
        spark = create_spark(17,17,smashaura_sprite,1,0.16+aura/200,0.16+aura/200)
        spark.image_angle = 0+facing*180
        create_hitbox2(15+aura/3,162-facing*144,5+aura/4.5,6+aura/8,13+round(aura/1.2),6+round(aura/2),aura4,obj_spark_aura,1.4+aura/50,0.85,-22,14,self.id,4,4);
        hitbox.hit_stun = 4
        spark = create_spark(-25,17,smashaura_sprite,1,0.16+aura/200,0.16+aura/200)
        spark.image_angle = 180-facing*180
        duster = instance_create(x+(16-facing*32)*size,y,obj_dust_effect)
        duster.facing = 1-facing
        duster.image_alpha = 0.75
        duster.image_xscale *= 1.2*size
        duster.image_yscale *= 0.75*size
        duster = instance_create(x-(11-facing*22)*size,y,obj_dust_effect)
        duster.facing = facing
        duster.image_alpha = 0.75
        duster.image_xscale *= 1.2*size
        duster.image_yscale *= 0.75*size
    }
}

        if (timer >= 16){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 105) || (target.weight > .22 && target.weight < .3 && target.percent > 115) || (target.weight > .3 && target.percent > 130)){
				killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	       

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        
}        
if global.gs_form[number-1] = 1
{
if state_type = "crouch" || state_type = "stand" {
    hspeed = 0;
    state_type = "attack";
    attack_type = "dsmash";
    image_speed = 0;
    sprite_index = newdsmash_sprite;
    image_index = 0;
    timer = 0;
    time = 45;
    charge_frame = 2;
}
if timer < time {

    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 5: image_index = 2; break;
        case 7: image_index = 3; break;
        case 9: image_index = 4; break;
        case 11: image_index = 5; break;
        case 14: image_index = 6; break;
	case 16: image_index = 7; break;
	case 19: image_index = 8; break;        
	case 34: image_index = 9; break;
        case 36: image_index = 10; break;
        case 38: image_index = 11; break;
        case 42: image_index = 12; break;
      }
	  
    if timer = 16 {
        sound_play(dsmash_sound);
        sound_play(dsmash_voice);
        create_hitbox(15,18+facing*144,5,6.9,13,6,aura4,obj_spark_aura,1.4,0.85,34,14,self.id,4,4);
        hitbox.hit_stun = 4
        spark = create_spark(17,17,smashaura_sprite,1,0.16,0.16)
        spark.image_angle = 0+facing*180
        create_hitbox2(15,162-facing*144,5,6.9,13,6,aura4,obj_spark_aura,1.4,0.85,-22,14,self.id,4,4);
        hitbox.hit_stun = 4
        spark = create_spark(-25,17,smashaura_sprite,1,0.16,0.16)
        spark.image_angle = 180-facing*180
        duster = instance_create(x+(16-facing*32)*size,y,obj_dust_effect)
        duster.facing = 1-facing
        duster.image_alpha = 0.75
        duster.image_xscale *= 1.2*size
        duster.image_yscale *= 0.75*size
        duster = instance_create(x-(11-facing*22)*size,y,obj_dust_effect)
        duster.facing = facing
        duster.image_alpha = 0.75
        duster.image_xscale *= 1.2*size
        duster.image_yscale *= 0.75*size
    }
}  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
}
