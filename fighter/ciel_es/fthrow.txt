if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "fthrow";
image_speed = 0;
sprite_index = fthrow_sprite;
image_index=0;
timer = 0;
time = 41;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 41
}
if timer < time {
	 switch (timer)
	 {
		case 3: image_index = 1; break;
		case 6: image_index = 2; break;
		case 9: image_index = 3; break;
		case 12: image_index = 4; break;
		case 15: image_index = 5; break;
		case 18: image_index = 6; break;
		case 22: image_index = 7; break;
		case 26: image_index = 8; break;
		case 30: image_index = 9; break;
		case 34: image_index = 10; break;
		case 38: image_index = 11; break;
	 }
	 
	if timer = 3
	{
	sound_play(choose(fthrow_voice1,fthrow_voice2,fthrow_voice3))
	}
	 
	if timer = 5
	{
	fthrowspike = create_spark ( 0 , 0 , fthrowspike_sprite , 0 , .24*(1-facing*2) , .24  );
	fthrowspike.alarm[0] = 42
	fthrowspike.snap = self.id;
	fthrowspike.owner = self.id;
	fthrowspike.keepmain = self.keepmain;
	fthrowspike.image_alpha = 0
	}
	
	if timer <= 15 and instance_exists(fthrowspike)
	{
	fthrowspike.image_alpha += .1	
	}
	 
	if timer = 15
	{
	sound_play(fthrow_sound);
	
	fthrowvfx = create_spark ( 0 , 0 , fthrowvfx_sprite , 0 , .24*(1-facing*2) , .24  );
	fthrowvfx.alarm[0] = 14
	fthrowvfx.snap = self.id;
	fthrowvfx.owner = self.id;
	fthrowvfx.keepmain = self.keepmain;
	fthrowvfx.script = char_custom10;
	fthrowvfx.identifier = "regularvfx"
	
	fthrowspike.image_index = 1
	
	create_hitbox(13,angle_correct(25),4.2,6,-1,13,es_slashhitsound4,obj_spark_slash3,2,1.3,abs(place_x(308)),-place_y(150),self.id,5,5);
	}
	
	if timer = 18
	{
	fthrowspike.script = char_custom10;
	fthrowspike.identifier = "regularvfx"
	}
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
}

if (timer >= 15){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && target.offstage && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 105) || (target.weight > .22 && target.weight < .3 && target.percent > 115) || (target.weight > .3 && target.percent > 125)){
			    killspark = instance_create(enemy.x-120,enemy.y-115,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.5;
				killspark.image_yscale = size * 0.5;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 90
				freezer2.alarm[0] = 130
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x + 45;
				spark.camera_r = enemy.x - 45;
				spark.camera_u = enemy.y - 15;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
	attack_type = "none"
    state_type = "stand"
    timer = 0
    time =-1
    }
        
