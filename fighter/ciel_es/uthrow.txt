if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "uthrow";
image_speed = 0;
sprite_index = uthrow_sprite;
image_index=0;
timer = 0;
time = 68;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 68

sound_play(choose(uthrow_voice1,uthrow_voice2))
}
if timer < time {
    switch ( timer )
      {
	  case 10: image_index = 1; break;
	  case 16: image_index = 2; break;
	  case 22: image_index = 3; break;
	  case 28: image_index = 4; break;
	  case 34: image_index = 5; break;
	  case 38: image_index = 6; break;
	  case 43: image_index = 7; break;
	  case 48: image_index = 8; break;
	  case 53: image_index = 9; break;
	  case 58: image_index = 10; break;
	  case 63: image_index = 11; break;
	  }
	  
	if timer = 28
	{
	sound_play(combinedbreunor_sound);
	uthrowvfx = create_spark ( 0 , 0 , uthrowvfx_sprite , 0 , .24*(1-facing*2) , .24  );
	uthrowvfx.alarm[0] = 54
	uthrowvfx.snap = self.id;
	uthrowvfx.owner = self.id;
	uthrowvfx.keepmain = self.keepmain;
	}
	
	switch (timer)
	{
	case 30: uthrowvfx.image_index = 1; break;
	case 32: uthrowvfx.image_index = 2; break;
	case 34: uthrowvfx.image_index = 3; break;
	}
	 
	if timer = 34
	{	
	create_hitbox(13,angle_correct(85),7,6,-1,13,es_slashhitsound4,obj_spark_slash3,1,2,abs(place_x(236)),-place_y(85),self.id,5,5);
	hitbox.hit_stun = 40
	}
	
	if timer = 46
	{
	uthrowvfx.script = char_custom10;
	uthrowvfx.identifier = "regularvfx"	
	}
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        
