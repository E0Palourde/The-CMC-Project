if identifier = "ssmashcrest"
{

if timer = 1
{
visible = 1;
priority = 5
moving_object = 0;

sound_play(es.crestcast_sound);
}

switch (timer)
{
case 2: image_index = 1; break;
case 3: image_index = 2; break;
case 4: image_index = 3; break;
case 31: image_alpha = .8; break;
case 33: image_alpha = .6; break;
case 35: image_alpha = .4; break;
case 37: image_alpha = .2; break;
case 39: image_alpha = .2; break;
case 41: instance_destroy(); break;
}

if timer = 22
{
sound_play(es.crestspikesappear_sound);
		crestspikes = create_projectile(9, 45+es.facing*90, 4.678, 6.5, 18, 9, es.es_slashhitsound2, obj_spark_aura, .24*(1-es.facing*2), .24, abs(place_x(185)), -place_y(93), es.id, 64, char_custom1);
		crestspikes.es = es;
		crestspikes.identifier = "ssmashspikes"
		crestspikes.sprite_index = es.ssmashspikes_sprite;
		crestspikes.image_speed = 0;
}

if (es.attack_type = "none")
{
fastforwardvar = 1
}

if (es.attack_type = "ssmash" or es.attack_type = "usmash" or es.attack_type = "dsmash" or es.attack_type = "zair" or es.attack_type = "sideb" or es.state_type = "air_flinch") and timer < 30 and fastforwardvar = 1
{
timer = 30
}

}

if identifier = "ssmashspikes"
{

if timer = 1
{
visible = 1;
priority = 3
moving_object = 0;
}

switch (timer)
{
case 11: hit = 2; break;
case 13: image_alpha = .8; break;
case 15: image_alpha = .6; break;
case 17: image_alpha = .4; break;
case 19: image_alpha = .2; break;
case 21: instance_destroy(); break;
}

if hit = 1
{
time = 23;
alarm[0] = 23
}

}



if identifier = "usmashcrest"
{

if timer = 1
{
visible = 1;
priority = 5
moving_object = 0;
sound_play(es.crestcast_sound);
}

switch (timer)
{
case 2: image_index = 1; break;
case 3: image_index = 2; break;
case 4: image_index = 3; break;
case 31: image_alpha = .8; break;
case 33: image_alpha = .6; break;
case 35: image_alpha = .4; break;
case 37: image_alpha = .2; break;
case 39: image_alpha = .1; break;
case 41: instance_destroy(); break;
}

if timer = 22
{
sound_play(es.crestspikesappear_sound);
		crestspikes = create_projectile(9, 75+es.facing*30, 3.678, 6.5, 18, 9, es.es_slashhitsound2, obj_spark_aura, .24*(1-es.facing*2), .24, abs(place_x(166)), -place_y(131), es.id, 64, char_custom1);
		crestspikes.es = es;
		crestspikes.identifier = "usmashspikes"
		crestspikes.sprite_index = es.usmashspikes_sprite;
		crestspikes.image_speed = 0;
}

if (es.attack_type = "none")
{
fastforwardvar = 1
}

if (es.attack_type = "ssmash" or es.attack_type = "usmash" or es.attack_type = "dsmash" or es.attack_type = "zair" or es.attack_type = "sideb" or es.state_type = "air_flinch") and timer < 30 and fastforwardvar = 1
{
timer = 30
}

}

if identifier = "usmashspikes"
{

if timer = 1
{
visible = 1;
priority = 3
moving_object = 0;
}

switch (timer)
{
case 11: hit = 2; break;
case 13: image_alpha = .8; break;
case 15: image_alpha = .6; break;
case 17: image_alpha = .4; break;
case 19: image_alpha = .2; break;
case 21: instance_destroy(); break;
}

if hit = 1
{
time = 23;
alarm[0] = 23
}

}



if identifier = "dsmashcrest"
{

if timer = 1
{
visible = 1;
priority = 5
moving_object = 0;
sound_play(es.crestcast_sound);
}

switch (timer)
{
case 2: image_index = 1; break;
case 3: image_index = 2; break;
case 4: image_index = 3; break;
case 31: image_alpha = .8; break;
case 33: image_alpha = .6; break;
case 35: image_alpha = .4; break;
case 37: image_alpha = .2; break;
case 39: image_alpha = .1; break;
case 41: instance_destroy(); break;
}

if timer = 22
{
sound_play(es.crestspikesappear_sound);
		crestspikes = create_projectile(9, 15+es.facing*150, 3.678, 6.5, 18, 9, es.es_slashhitsound2, obj_spark_aura, .24*(1-es.facing*2), .24, abs(place_x(286)), -place_y(139), es.id, 64, char_custom1);
		crestspikes.es = es;
		crestspikes.identifier = "dsmashspikes"
		crestspikes.sprite_index = es.dsmashspikes_sprite;
		crestspikes.image_speed = 0;
}

if (es.attack_type = "none")
{
fastforwardvar = 1
}

if (es.attack_type = "ssmash" or es.attack_type = "usmash" or es.attack_type = "dsmash" or es.attack_type = "zair" or es.attack_type = "sideb" or es.state_type = "air_flinch") and timer < 30 and fastforwardvar = 1
{
timer = 30
}

}

if identifier = "dsmashspikes"
{

if timer = 1
{
visible = 1;
priority = 3
moving_object = 0;
}

switch (timer)
{
case 11: hit = 2; break;
case 13: image_alpha = .8; break;
case 15: image_alpha = .6; break;
case 17: image_alpha = .4; break;
case 19: image_alpha = .2; break;
case 21: instance_destroy(); break;
}

if hit = 1
{
time = 23;
alarm[0] = 23
}

}



if identifier = "zaircrest"
{

if timer = 1
{
visible = 1;
priority = 5
moving_object = 0;
sound_play(es.crestcast_sound);

		secondcrest = create_projectile(0, angle_correct(0), 0, 0, 0, 0, kick2, obj_spark_hit3, .24*(1-es.facing*2), .24, 0, 0, self.id, 86, char_custom1);
		secondcrest.es = es;
		secondcrest.identifier = "secondcrestspawner"
		secondcrest.sprite_index = sprite_index;
		secondcrest.image_index = 4;
		secondcrest.image_speed = 0;
		secondcrest.hit = 2;
}

switch (timer)
{
case 2: image_index = 1; break;
case 3: image_index = 2; break;
case 4: image_index = 3; break;
case 6: image_alpha = .9; break;
case 7: image_alpha = .8; break;
case 8: image_alpha = .7; break;
case 9: image_alpha = .6; break;
case 10: image_alpha = .5; break;
case 11: image_alpha = .4; break;
case 12: image_alpha = .3; break;
case 13: image_alpha = .2; break;
case 14: image_alpha = .1; break;
case 15: instance_destroy(); break;
}

}



if identifier = "secondcrestspawner"
{

if timer = 1
{
visible = 1;
priority = 5
moving_object = 0;
}

switch (timer)
{
case 1: image_alpha = .1; break;
case 5: image_alpha = .15; break;
case 7: image_alpha = .2; break;
case 9: image_alpha = .4; break;
case 11: image_alpha = .6; break;
case 13: image_alpha = .8; break;
case 15: image_alpha = 1; break;
case 17: image_alpha = .9; break;
case 19: image_alpha = .8; break;
case 21: image_alpha = .7; break;
case 23: image_alpha = .6; break;
case 25: image_alpha = .5; break;
case 27: image_alpha = .6; break;
case 29: image_alpha = .75; break;
case 31: image_alpha = .9; break;
case 33: image_alpha = 1; break;
case 35: image_alpha = .85; break;
case 37: image_alpha = .7; break;
case 39: image_alpha = .6; break;
case 41: image_alpha = .5; break;
case 43: image_alpha = .6; break;
case 45: image_alpha = .7; break;
case 47: image_alpha = .85; break;
case 49: image_alpha = 1; break;
case 51: image_alpha = .85; break;
case 53: image_alpha = .7; break;
case 55: image_alpha = .6; break;
case 57: image_alpha = .5; break;
case 59: image_alpha = .6; break;
case 61: image_alpha = .7; break;
case 63: image_alpha = .85; break;
case 65: image_alpha = 1; break;
case 75: image_alpha = .9; break;
case 76: image_alpha = .8; break;
case 77: image_alpha = .7; break;
case 78: image_alpha = .6; break;
case 79: image_alpha = .5; break;
case 80: image_alpha = .4; break;
case 81: image_alpha = .3; break;
case 82: image_alpha = .2; break;
case 83: image_alpha = .1; break;
case 84: image_alpha = .05; break;
case 85: instance_destroy(); break;
}

if (es.attack_type = "none")
{
fastforwardvar = 1
}

if (es.attack_type = "ssmash" or es.attack_type = "usmash" or es.attack_type = "dsmash" or es.attack_type = "zair" or es.attack_type = "sideb" or es.state_type = "air_flinch") and timer < 74 and fastforwardvar = 1
{
timer = 74
}



if timer = 65
{
sound_play(es.crestspikesappear_sound);
		crestspikes = create_projectile(9, 364, 3.678, 6.5, 18, 9, es.es_slashhitsound3, obj_spark_aura, .24*(1-es.facing*2), .24, 0, 0, es.id, 64, char_custom1);
		crestspikes.es = es;
		crestspikes.identifier = "zairspikes"
		crestspikes.sprite_index = es.zairspikes_sprite;
		crestspikes.image_speed = 0;
}

}



if identifier = "zairspikes"
{

if timer = 1
{
visible = 1;
priority = 3
moving_object = 0;
}

switch (timer)
{
case 12: hit = 2; break;
case 13: image_alpha = .9; break;
case 14: image_alpha = .8; break;
case 15: image_alpha = .7; break;
case 16: image_alpha = .6; break;
case 17: image_alpha = .5; break;
case 18: image_alpha = .4; break;
case 19: image_alpha = .3; break;
case 20: image_alpha = .15; break;
case 21: instance_destroy(); break;
}

if hit = 1
{
time = 23;
alarm[0] = 23
}

}