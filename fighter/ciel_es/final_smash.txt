if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding" {
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0;
        sprite_index = final_smash_attempt_sprite;
        image_index=0;
        timer = 1;
        time = 129;
        timer_speed=1;
        intangible = 1;
        final_smashes+=1
        smash_power = 0
        air_move=0
		
		finalsmashconnectvar = 0
		targetstore = -1
		
        spark = instance_create ( 0 , 0 , obj_camerazoom );
        spark.camera_l = x - 15;
        spark.camera_r = x + 15;
        spark.camera_u = y - 10 - actual_height;
        spark.camera_d = y + 5;
        spark.camera_boundary_zoom = 80;
        spark.alarm[0] = 46;

        duster = instance_create ( 0 , 0 , obj_freeze );
        duster.dontpause = self.id;
        duster.alarm[0] = 46;
				
				finalsmashvfx = create_spark ( abs(place_x(350)) , -place_y(10) , finalsmashvfxgray_sprite , .5 , .25, .25);
				finalsmashvfx.depth = depth-1;
				finalsmashvfx.loop = 0;
				 
				finalsmashvfx2 = create_spark ( abs(place_x(350)) , -place_y(10) , finalsmashvfxgray2_sprite , .5 , .25, .25);
				finalsmashvfx2.depth = finalsmashvfx.depth-1;
				finalsmashvfx2.loop = 0;
	
	blackbgeffect = create_spark ( 0 , 0 , blackbg_sprite , 0 , 100, 100);
	blackbgeffect.depth = 15;
	blackbgeffect.alarm[0] = 300
	blackbgeffect.image_alpha = 0;
	
	sound_play(finalsmash_voice1)
		
}
vspeed=0
gravity_lock = 1;
if ( timer < time ){

switch ( timer )
    {
	case 4: image_index = 1; break;
	case 8: image_index = 2; break;
	case 12: image_index = 3; break;
	case 28: image_index = 4; break;
	case 34: image_index = 5; break;
	case 40: image_index = 6; break;
	case 46: image_index = 7; break;
	case 51: image_index = 8; break;
	case 54: image_index = 9; break;
	case 57: image_index = 10; break;
	case 60: image_index = 11; break;
	case 63: image_index = 10; break;
	case 66: image_index = 11; break;
	case 69: image_index = 10; break;
	case 72: image_index = 11; break;
	case 75: image_index = 10; break;
	case 78: image_index = 11; break;
	case 81: image_index = 10; break;
	case 84: image_index = 11; break;
	case 87: image_index = 10; break;
	case 90: image_index = 11; break;
	case 93: image_index = 10; break;
	case 96: image_index = 11; break;
	case 99: image_index = 10; break;
	case 102: image_index = 11; break;
	case 105: image_index = 12; break;
	case 109: image_index = 13; break;
	case 113: image_index = 14; break;
	case 117: image_index = 15; break;
	case 121: image_index = 16; break;
	case 125: image_index = 17; break;
	
	case 205: image_index = 1; break;
	case 210: image_index = 2; break;
	case 215: image_index = 3; break;
	case 220: image_index = 4; break;
	case 225: image_index = 5; break;
	case 230: image_index = 6; break;
	case 245: image_index = 7; break;
	case 247: image_index = 8; break;
	case 249: image_index = 9; break;
	case 251: image_index = 10; break;
	case 253: image_index = 11; break;
	case 255: image_index = 12; break;
	case 257: image_index = 13; break;
	case 259: image_index = 14; break;
	case 261: image_index = 15; break;
	case 264: image_index = 16; break;
	case 267: image_index = 17; break;
	case 270: image_index = 18; break;
	case 273: image_index = 19; break;
	case 277: image_index = 20; break;
	case 281: image_index = 21; break;
	case 285: image_index = 22; break;
	case 289: image_index = 23; break;
	case 293: image_index = 24; break;
	case 297: image_index = 25; break;
	case 301: image_index = 26; break;
	case 305: image_index = 27; break;
	case 309: image_index = 28; break;
	
    }
	
	if timer = 34
	{
	finalsmashvfx1 = create_spark ( 0 , 0 , final_smash_vfx_sprite , 0 , .24*(1-facing*2) , .24  );
	finalsmashvfx1.alarm[0] = 50
	finalsmashvfx1.owner = self.id;
	finalsmashvfx1.keepmain = self.keepmain;
	finalsmashvfx1.depth = depth-1;
	finalsmashvfx1.script = char_custom10;
	finalsmashvfx1.identifier = "finalsmashvfx1"
	sound_play(ssmash_sound);
	}
	
	if timer = 51
	{
	sound_play(crestspikesappear_sound);
	}
	
	if (timer >= 57 && timer <= 102) and timer mod 6 = 0
	{
	finalsmashvfx2 = create_spark ( 0 , 20 , final_smash_vfx_sprite2 , 0 , .24*(1-facing*2) , .24  );
	finalsmashvfx2.alarm[0] = 11
	finalsmashvfx2.owner = self.id;
	finalsmashvfx2.keepmain = self.keepmain;
	finalsmashvfx2.depth = depth-1;
	finalsmashvfx2.script = char_custom10;
	finalsmashvfx2.identifier = "regularvfx"
	
	finalsmashvfx5 = create_spark ( 0 , 20 , final_smash_vfx_sprite5 , .4 , .24*(1-facing*2) , .24  );
	finalsmashvfx5.owner = self.id;
	finalsmashvfx5.keepmain = self.keepmain;
	finalsmashvfx5.depth = depth+1;
	}
	
	if timer = 54
	{
	sound_play(dashattack_sound);
		
	hspeed=5*(1-facing*2)
	
	create_hitbox(10,90,1,0,-1,1,es_slashhitsound3,obj_spark_slash3,1.3,1.7,abs(place_x(250)),-place_y(132),self.id,50,5);
	hitbox.image_angle = angle_correct(0)	
	hitbox.execute_on_hit = "attacker.finalsmashconnectvar = 1
	sound_play(attacker.finalsmashhit_sound)
	sound_play(attacker.finalsmashhit_sound2)"
	}
	
	
	if timer >= 1 && timer <= 21 {blackbgeffect.image_alpha+=.05;}
	
	if (timer >= 105 && timer <= 125) or (timer >= 251 && timer <= 271) 
	{
	blackbgeffect.image_alpha-=.05;
	}
	
	if timer >= 105 and timer < 129
	{
	hspeed*=.85;
	}
	
	if timer = 105 and air = 0
	{
	gfx_land_effect ( x , y , actual_width );
	}
	
	if timer < 105 and finalsmashconnectvar = 1
	{
	time = 313
	timer = 200
	sprite_index = final_smash_success_sprite;
	targetstore = target
	image_index = 0
	hspeed *= .5
	}
	
	
	
	
	
	
	if timer = 201
	{
        spark = instance_create ( 0 , 0 , obj_camerazoom );
        spark.camera_l = targetstore.x
        spark.camera_r = x + 45*(1-facing*2);
        spark.camera_u = y - 20 - actual_height;
        spark.camera_d = y + 5;
        spark.camera_boundary_zoom = 80;
        spark.alarm[0] = 29;

        duster = instance_create ( 0 , 0 , obj_freeze );
        duster.dontpause = self.id;
        duster.alarm[0] = 29;
	}
	
	if timer >= 200 and timer < 230
	{
		target.state_type = "flinch"
		target.speed = 0;
		target.gravity_lock = 2;
		target.ignore_physics = 1;
		target.alarm[0] = 30
	}
	
	if timer = 225
	sound_play(finalsmash_sound)
	
	if timer = 230
	{
	finalsmashvfx3 = create_spark ( 0 , 0 , final_smash_vfx_sprite3 , 1/5 , .24*(1-facing*2) , .24  );
	finalsmashvfx3.alarm[0] = 27
	finalsmashvfx3.snap = self.id;
	finalsmashvfx3.owner = self.id;
	finalsmashvfx3.keepmain = self.keepmain;
	finalsmashvfx3.depth = depth-1;
	
	finalsmashvfx4 = create_spark ( 0 , 0 , final_smash_vfx_sprite4 , 1/5 , .24*(1-facing*2) , .24  );
	finalsmashvfx4.alarm[0] = 33
	finalsmashvfx4.snap = self.id;
	finalsmashvfx4.owner = self.id;
	finalsmashvfx4.keepmain = self.keepmain;
	finalsmashvfx4.depth = depth-1;
	
	sound_play(finalsmash_voice2)
	
	hspeed=5*(1-facing*2);
	create_projectile(20,angle_correct(25),7,8,-1,30,es_slashhitsound4,obj_spark_slash4,1,1,0,0,self.id,9,-1);
	proj.x = targetstore.x
	proj.y = targetstore.y-targetstore.actual_height/2
	proj.priority = 5
	proj.image_angle = angle_correct(0)	
	proj.execute_on_hit = "sound_play(attacker.finalsmash_sound2);"
	}
	
	if timer >= 231
	{
	hspeed*=.9;
	}
	
	
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
}

	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	
    smash_power = 0
    attack_type = "none";
    intangible = 0;
    if air > 0
    state_type = "jump";
    else
    state_type = "stand";
    timer = 0;
    time =-1;
    }