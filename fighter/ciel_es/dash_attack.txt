if state_type = "run" || state_type = "stand" {
        state_type = "attack";
        attack_type = "dash_attack";
        image_speed = 0;
        sprite_index = dash_attack_sprite;
        image_index=0;
        timer = 0;
        time = 34;
        timer_speed=1;
		sound_play(dashattack_sound);
}
if timer < time {
     state_type = "attack";
	 switch (timer) 
	 {
	 case 3: image_index = 1; break;
	 case 5: image_index = 2; break;
	 case 7: image_index = 3; break;
	 case 9: image_index = 4; break;
	 case 11: image_index = 5; break;
	 case 13: image_index = 6; break;
	 case 16: image_index = 7; break;
	 case 19: image_index = 8; break;
	 case 22: image_index = 9; break;
	 case 25: image_index = 10; break;
	 case 28: image_index = 11; break;
	 case 31: image_index = 12; break;
	 }
	 
	if timer < 7
	hspeed=5*(1-facing*2)
	 
	if timer = 13
	{
	dashattackvfx = create_spark ( 0 , 0 , dash_attackvfx_sprite , .5 , .24*(1-facing*2) , .24  );
	dashattackvfx.snap = self.id;
	dashattackvfx.owner = self.id;
	dashattackvfx.keepmain = self.keepmain;
	
	sound_play(jab_voice4);
	
	hspeed=0
	create_hitbox(8,angle_correct(15),5,6.5,16,8,es_jabhitsound3,obj_spark_hit3,1.3,.9,abs(place_x(256)),-place_y(128),self.id,3,3);
	hitbox.image_angle = angle_correct(0)
	}
	
	if (timer >= 16 and timer < 24) and ((smashright and !facing) or (smashleft and facing)) and attack_success
	{
	state_type = "stand";
    attack_type = "none";
	attacking = 0;
    timer = 0;
    time = -1;
    char_ssmash();
	}
	
	if (timer >= 16 and timer < 24) and smashup
	{
	state_type = "stand";
    attack_type = "none";
	attacking = 0;
    timer = 0;
    time = -1;
    char_usmash();
	}
	
	if (timer >= 16 and timer < 24) and smashdown
	{
	state_type = "stand";
    attack_type = "none";
	attacking = 0;
    timer = 0;
    time = -1;
    char_dsmash();
	}
	
	if (timer >= 16 and timer < 24) and special and ((moveright and !facing) or (moveleft and facing)) and attack_success
	{
	state_type = "stand";
    attack_type = "none";
	attacking = 0;
    timer = 0;
    time = -1;
    char_sideb();
	}
	
	if (timer >= 16 and timer < 24) and special and movedown and attack_success
	{
	state_type = "stand";
    attack_type = "none";
	attacking = 0;
    timer = 0;
    time = -1;
    char_downb();
	}
	
	if (timer >= 16 and timer < 24) and special and !moveright and !moveleft and attack_success and smash_power >= 300
	{
	state_type = "jump";
    attack_type = "none";
	attacking = 0;
    timer = 0;
    time = -1;
    char_final_smash();
	}
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
}  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
