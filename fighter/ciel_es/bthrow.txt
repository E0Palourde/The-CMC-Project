if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = bthrow_sprite;
image_index=0;
timer = 0;
time = 76;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 76

		target.x = x + place_x ( 241 );
		target.y = y;
		
sound_play(choose(uthrow_voice1,uthrow_voice2))
}

if timer < time {
	switch (timer)
	{
	case 10: image_index = 1; break;
	case 14: image_index = 2; break;
	case 18: image_index = 3; break;
	case 22: image_index = 4; break;
	case 30: image_index = 5; break;
	case 34: image_index = 6; break;
	case 40: image_index = 7; break;
	case 46: image_index = 8; break;
	case 52: image_index = 9; break;
	case 58: image_index = 10; break;
	case 64: image_index = 11; break;
	case 70: image_index = 12; break;
	}
	
	if timer = 10
	{
		target.x = x + place_x ( 238 );
	}
	
	if timer = 14
	{
		target.x = x + place_x ( 233 );
	}
	
	if timer = 18
	{
		target.x = x + place_x ( 227 );
	}
	
	if timer = 22
	{
		target.x = x + place_x ( 220 );
	}
	
	if timer = 30
	{
	sound_play(combinedbreunor_sound);
		target.x = x + place_x ( 214 );
	}
	
	if timer = 34
	{
		target.x = x + place_x ( 127 );
	}
	  
	if timer = 28
	{
	bthrowvfx = create_spark ( 0 , 20 , bthrowvfx_sprite , 0 , -.24*(1-facing*2) , .24  );
	bthrowvfx.alarm[0] = 54
	bthrowvfx.snap = self.id;
	bthrowvfx.owner = self.id;
	bthrowvfx.keepmain = self.keepmain;
	
	bthrowcrest = create_spark ( 0 , 20 , bthrowcrest_sprite , 0 , .12*(1-facing*2) , .12  );
	bthrowcrest.alarm[0] = 54
	bthrowcrest.snap = self.id;
	bthrowcrest.owner = self.id;
	bthrowcrest.keepmain = self.keepmain;
	bthrowcrest.image_alpha = 0;
	
	
	}
	
	if timer <= 34 and instance_exists(bthrowcrest)
	{
	bthrowcrest.image_alpha += .1	
	}
	
	switch (timer)
	{
	case 30: bthrowvfx.image_index = 1; break;
	case 32: bthrowvfx.image_index = 2; break;
	case 34: bthrowvfx.image_index = 3; break;
	}
	
	if timer = 34
	{
	bthrowcrest.image_alpha = 1;
	create_hitbox(13,angle_correct(165),4,5,-1,13,es_slashhitsound4,obj_spark_slash3,2,1.3,-abs(place_x(129)),-place_y(111),self.id,5,5);
	hitbox.image_angle = angle_correct(0)
	}
	
	if timer = 46
	{
	bthrowcrest.script = char_custom10;
	bthrowcrest.identifier = "regularvfx"	
	bthrowvfx.script = char_custom10;
	bthrowvfx.identifier = "regularvfx"	
	}
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
    
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    facing = 1-facing
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
