if ( time = -1 )
  {
    state_type = "attack";
    attack_type = "bthrow";
    timer = 0;
    time = 37;
    sprite_index = bthrow_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    target.timer_speed = 0;
    target.alarm[0] = 100;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 8: image_index = 3; break;
	case 12: image_index = 4; break;
	case 15: image_index = 5; break;
	case 17: image_index = 6; break;
	case 19: image_index = 7; break;
	case 21: image_index = 8; break;
	case 24: image_index = 9; break;
	case 27: image_index = 10; break;
	case 29: image_index = 11; break;
	case 31: image_index = 11; break;
      }
	  
	if ( timer <= 2 )
	{
	target.x = x + 18 * size * (1-facing*2);
	target.y = y;
	}
	if ( timer >= 3 && timer <= 8 )
	{
	target.x = x + 27 * size * (1-facing*2);
	target.y = y + ( timer - 15 ) * size;
	target.depth = depth - 1;
	}
	if ( timer >= 8 && timer <= 14 )
	{
	target.x = x + 29 * size * (1-facing*2);
	target.y = y + ( timer - 17 ) * size;
	target.depth = depth - 1;
	}
	if ( timer >= 15 && timer <= 16 )
	{
	target.x = x + 20 * size * (1-facing*2);
	target.y = y + ( timer - 24 ) * size;
	target.depth = depth - 1;
	}
	if ( timer >= 17 && timer <= 18 )
	{
	target.x = x + 13 * size * (1-facing*2);
	target.y = y + ( timer - 29 ) * size;
	target.depth = depth - 1;
	}
	if ( timer >= 19 && timer <= 20 )
	{
	target.x = x + 6 * size * (1-facing*2);
	target.y = y + ( timer - 36 ) * size;
	target.depth = depth - 1;
	}

    if ( timer = 21 )
      {
	target.x = x - 37 * size * (1-facing*2);
	target.y = y;
	target.depth = depth - 1;
	sound_play(fthrow_sound);
	create_throw_box(12,145-facing*110,5.5,7,1,1,punch3,obj_spark_effect2,0.7,0.7,-37,10,self.id,1);
	shockwave = instance_create(x - 37 * (1-facing*2) * size ,y,obj_down_impact)
	shockwave.xscale = 0.4 * size;
	shockwave.yscale = 0.25 * size;
      }
  }

  
if (timer >= 33){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 100) || (target.weight > .22 && target.weight < .3 && target.percent > 110) || (target.weight > .3 && target.percent > 120)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.055;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 100
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
				dontrepeat = 1;
				}
				}
        
  }	   

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0;
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
	facing = 1 - facing;
  }