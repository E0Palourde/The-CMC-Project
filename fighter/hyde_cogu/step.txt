has_abs = 1

if(global.players = 2)
{

for ( i = 0 ; i < MAX_FIGHTERS ; i += 1 )
  {
  
	if ( db_charname[global.gs_character[i],1] == "seth" or db_charname[global.gs_character[i],1] == "sato_seth" ) {

  
  if state_type = "entry" and song = 0 {
  fs_music = tempmus_play2 ( mutual_situation_song , 99999 , 999 );
  song = 1
  }
  
	}
	
  }
  
}
if (enemy.state_type = "out"){
temp_spawn += 1
 }
if ( state_type = "jump" )
{
if ( vspeed >= 0 && sprite_index = jump_sprite )
{
sprite_index = jumpfall_sprite;
image_speed = 0;
}
}

if air = 0 {
	noinfinites = 0
}


if ( state_type = "crouch" )
{
sprite_index = crouch_sprite;
image_speed = 0;
switch (timer) 
{
case 0: image_index = 0; break;
case 4: image_index = 1; break;
case 8: image_index = 2; break;
case 12: image_index = 3; break;
case 16: image_index = 4; break;
case 20: image_index = 5; break;
case 24: image_index = 6; break;
case 28: image_index = 7; break;
case 32: image_index = 8; break;
case 36: image_index = 9; break;
case 40: image_index = 10; break;
case 44: image_index = 11; break;
}
}

if sprite_index = crouch_sprite and timer = 44  {
timer = 12
}

if ( state_type = "fall" )
{
sprite_index = fall_sprite;
image_speed = 0.5;


}

if image_index = 9 and sprite_index = fall_sprite {
	image_index = 5
}

maxmeter = 100

maxmaxmeter = 300

/////////////////Meter Start/////////////////////////////////////
if (!instance_exists(MeterHud)){
    hud_x = obj_game_control.hud_x[other.number-1];
    hud_y = window_h-128+lengthdir_y(obj_game_control.hudp_shake[i]*0.8,obj_game_control.hudp_shake[i]*60);    
    MeterHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    MeterHud.step_script = hudThing_step_script;
    MeterHud.draw_script = hudThing_draw_script;
    MeterHud.owner = self.id;
    MeterHud.keepmain = self.keepmain;
	MeterHud.sprite_index = meter_sprite;
	MeterHud.image_speed = 0;
}


if(MeterHud.image_index <= 0) {MeterHud.image_index = 0}


if (!instance_exists(CircleHud)){
    hud_x = obj_game_control.hud_x[other.number-1];
    hud_y = window_h-128+lengthdir_y(obj_game_control.hudp_shake[i]*0.8,obj_game_control.hudp_shake[i]*60);    
    CircleHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    CircleHud.step_script = hudThing_step_script;
    CircleHud.draw_script = hudThing_draw_script;
    CircleHud.owner = self.id;
    CircleHud.keepmain = self.keepmain;
	CircleHud.sprite_index = circle_sprite;
	CircleHud.image_speed = 0;
}

if meter >= maxmaxmeter{
CircleHud.image_index = 3;
MeterHud.image_index = 55;

}
else if meter >= maxmeter *2{
CircleHud.image_index = 2;
MeterHud.image_index = ((meter-200)*55/maxmeter);

}
else if meter >= maxmeter{
CircleHud.image_index = 1;
MeterHud.image_index = ((meter-100)*55/maxmeter);

}
else{
CircleHud.image_index = 0;
if(meter >= maxmeter){MeterHud.image_index = 55;} else if (meter <= 0){MeterHud.image_index = 0;} else {MeterHud.image_index = meter*55/maxmeter;}

}



if (hitbox.hit = 1 || hitbox2.hit = 1 || hitbox3.hit = 1) and meter < maxmaxmeter {
meter += 1.0
}

if meter >= maxmaxmeter
meter = maxmaxmeter

if meter < 0
meter = 0

