if state_type = "jump" || state_type = "run" || state_type = "stand" || state_type = "crouch" {
        if meter < 100 {
			exit;
		}
		state_type = "air_attack"
        attack_type = "uab"
        image_speed = 0
        sprite_index = palebringer_sprite
        image_index=0
        timer = 0
		time = 80
		hspeed = 0
		fuckoff = 0
		
		
		
		
}
if ( timer < time )
    {

	switch ( timer )
    {
	case 0: image_index = 0; break;
	case 26: image_index = 1; break;
	case 29: image_index = 2; break;
	case 35: image_index = 3; break;
	case 39: image_index = 4; break;
	case 41: image_index = 5; break;
	case 43: image_index = 6; break;
	case 47: image_index = 7; break;
	case 50: image_index = 8; break;
	case 54: image_index = 9; break;
	case 56: image_index = 10; break;
	case 60: image_index = 11; break;
	case 64: image_index = 12; break;
	case 66: image_index = 13; break;
	case 70: image_index = 14; break;
	case 74: image_index = 15; break;
	
    }
	
	if timer = 0 {
		sound_play(super_sound);
		meter -= 100
			ZAWARUDOTOKIWOTOMARE  = instance_create(x,y,obj_freeze)
ZAWARUDOTOKIWOTOMARE.dontpause = self.id
ZAWARUDOTOKIWOTOMARE.alarm[0] = 26
sound_play(upbex_voice);
effect_create_above(ef_ring,x + 1 * (1-facing*2),y - 15,1.5,c_red)
	}
	
	if timer < 29 {
		hspeed = 0
		vspeed = 0
		air_move = 0
	}
	
	if timer = 29 {
		create_hitbox4 ( 5 , 90 , 0 , 0 , 10 , 11 , unibslash2 , obj_spark_slash4 , 1.32 , 1 , 26.75 , 19.25 , self.id , 6 , 4 );
		hitbox.di = 0
	}
	
	if timer >= 29 and timer < 35 {
		hspeed = 6 * (1-facing*2)
		vspeed = 0
	}
	
	if timer >= 29 and timer < 35 and attack_success = 1 {
		timer = 35
		hspeed = 0
		vspeed = 0
	}
	
	if attack_success = 1 and timer < 66 {
		target.x = x + 17 * (1-facing*2)
	    target.y = y
	}
	
	if timer >= 41 and timer <= 50 {
		vspeed = -6.5
		hspeed = 0.4 * (1-facing*2)
		create_hitbox4 ( 2 , 85+facing*10 , 5.5 , 0.2 , 15 , 2.5 , unibslash2 , obj_spark_slash3 , 1.32 , 1.91 , 24.25 , 20.25 , self.id , 1 , 4 );
 swordslash = create_spark(0,61,self.id);
    swordslash.sprite_index = swordslash4_sprite;
    swordslash.image_speed = 0.5;
    swordslash.image_alpha = 1;
    swordslash.image_xscale = image_xscale*3.9;
    swordslash.image_yscale = image_yscale*3.9;
    swordslash.depth = depth - 0.1;
    swordslash.snap = self.id
	hitbox.di = 0
	}
	
	if timer = 41 {
		sound_play(upbex2_voice);
	}
	
	if timer = 66 {
		create_hitbox4 ( 2 , 25+facing*130 , 6.7 , 5.2 , 15 , 8 , unibhit3 , obj_spark_hit4 , 1.32 , 1.91 , 24.25 , 20.25 , self.id , 4 , 4 );
		air = max_jumps
	}
		


	}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    	air = max_jumps
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}
        
