if state_type = "stand" || state_type = "run" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "utilt";
        image_speed = 0;
        sprite_index = utilt_sprite;
        image_index=0;
        timer = 0;
        time = 30;
        timer_speed=1;
}
        if timer < time {
             state_type = "attack";
			 switch ( timer ) {
			case 2: image_index = 0; break;
			case 4: image_index = 1; break;
			case 6: image_index = 2; break;
			case 8: image_index = 3; break;
			case 10: image_index = 4; break;
			case 12: image_index = 5; break;
			case 14: image_index = 6; break;
			case 16: image_index = 7; break;
			case 18: image_index = 8; break;
			case 20: image_index = 9; break;
			case 22: image_index = 10; break;
			case 24: image_index = 11; break;
			case 26: image_index = 12; break;			
			 }
            if timer = 6 {
                sound_play(swing_sound2);
                if random(5)>1 play_attack_voice();
                create_hitbox(11,100-facing*20,5.6,4.5,15,7,punch4,obj_spark_hit1,0.7,1.4,30,32,self.id,10,2); 
                hitbox.hit_stun = 9
            }
            if timer = 8 {
                hitbox.hitbox_x = size*(-3 + facing*6);
                hitbox.hitbox_y = 49*size;
		hitbox.image_xscale = size*1.7
		hitbox.image_yscale = size*0.8
            }
            if timer = 12 {
                hitbox.damage = 8*size;
                hitbox.kbg = 5*size;
		hitbox.hit_stun = 6
                hitbox.hitbox_x = size*(-32 + facing*64);
                hitbox.hitbox_y = 20*size;
		hitbox.image_xscale = size*0.8
		hitbox.image_yscale = size*1.1
                hitbox.shield_damage = 12;
                hitbox.hitlag_frames = round(6*size);
               } 
 
            }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
