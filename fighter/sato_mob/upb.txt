if cantupb = 1
exit;
fast_fall = 0;
fast_fall_temp = 0;

if boost < 2{
if ( state_type == "run" || state_type == "stand" || state_type == "jump")
  {
  air_move = 1
  target1 = 0
  spiker = 0
  attacking = 0;
  special = 1;
  timer = 0;
  charge = 0;
  attack_type = "upb";
  hspeed /= 2;
  state_type = "air_attack";
  sprite_index = upb_sprite;
  time = 88;
  intangible = 1;
  image_speed = 0;
  image_index = 0;
  timer = 0;
  timer_speed = 1;
  if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
  }

if timer < time{
	if ai = 1{
		special = 0
		attacking = 0
	}
  switch ( timer )
    {
    case 2: image_index = 1; break;
    case 5: image_index = 2; break;
    case 7: image_index = 3; break;
    case 10: image_index = 4; break;
    case 12: image_index = 5; break;
    case 14: image_index = 6; break;
    case 16: image_index = 7; break;
    case 20: image_index = 8; break;
    case 23: image_index = 9; break;
    case 25: image_index = 10; break;
    case 27: image_index = 11; break;
    case 60: image_index = 12; break;
    case 66: image_index = 13; break;
    case 73: image_index = 14; break;
    case 79: image_index = 15; break;
    case 88: image_index = 16; break;
    }
if timer > 25
force_edge_grab = 1
if ( timer == 7 )
  intangible = 0; 
if timer < 16
vspeed /= 2
if (timer == 1 )
  {
    sound_play(upb_sound);
  }
if ( timer >= 16 && timer < 73 )
  {
    heavy_armor = 9;
  }
if ( timer >= 16 && timer < 73 )
  {
  vspeed -= 25;
  vspeed /= 10;
  hspeed = ( abs ( hspeed ) - 1 ) * sign ( hspeed );
  if ( abs ( hspeed ) < 0.5 )
    {
    hspeed = 0;
    }
  if ( moveright && hspeed < 2.5 ) hspeed += 1.3;
  if ( moveleft && hspeed > -2.5 ) hspeed -= 1.3;
  }
if ( timer == 72 )
  {
  super_armor = 0;
  }


if ((attacking = 1) or (special = 1 and (moveright or moveleft))) and timer > 16 and meter > 5{
	interrupt = 1
	meter -= 5
	cantupb = 1
	state_type = "jump";
	attack_type = "none";
}

}

if ( timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  attack_type = "none";
  if ( air > 0 )
    {
	if meter < 5{
		state_type = "fall";
	}else{
		state_type = "jump";
		meter -= 5
		cantupb = 1
		vspeed += -2;
	}
    
    }
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  
  }
}

if boost >= 2 {


if ( state_type = "stand" || state_type = "run" || state_type = "jump" )
  {
    if ( moveright )
	facing = 0;
    if ( moveleft )
	facing = 0;
    state_type = "air_attack";
    attack_type = "upb";
    timer = 0;
    time = 75;
    sprite_index = upb_sprite69;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    air_move = 0;
    temp2 = 0
    attack_success = 0
	if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 8: image_index = 2; break;
	case 12: image_index = 3; break;
	case 16: image_index = 4; break;
	case 20: image_index = 5; break;
	case 24: image_index = 6; break;
	case 28: image_index = 7; break;
	case 32: image_index = 8; break;
	case 36: image_index = 9; break;
	case 39: image_index = 0; break;
      }

	if sprite_index = upb_hitp_sprite {
	switch (timer) {
	case 403: image_index = 1; break;
	case 405: image_index = 2; break;
	case 407: image_index = 3; break;
	case 409: image_index = 4; break;
	case 411: image_index = 5; break;
	case 413: image_index = 6; break;
	case 414: image_index = 7; break;
	case 416: image_index = 8; break;
	case 418: image_index = 9; break;
	}
	}
	if sprite_index = upb_hitk_sprite {
	switch (timer) {
	case 403: image_index = 1; break;
	case 406: image_index = 2; break;
	case 408: image_index = 3; break;
	case 410: image_index = 4; break;
	case 412: image_index = 5; break;
	case 414: image_index = 6; break;
	case 415: image_index = 7; break;
	case 417: image_index = 8; break;
	case 419: image_index = 9; break;
	}
	}
	if sprite_index = upb_hitd_sprite {
	switch (timer) {
	case 403: image_index = 1; break;
	case 406: image_index = 2; break;
	case 409: image_index = 3; break;
	case 412: image_index = 4; break;
	case 414: image_index = 5; break;
	case 416: image_index = 6; break;
	case 418: image_index = 7; break;
	}
	}
	if sprite_index = upb_hitu_sprite {
	switch (timer) {
	case 403: image_index = 1; break;
	case 406: image_index = 2; break;
	case 408: image_index = 3; break;
	case 410: image_index = 4; break;
	case 412: image_index = 5; break;
	case 414: image_index = 6; break;
	case 415: image_index = 7; break;
	case 417: image_index = 8; break;
	case 419: image_index = 9; break;
	}
	}

    fast_fall = 0;
    fast_fall_temp = 0;
    if chaosboost < 2
	chaosboost = 2

    if ( timer = 1 && air > 0 )
	vspeed = -0.9*size;
    if ( vspeed > 0.1 && (( timer <= 24 || timer >= 29 ) && timer < 100 ) )
      {
	vspeed = 0.1;
	temp_fall_speed = 0;
      }
    if ( timer = 5 )
      {
	sound_play(upb_sound1);
	intangible = 1;
      }
        if timer = 24 {
            create_hitbox(4,90,1.8,0,14,12,punch2,obj_spark_hit2,1,0.8,2,18,self.id,5,2); 
            hitbox.armor_break = 1
        }
        if attack_success = 1 && timer < 30 && instance_exists(target) {
	    tempx = x
	    tempy = y
	    target.timer = 0
	    target.time = 8
		speed = 0
		time = 444
                timer = 400
		}
         if timer = 402 && instance_exists(target)
            target.time+=20
         if timer = 401 && instance_exists(target) {
		if (moveright && !facing) || (moveleft && facing)
			sprite_index = upb_hitp_sprite;
		else if (moveright && !facing) || (moveleft && !facing)
			sprite_index = upb_hitk_sprite;
		else if (moveup)
			sprite_index = upb_hitu_sprite;
		else if (movedown)
			sprite_index = upb_hitd_sprite;
		else
			sprite_index = choose(upb_hitk_sprite,upb_hitp_sprite,upb_hitu_sprite,upb_hitd_sprite)
            sound_play(upb_sound2);
            image_index = 0
	    image_speed = 0
            target.speed = 0
            x = target.x - 17 + facing*38
            y = target.y
            }
        if timer >= 400 && timer <= 412 && instance_exists(target) {
            target.gravity = 0
            target.speed = 0
            }
        if timer >= 400 {
            speed = 0
            gravity = 0
            }
        if timer = 414 {
			burst = instance_create(x+16*size*(1-facing*2),y-22*size,obj_jab_burst);
	burst.snap = self.id;
	burst.image_xscale *= 0.3;
	burst.image_yscale *= 0.3;
	daeff2 = create_spark( 16 ,22 , effect_sprite , 0.5 , 0.6*(1-facing*2) , 0.6 );
	daeff2.depth = depth - 1
            sound_play(choose(attack_sound1,attack_sound2,attack_sound3,attack_sound4))
	    if sprite_index = upb_hitp_sprite
            create_hitbox(3,47+facing*86,5.7,1,10,6,sf_punch1,obj_spark_hit3,0.8,0.8,12,18,self.id,5,3);
	    if sprite_index = upb_hitk_sprite
            create_hitbox(3,0+facing*180,5.7,1,10,6,sf_punch3,obj_spark_hit3,0.8,0.8,12,18,self.id,5,3);
	    if sprite_index = upb_hitd_sprite
            create_hitbox(3,270,5.7,1,10,6,sf_punch3,obj_spark_hit3,0.8,0.8,12,18,self.id,5,3);
	    if sprite_index = upb_hitu_sprite
            create_hitbox(3,80+facing*20,5.7,1,10,6,sf_punch2,obj_spark_hit3,0.8,0.8,12,18,self.id,5,3);
            hitbox.hit_stun = 20;
	    temp2 += 1
            }
        if timer = 421 {
	sound_play(upb_sound1);
            sprite_index = upb_sprite;
	    image_index = 0
	    image_speed = 1
		if temp2 < 5
	    target.time += 10
        }
	if timer = 429 && temp2 < 5 {
	            timer = 400
	}
	if timer = 429 && temp2 >= 5 {
		ignore_physics = 1
		x = tempx
		y = tempy
		intangible = 0
	force_edge_grab = 1
	sound_play(upb_sound2);
		}
	if timer = 432 {
	image_speed = 0
	image_index = 12
	air = max_jumps-1
		ignore_physics = 0
	}

    if ( timer = 25 )
      {
	spark = instance_create(x,y-19*size,obj_spark_shockwave);
	spark.image_xscale *= 0.5*size;
	spark.image_yscale *= 0.5*size;
	spark.image_blend = c_purple;
	spark.image_alpha = 0.8;
	if ( ai )
	  {
	    moveup = 1;
	    movedown = 0;
	    if ( x < nearest_edge.x )
	      {
		moveright = 1;
		moveleft = 0;
	      }
	    else if x > nearest_edge.x
	      {
		moveleft = 1;
		moveright = 0;
	      }
	  }
	if ( moveright )
	    hspeed = 32*size;
	if ( moveleft )
	    hspeed = -32*size;
	if ( movedown )
	  {
	    vspeed = 30*size;
	    temp_fall_speed = vspeed - fall_speed*size;
	  }
	if ( moveup )
	    vspeed = -33*size;
      }
    if ( timer = 28 )
	speed = 0;
    if ( timer = 31 )
      {
	force_edge_grab = 1
	sound_play(upb_sound2);
	intangible = 0;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    if ( air = 0 )
	state_type = "stand";
    else{

		state_type = "jump";
		cantupb = 1
	
	}
    attack_type = "none";
    timer = 0;
    time = 20;
	meter -= 16
    temp_fall_speed = 0;
  }
}