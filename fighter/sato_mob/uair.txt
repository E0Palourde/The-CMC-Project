if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "uair";
        image_speed = 0;
        sprite_index = uair_sprite;
        image_index=0;
        timer = 0+boost;
        time = 21;
        timer_speed=1;
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer ){
		case 2: image_index = 0; break;
		case 4: image_index = 1; break;
		case 6: image_index = 2; break;
		case 8: image_index = 3; break;
		case 12: image_index = 4; break;
		case 16: image_index = 5; break;
    }
	
	
	if timer = 8{
		play_attack_voice()
	    sound_play(whiff_sound2);
		create_hitbox(9,angle_correct(75),7,4,5,8,sf_punch2,obj_spark_hit1,0.8,0.8,15,32,self.id,2,4);
		create_hitbox2(7,angle_correct(90),5,3.5,5,4,sf_punch1,obj_spark_hit1,0.7,1.5,9,26,self.id,2,2);
		hitbox2.image_angle = angle_correct(45)
		burst = instance_create(x+15*size*(1-facing*2),y-32*size,obj_jab_burst);
		burst.snap = self.id;
		burst.image_xscale *= 0.3;
		burst.image_yscale *= 0.3;
		daeff = create_spark( 9 ,36 , effect_sprite , 0.5 , 0.4*(1-facing*2) , 0.4 );
		daeff.depth = depth -1
		daeff = create_spark( 21 ,26 , effect_sprite , 0.5 , 0.4*(1-facing*2) , 0.4 );
		daeff.depth = depth -1
	}

	
	
	  
	if air = 0 {
        state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=9; }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }		
        
