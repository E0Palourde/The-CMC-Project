if ( state_type = "down" )
  {
  state_type = "attack";
  attack_type = "down_attack";
  image_speed = 0;
  sprite_index = dtilt_sprite;
  image_index = 0;
  timer = 0+boost;
  time = 12;
  timer_speed = 1;
  case 1: intangible = 1; break;
  }
	switch ( timer )
    {
	
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 8: image_index = 4; break;
	case 10: image_index = 5; break;
    }
	  
	
	if timer = 4{
		sound_play(whiff_sound1);
		play_attack_voice()
		duster = instance_create(x,y,obj_dust_effect)
	    duster.facing = !facing;
		duster.image_xscale *= 0.45
		duster.image_yscale *= 0.45
		duster = instance_create(x,y,obj_dust_effect)
	    duster.facing = facing;
		duster.image_xscale *= 0.45
		duster.image_yscale *= 0.45
		create_hitbox(5,angle_correct(40),5,4.1,5,3,sf_punch1,obj_spark_hit1,0.9,0.9,25,12,self.id,3,3);
		create_hitbox2(5,angle_correct(140),5,4.1,5,3,sf_punch1,obj_spark_hit1,0.9,0.9,-25,12,self.id,3,3);
		burst = instance_create(x+25*size*(1-facing*2),y-12*size,obj_jab_burst);
		burst.snap = self.id;
		burst.image_xscale *= 0.4;
		burst.image_yscale *= 0.4;
		burst = instance_create(x+25*size*(1-facing*2)*(-1),y-12*size,obj_jab_burst);
		burst.snap = self.id;
		burst.image_xscale *= 0.4;
		burst.image_yscale *= 0.4;
		daeff = create_spark( 25 ,12 , effect_sprite , 0.5 , 0.4*(1-facing*2) , 0.4 );
		daeff.depth = depth -1
		daeff = create_spark( -25 ,12 , effect_sprite , 0.5 , 0.4*(1-facing*2) , 0.4 );
		daeff.depth = depth -1
	}
  
if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  { intangible = 0;
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time =-1;
  }
        
