if timer = 1
/*
hello yeah I know you're probably fucking terrified of projectiles but lemme teach you how this shit works
first off, the timer for projectiles always starts at 1 instead of 0 like your regular attack move scripts do, so this conditional is basically initializing everything the projectile's gonna have
*/
{
visible = 1;
//self explanatory
sprite_index = attacker.ruukoto_sprite
priority = 5
//you set the projectile's priority with this so you can determine whether or not it's gonna clash against other projectiles
//from 1 to 4 it'll be able to either clash, be overridden or override projectiles with equal, lower or higher priority respectively.
//with a value of 5, it'll directly completely ignore any and all other enemy projectiles.
image_speed = 0
moving_object = 1
//whether or not this projectile is gonna interact with surfaces like floors, ceilings, walls or platforms.
//if set to 1, it'll stop its vertical speed if crashing against a floor or ceiling, and its horizontal speed if hitting a wall.
//if set to 0, it'll go through all surfaces.
hit = 2
hspeed = 0
vspeed = 4
facing = attacker.facing
projfire = attacker.projfire
//set the general speed the projectile is gonna have, regardless of horizontal or vertical. The direction depends on the "direction" variable below.
//set an angle going from 0 to 359, where if your character faces to the right when firing the projectile:
//0 is to the right, 90 is directly upwards, 180 is to the left, and 270 is directly downwards.
//Values between these four correspond to diagonals (45, 135, 225, 315)
//this sets the projectile's orientation to match the direction it's heading towards.
//Useful if you're not just shooting it forwards, but at a set direction.
}

switch (timer) { 
	case 0: image_index = 0; break; 
	case 10: image_index = 1; break; 
	case 14: image_index = 2; break; 
	case 18: image_index = 3; break; 
	case 22: image_index = 4; break; 
	case 24: image_index = 5; break; 
	case 150: image_index = 6; break; 
	case 156: image_index = 7; break; 
}

if timer > 1 
//inside this conditional you'll code everything you'd normally code for a regular move's "if timer < time", but regarding the projectile itself.
{   
    hit = 2
	
	if timer >= 156 {
		image_alpha -= 0.05
	}
	
	if image_alpha <= 0 {
		instance_destroy()
	}
	
	if timer = 32 {
		spark = instance_create(x - 4 * (1-facing*2),y - 30,obj_spark);
	    spark.sprite_index = attacker.charge_spark_sprite;
	    spark.image_speed = 0.5;
	    spark.image_xscale = size*1;
	    spark.image_yscale = size*1;
	    spark.x = x-10+facing*5;
	    spark.y = y-15;
	    spark.snap = self.id
		spark.loop = 9999
	}
	
	if timer >= 32
	speed = 0
	
	if timer >= 32 and timer < 100 and timer mod 15 = 0 {
		sound_play(attacker.bustercharge_sound);
	}
	
	if timer = 100 {
		zabeamu2 = create_projectile(1, 90, 2.1, 0, 4, 4, magic2, obj_spark_fire1, 1, 1, 9, 25, attacker.id, 50, char_custom8);
			zabeamu2.di = 0
			zabeamu2.speed = 0
			zabeamu2.direction = angle_correct(0)
			zabeamu2.facing = facing
			sound_play(attacker.beamu_sound);
			with (spark) {instance_destroy()}
			if balls = 1
			zabeamu2.image_xscale *= -1
	}
	
	
	
	
	
	
}


	

	


//this destroys the projectile if it touches a wall, a floor or a platform without having hit any enemies. Delete it if that's not what you want.