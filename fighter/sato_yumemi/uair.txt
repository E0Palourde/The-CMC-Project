if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "uair";
        image_speed = 0;
        sprite_index = uair_sprite;
        image_index=0;
        timer = 0;
        time = 32;
        timer_speed=1;
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer )
    {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 12: image_index = 4; break;
	case 15: image_index = 6; break;
	case 24: image_index = 7; break;
	case 27: image_index = 8; break;
    }
	
	// Animate VFX        
switch (timer){
        case 5:                         // sprite keyframe
                // We use the logic I determined looking at the sheet to create the blur.
                // Note that while he faces right, it rotates clockwise, so it is not counter-clockwise.
                blur = create_itmpnt_blur( /*Attacker*/ self.id, /*Texture*/ blur_texture, /*Start frame*/ 1, /*Apex Frame*/ 4, /*End frame*/ 8, /*CCW*/ 1, /*girth*/ 14, 30);
                
                blur.push_x = 0 * size * (1-facing*2);        // Push blur toward crash
                blur.push_y = 0 * size;        // Push blur toward crash
                blur.image_index = 0;
                blur.h_squish = 0;        // Thin the blur out a bit
				blur.depth = depth - 1
                //blur.depth = depth + 0.1;
                blur.index = 0.5;                // This will show the blur between the first and second frames. If this was 0, nothing would show at all.
                break;
        case 6:
                blur.image_index = 1;
                break;
        case 6:                         // Sprite keyframe
                blur.index = 1;        // Set the blur index to match with crash's new sprite index.
                blur.image_index = 2;
                break;        
        case 7:
                blur.index = 1.33;
                break;
        case 8:
                blur.index = 1.66;
                break;
        case 9:                        // Sprite end frame
                blur.index = 2; // Set the blur index to match with crash's new sprite index.
                blur.image_index = 3;
                break;
        case 12:
                blur.index = 2.33;
                break;
        case 11:
                blur.index = 2.66;
                break;
        case 12:                         
                blur.index = 3;        // Set the blur index to match with crash's new sprite index.
                break;
        case 14:
                blur.index = 3.5;
                blur.image_index = 3;
                break;
        case 15:
                blur.index = 4
                break;
        case 16:
                blur.index = 4.5
                break;
		case 18:
                blur.index = 5
				blur.image_index = 4;
                break;
		case 19:
                with (blur){
                        instance_destroy();
                }
                break;
}
	
	if timer = 6{
		sound_play(whiff_sound3);
		play_attack_voice()
		create_hitbox(5,angle_correct(110),7,2,3,4,kick2,obj_spark_hit1,1,1,abs(place_x(81))/size,-place_y(63)/size,self.id,9,4);
	}
	
	if timer = 9{
		hitbox.dir = angle_correct(100)
		hitbox.hitbox_x = place_x(84)
		hitbox.hitbox_y = -place_y(31)
	}
	
	if timer = 12{
		hitbox.dir = angle_correct(90)
		hitbox.hitbox_x = place_x(50)
		hitbox.hitbox_y = -place_y(14)
		hitbox.image_xscale = 1.5
	}

	
	
	  
	if air = 0 {
        state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=9; }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }		
        
