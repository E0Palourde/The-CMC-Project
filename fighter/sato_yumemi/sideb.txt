fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" {
        state_type = "air_attack"
        attack_type = "sideb"
        image_speed = 0
        sprite_index = win_sprite
        image_index=0
        timer = 0
        time = 71
		hspeed = 0
    }

if ( timer < time )
  {
state_type = "air_attack"
	switch (timer)
	{
		case 0: image_index = 0; break;
		case 1: image_index = 1; break;
		case 3: image_index = 2; break;
		case 6: image_index = 3; break;
		case 9: image_index = 4; break;
		case 12: image_index = 5; break;
		case 15: image_index = 6; break;
		case 18: image_index = 7; break;
		
		case 30: image_index = 1; sprite_index = sideb_sprite; break;
		case 34: image_index = 2; break;
		case 37: image_index = 3; break;
		case 39: image_index = 4; break;
		case 65: image_index = 5; break;
		
	}
	
	hspeed = 0
	vspeed = 0
	air_move = 0
	  
	if timer = 3 {
		sound_play(burst_sound);
		ringeffect = create_spark(0,15,self.id);
    ringeffect.sprite_index = ringeffect_sprite;
    ringeffect.image_speed = 0;
    ringeffect.image_alpha = 1;
    ringeffect.image_xscale = 0.2 * (1-facing*2);
    ringeffect.image_yscale = 0.2;
    ringeffect.depth = depth - 0.1;
    ringeffect.snap = self.id
	
	ringeffect2 = create_spark(0,15,self.id);
    ringeffect2.sprite_index = ringeffect2_sprite;
    ringeffect2.image_speed = 0;
    ringeffect2.image_alpha = 1;
    ringeffect2.image_xscale = 0.2 * (1-facing*2);
    ringeffect2.image_yscale = 0.2;
    ringeffect2.depth = depth - 0.1;
    ringeffect2.snap = self.id
	}
	
	if timer >= 3 {
		ringeffect.image_xscale += 0.2 * (1-facing*2)
		ringeffect.image_yscale += 0.2
		ringeffect.image_alpha -= 0.1
		
		ringeffect2.image_xscale += 0.05 * (1-facing*2)
		ringeffect2.image_yscale += 0.05
		ringeffect2.image_alpha -= 0.05
		ringeffect2.image_angle += 5 * (1-facing*2)
	}
	
	if timer = 37 {
		create_projectile(4, angle_correct(20), 5, 0, 1, 2, fire1, obj_spark_fire1, 0.3, 0.2, 25, 0, self.id, 1000, char_custom2);
		sound_play(shot_sound);
	}
	
	if timer = 45 {
		create_projectile(4, angle_correct(20), 5, 0, 1, 2, fire1, obj_spark_fire1, 0.3, 0.2, 50, 0, self.id, 1000, char_custom2);
		sound_play(shot_sound);
	}
	
	if timer = 53 {
		create_projectile(4, angle_correct(20), 5, 0, 1, 2, fire1, obj_spark_fire1, 0.3, 0.2, 75, 0, self.id, 1000, char_custom2);
		sound_play(shot_sound);
	}
	
	if timer = 61 {
		create_projectile(4, angle_correct(20), 5, 0, 1, 2, fire1, obj_spark_fire1, 0.3, 0.2, 100, 0, self.id, 1000, char_custom2);
		sound_play(shot_sound);
	}
	
	if timer = 69 {
		create_projectile(4, angle_correct(86), 7, 6, 1, 25, magic3, obj_spark_fire1, 0.3, 0.2, 125, 0, self.id, 1000, char_custom2);
		sound_play(shot_sound);
	}
	
	  
  }


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}