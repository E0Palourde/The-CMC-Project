if ( time = -1 )
{
hspeed = 0;
state_type = "attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = bthrow_sprite;
image_index = 0;
timer = 0;
time = 47;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 28;
}
if timer < time {
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 8: image_index = 3; break;
	case 10: image_index = 4; break;
	case 12: image_index = 5; break;
	case 14: image_index = 6; break;
	case 15: image_index = 7; break;
	case 17: image_index = 8; break;
	case 18: image_index = 9; break;
	case 20: image_index = 10; break;
	case 23: image_index = 11; break;
	case 30: facing=!facing; sprite_index = b_sprite; image_index = 6; break;
		case 32: image_index = 5; break;
		case 34: image_index = 4; break;
		case 36: image_index = 3; break;
		case 38: image_index = 2; break;
		case 40: image_index = 1; break;
		case 42: image_index = 0; break;

      }
	if ( timer >= 0 && timer <= 7 )
	{
	target.x = x + 16 * size * (1-facing*2);
	target.y = y;
	}
    if ( timer = 8 || timer = 9 )
      {
	target.x = x + 10 * (1-facing*2) * size;
	target.y = y;
      }
    if ( timer = 10 || timer = 11 )
      {
	target.x = x + 5 * (1-facing*2) * size;
	target.y = y;
      }

    if ( timer = 12 )
		{
		target.x = x - 15 * (1-facing*2) * size;
		target.y = y - 8*size;
        sound_play(attack_sound2);
        sound_play(choose(attack_voice1,attack_voice2));
        create_throw_box(4,angle_correct(135),5.6,2.25,8,2/size,-1,-1,0.5,0.4,-14,19,self.id,1,6);
        hitbox.di=-.3
		hitbox.hit_stun = 7;
        hitbox.shake_kb = 0;
        hitbox.shake_ampl = 1.5
		}
    if ( timer = 20 )
	{
        sound_play(b_sound)
        create_projectile(2,134-facing*88,5.2,0.1,8,1,shock2,obj_spark_hit1,1,0.75,-3,19,self.id,45,char_custom1); 
        proj.direction = point_direction(x,y,target.x,target.y) + (5-facing*10)
        proj.speed = 9.75
		laserblast = instance_create( x,y,obj_spark );
		laserblast.sprite_index = laser_blast_sprite;
		laserblast.image_xscale = 0.3 * (1-facing*2) * size;
		laserblast.image_yscale = 0.3 * size;
		laserblast.image_angle = 145 * (1-facing*2);
		laserblast.image_speed = 0.9;
		laserblast.x = x - 16 * (1-facing*2) * size;
		laserblast.y = y - 27 * size;
		laserblast.snap = self.id;
    }
    if timer = 35
	interrupt = 1
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {

    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
