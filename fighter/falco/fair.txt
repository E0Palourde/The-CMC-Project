if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "fair";
    timer = 0;
    time = 48;
    sprite_index = fair_sprite;
    image_speed = 0;
    image_index = 0;
    vspeed -= 0.1;
  }

if ( timer < time )
  {  
	  
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 4: image_index = 2; break;
	case 5: image_index = 3; break;
	case 7: image_index = 4; break;
	case 9: image_index = 5; break;
	case 11: image_index = 6; break;
	case 12: image_index = 7; break;
	case 13: image_index = 8; break;
	case 14: image_index = 9; break;
	case 15: image_index = 10; break;
	case 16: image_index = 11; break;
	case 17: image_index = 12; break;
	case 18: image_index = 13; break;
	case 19: image_index = 14; break;
	case 20: image_index = 15; break;
	case 21: image_index = 16; break;
	case 22: image_index = 17; break;
	case 23: image_index = 18; break;
	case 24: image_index = 19; break;
	case 25: 
		image_index = 20; 
		break;
	case 30: image_index = 21; break;
	case 35: image_index = 22; break;
	case 40: image_index = 23; break;
	case 41: image_index = 24; break;
	case 42: image_index = 25; break;
	case 43: image_index = 26; break;
	case 44: image_index = 27; break;
	case 45: image_index = 28; break;
      }

	// Animate VFX
	switch (image_index){
		case 4: 			
			// Head spin VFX
			xx = (61-sprite_get_xoffset(sprite_index))*size*(1-facing*2)*0.7;
			yy = (32-sprite_get_yoffset(sprite_index))*-size*0.7;
			head_spin = create_blur(xx+x,y-yy,self.id);
			head_spin.sprite_index = spr_spin_blur;
			head_spin.image_xscale = 0.2 * size * (1-facing*2) * 0.7;
			head_spin.image_yscale = 0.2 * size ;
			head_spin.snap = self.id;
			head_spin.alarm[0] = 40;
			head_spin.image_index = 0;
			head_spin.anim_speed = 1;
			head_spin.image_angle = angle_correct(90);
			head_spin.loop = 1;
			
			// Torso spin VFX
			xx = (42-sprite_get_xoffset(sprite_index))*size*(1-facing*2)*0.7;
			yy = (32-sprite_get_yoffset(sprite_index))*-size*0.7;
			torso_spin = create_blur(xx+x,y-yy,self.id);
			torso_spin.sprite_index = spr_spin_blur;
			torso_spin.image_xscale = 0.26 * size * (1-facing*2)*0.7;
			torso_spin.image_yscale = 0.26 * size *0.7;
			torso_spin.snap = self.id;
			torso_spin.alarm[0] = 40;
			torso_spin.image_index = 0;
			torso_spin.anim_speed = 0.8;
			torso_spin.image_angle = angle_correct(90);
			torso_spin.loop = 1;
			break;
		case 20:
			// Star effect
			xx = (70-sprite_get_xoffset(sprite_index))*0.7;
			yy = (32-sprite_get_yoffset(sprite_index))*-0.7;
			spark_eff = create_spark(/*x-offset*/xx,/*y-offset*/yy,/*sprite*/global.spark_sprite2,/*speed*/2,/*xscale*/0.25*size,/*yscale*/0.25*size);
			spark_eff.snap = self.id;
			
			break;
	}
	
	
	if ( vspeed >= 0 )
	  {
	fairdir = 270;
	fairbkb = vspeed / size;
	  }
	if ( vspeed < 0 )
	  {
	fairdir = 90;
	fairbkb = ( vspeed + 1 ) * -1 / size;
	  }
    if ( timer = 5 )
      {
	play_attack_voice();
	sound_play(attack_sound1);
	create_hitbox(1,fairdir,fairbkb,0,7,1,slash1,obj_spark_slash1,1.05 , 0.62 , 6.30 , 17.50,self.id,3,2);
	hitbox.hit_stun = 4;
	hitbox.di = -1;
      }
    if ( timer = 10 || timer = 15 || timer = 20 )
      {
	sound_play(attack_sound1);
	create_hitbox(1,fairdir,fairbkb,0,7,2,slash1,obj_spark_slash1,1.05 , 0.62 , 6.30 , 17.50,self.id,3,2);
	hitbox.hit_stun = 4;
	hitbox.di = -1;
      }
    if ( timer = 25 )
      {
	sound_play(attack_sound4);
	create_hitbox(6,65+facing*50,5.4,2.7,7,4,slash3,obj_spark_slash2,1.00 , 1.05 , 8.40 , 22.40,self.id,3,2);
	hitbox.hit_stun = 12;
      }

    if ( air = 0 )
      {
	if timer > 5 && timer < 25
			{
                    create_hitbox2(3,40+facing*100,6.75,1.5,4,3,slash3,obj_spark_slash2,1.00 , 1.05 , 8.40 , 20.40,self.id,3,2);
                    hitbox2.remain = 1
			}
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 15;
	sprite_index = land_sprite;
      }
  }

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 12;
	}
    else
	{
    state_type = "stand";
	}
	timer = 0;
	time = -1;
}