if state_type = "run" || state_type = "stand" || state_type  = "jump" {
        state_type = "air_attack";
        attack_type = "upb";
        image_speed = 0;
        sprite_index = upb_sprite;
        image_index = 0;
        timer = 0;
        time = 66;
        timer_speed=1;
        sound_play(upb_sound)
        vspeed = -0.5
        hspeed = 0
        air_move=0
}
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 8: image_index = 4; break;
	case 10: image_index = 5; break;
	case 12: image_index = 6; break;
	case 15: image_index = 7; break;
	case 18: image_index = 8; break;
	case 21: image_index = 9; break;
	case 24: image_index = 10; break;
	case 27: image_index = 11; break;
	case 30: image_index = 12; break;
	case 33: image_index = 13; break;
	case 36: image_index = 14; break;
	case 39: image_index = 15; break;
	case 43: sprite_index = upb_sprite2; image_index = 0; break;
      }
    fast_fall = 0
    fast_fall_temp = 0
	gravity = 0;
    gravity_lock = 1;
	
	if ( timer >= 0 && timer < 42 && !instance_exists ( firebird_charge ) )
	{
	firebird_charge = instance_create( x,y,obj_spark );
	firebird_charge.sprite_index = firebird_charge_sprite;
	firebird_charge.image_xscale = 0.7 * (1-facing*2) * size;
	firebird_charge.image_yscale = 0.7 * size;
	firebird_charge.image_speed = 0.7;
	firebird_charge.image_alpha = 0.9;
	firebird_charge.x = x + 3 * (1-facing*2) * size;
	firebird_charge.y = y + 4 * size;
	firebird_charge.snap = self.id;
	}
	
     if vspeed > -0.8 && timer < 42
     vspeed = -0.2
     if timer = 7 
        super_armor = 0
     if timer = 24
        super_armor = 0
     if timer > 25
	force_edge_grab = 1
     if timer = 8 || timer = 15 || timer = 23 || timer = 29 || timer = 34 {
        create_hitbox2(1.2 - .1*(timer=34),80+facing*20,0.30,0,1,2,fire2,obj_spark_fire1,0.66 , 1.14 , 4.90 , 15.40,self.id,1,1)
        create_hitbox(1.2 - .1*(timer=34),100-facing*20,0.30,0,1,2,fire2,obj_spark_fire1,0.66 , 1.14 , -4.90 , 15.40,self.id,1,1)
        if timer >= 29
            screen_shake(1.1,5)
     }
     if timer <= 77
     gravity = 0
    if timer = 42 {
	with ( firebird_charge ) instance_destroy();
	if ( ai && ( offstage || ai_state = "recover" ) )
	  {
	    if ( y > nearest_edge.y )
		moveup = 1;
	    if ( x < nearest_edge.x )
	      {
		moveright = 1;
		moveleft = 0;
	      }
	    if ( x > nearest_edge.x )
	      {
		moveleft = 1;
		moveright = 0;
	      }
	  }
        sound_play(upb_sound2)
        sound_play(upb_voice)
        speed = 4.4*size
        if moveright && !moveup && !movedown {
                direction = 0
                facing = 0
                temp = direction
        	force_edge_grab = 0
                }
        if moveleft && !moveup && !movedown {
                direction = 180
                facing = 1
                temp = direction
                }
        if !movedown && !moveleft && !moveright {
                direction = 90
                image_angle = 90 - facing*180
                temp = direction
                }
        if movedown && !moveleft && !moveright {
                direction = 270
                image_angle = 270
                temp = direction
                }
        if moveup && moveright {
                direction = 45
                image_angle = 45
                facing = 0
                temp = direction
                }     
        if moveup && moveleft {
                direction = 135
                image_angle = 315
                facing = 1
                temp = direction
                }       
        if movedown && moveleft {
                direction = 225
                image_angle = 45
                facing = 1
                temp = direction
                }   
        if movedown && moveright {
                direction = 315
                image_angle = 315
                facing = 0
                temp = direction
                } 
	if ( analog_control )
	  {
	    var dis, dir;
	    dis = point_distance ( 0 , 0 , holdx , holdy );
	    dir = point_direction ( 0 , 0 , holdx , holdy );
	    if ( dis > 0.5 )
	      {
                var dd;
                dd = round ( dir / 45 ) * 45;
                if ( abs ( dir - dd ) < 14 )
                  dir = dd;
		direction = dir;
		image_angle = dir;
		temp = direction;
		if ( dir < 85 || dir > 275 )
		  facing = 0;
		if ( dir > 95 && dir < 265 )
		  facing = 1;
		if ( dir > 220 && dir < 320 )
		  force_edge_grab = 1;
		  else
		  force_edge_grab = 0;
	      }
	  }
          create_hitbox(1.10,direction,speed*1.05/size,1,1,2,fire2,obj_spark_fire1,1.44 , 0.77 , -2.10 , 20,self.id,3,5)
		  hitbox.image_angle = temp;
          tempfacing = facing
        }
    if timer > 42 && timer < 60 {
        if timer = 46 || timer = 50 || timer = 54 || timer = 58 {
            create_hitbox(1.10+(timer=58)*1.90,direction,speed/size+(timer=58)*2,(timer=58)*2.15,4,4+(timer=58)*4.5,(timer!=58)*fire2 + (timer=58)*kick3,obj_spark_fire1,1.44 , 0.77 , -2.10 , 20,self.id,3+(timer=58)*6,5)
			hitbox.image_angle = temp;			
            if timer = 66
                hitbox.dir = 50 + facing*80
            else
                if frac(hitbox.dir + 90/180)!=0
                    hitbox.dir += (1-facing*2)*5
        }
	if timer < 46
        speed *= 1.2
	else if timer < 52
	speed *= 0.99
	else if timer < 61
	speed *= 0.97
	if timer = 43 {
        if facing = tempfacing
		{
        direction = temp;
		hitbox.image_angle = temp;
		firebird_launch.image_angle = temp;
		firebird_launch.image_angle = temp;
		}
        else {
            if temp < 180
                direction = 180-temp
            else
                direction = 360-temp 
        }
        image_angle = direction - 180*facing
	}
        if collision_point(x+sign(hspeed),y-sign(vspeed),obj_wall,1,1)
        hspeed = 0
        }
	
	if timer >= 42 && timer < 73 && !instance_exists ( firebird_launch )
	{
	firebird_launch = instance_create( x,y,obj_spark );
	firebird_launch.sprite_index = firebird_launch_sprite;
	firebird_launch.image_xscale = 0.35 * size;
	firebird_launch.image_yscale = 0.35 * size;
	firebird_launch.image_speed = 0.7;
	firebird_launch.image_alpha = 0.9;
	firebird_launch.image_angle = temp;
	if ( temp = 0 )
	{
	firebird_launch.x = x + 9 * size;
	firebird_launch.y = y - 18 * size;
	}
	if ( temp > 0 && temp < 90 )
	{
	firebird_launch.x = x + 6 * size;
	firebird_launch.y = y - 22 * size;
	}
	if ( temp = 90 )
	{
	firebird_launch.x = x + 3 * size;
	firebird_launch.y = y - 28 * size;
	}
	if ( temp > 90 && temp < 180 )
	{
	firebird_launch.x = x - 2 * size;
	firebird_launch.y = y - 26 * size;
	}
	if ( temp = 180 )
	{
	firebird_launch.x = x - 7 * size;
	firebird_launch.y = y - 23 * size;
	}
	if ( temp > 180 && temp < 270 )
	{
	firebird_launch.x = x - 9 * size;
	firebird_launch.y = y - 14 * size;
	}
	if ( temp = 270 )
	{
	firebird_launch.x = x - 3 * size;
	firebird_launch.y = y - 7 * size;
	}
	if ( temp > 270 )
	{
	firebird_launch.x = x + 5 * size;
	firebird_launch.y = y - 10.5 * size;
	}
	firebird_launch.snap = self.id;
	}
	
	if timer >= 42 && timer < 73
	{
	if ( timer mod 5 < 2 )
	{
	firebird_smoke = instance_create( x,y,obj_spark );
	firebird_smoke.sprite_index = firebird_smoke_sprite;
	firebird_smoke.image_xscale = 0.3 * size;
	firebird_smoke.image_yscale = 0.3 * size;
	firebird_smoke.image_speed = 0.8;
	firebird_smoke.image_alpha = 0.7;
	firebird_smoke.direction = temp + choose( random(30) , random(-30) );
	firebird_smoke.depth = 1;
	firebird_smoke.speed = -5;
	if ( temp = 0 )
	{
	firebird_smoke.x = x - 19 * size;
	firebird_smoke.y = y - 16 * size;
	}
	if ( temp > 0 && temp < 90 )
	{
	firebird_smoke.x = x - 10 * size;
	firebird_smoke.y = y - 13 * size;
	}
	if ( temp = 90 )
	{
	firebird_smoke.x = x;
	firebird_smoke.y = y - 13 * size;
	}
	if ( temp > 90 && temp < 180 )
	{
	firebird_smoke.x = x - 5 * size;
	firebird_smoke.y = y - 20 * size;
	}
	if ( temp = 180 )
	{
	firebird_smoke.x = x - 7 * size;
	firebird_smoke.y = y - 16 * size;
	}
	if ( temp > 180 && temp < 270 )
	{
	firebird_smoke.x = x - 3 * size;
	firebird_smoke.y = y - 16 * size;
	}
	if ( temp = 270 )
	{
	firebird_smoke.x = x;
	firebird_smoke.y = y - 8 * size;
	}
	if ( temp > 270 )
	{
	firebird_smoke.x = x - 12 * size;
	firebird_smoke.y = y - 32 * size;
	}
	}
	
	if ( timer mod 5 < 2 )
	{
	firebird_debree = instance_create( x,y,obj_spark );
	firebird_debree.sprite_index = firebird_debree_sprite;
	firebird_debree.image_xscale = 0.24 * (1-facing*2) * size;
	firebird_debree.image_yscale = 0.24 * size;
	firebird_debree.image_speed = 0.8;
	firebird_debree.image_alpha = 0.8;
	firebird_debree.direction = temp + choose( random(30) , random(-30) );
	firebird_debree.depth = 2;
	firebird_debree.speed = -5;
	if ( temp = 0 )
	{
	firebird_debree.x = x - 19 * size;
	firebird_debree.y = y - 16 * size;
	}
	if ( temp > 0 && temp < 90 )
	{
	firebird_debree.x = x - 10 * size;
	firebird_debree.y = y - 10 * size;
	}
	if ( temp = 90 )
	{
	firebird_debree.x = x;
	firebird_debree.y = y - 13 * size;
	}
	if ( temp > 90 && temp < 180 )
	{
	firebird_debree.x = x - 5 * size;
	firebird_debree.y = y - 20 * size;
	}
	if ( temp = 180 )
	{
	firebird_debree.x = x - 7 * size;
	firebird_debree.y = y - 16 * size;
	}
	if ( temp > 180 && temp < 270 )
	{
	firebird_debree.x = x - 3 * size;
	firebird_debree.y = y - 16 * size;
	}
	if ( temp = 270 )
	{
	firebird_debree.x = x;
	firebird_debree.y = y - 8 * size;
	}
	if ( temp > 270 )
	{
	firebird_debree.x = x - 12 * size;
	firebird_debree.y = y - 32 * size;
	}
	}
	
	}	
	
    if timer = 60
	{
    force_edge_grab = 1;
	}
    if timer = 61
	{
	hspeed *= 0.75
	}
    if vspeed > 2 && (collision_point(x,y+1,obj_platform,1,1) || collision_point(x,y+1,obj_floor,1,1)) {
		if instance_exists ( firebird_launch )
		{
		with ( firebird_launch ) instance_destroy();
		}
        if instance_exists(hitbox)
        with hitbox instance_destroy()
        image_angle = 0
        state_type="air_flinch";
        attack_type="none";
        sprite_index = jump_sprite;
        image_speed = 0.25;
        image_index = 1
        shaker =instance_create(x,y,obj_shakescreen2)
        shaker.ampl = 2
        instance_create(x,y+1,obj_down_impact)
        vspeed = -5
        hspeed*=0.75
        timer=0;
        time=20; 
    }
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    air = max_jumps
    speed*=0.6
    attack_type = "none"
    state_type = "fall"
    sprite_index = fall_sprite
    image_angle = 0
    timer = 0
    time =-1
}
        
