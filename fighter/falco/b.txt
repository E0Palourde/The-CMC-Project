//--------------------------------------------------------------------------------START----------------------------------------------------------------------------
if state_type = "jump" || state_type = "stand" {
    special = 0
    attacking = 0
    attack_type = "b"
	state_type = "air_attack";
    if ( air > 0 )
	{
	sprite_index = b_air_sprite;
	timer = 5;
    time = 35;
	temp2 = 1;
	}
    if ( air = 0 )
	{
	sprite_index = b_sprite;
	timer = 0;
    time = 55;
	temp2 = 0;
	}
    image_speed = 0;
    image_index = 0;
    timer_speed = 1
	temp3 = 0; // To avoid awkward animations when firing again.
	temp4 = 0; // A variable used for firing again.
    if air = 0
    hspeed = 0
    else
    hspeed *= 1
}

if timer >= 1 && timer < 3 && temp = 0 {
    if moveright = 1 || (ai && enemy.x > x) facing = 0;
    if moveleft = 1 || (ai && enemy.x < x) facing = 1;
}

//--------------------------------------------------------------------------------ANIMATING GROUND-----------------------------------------------------------------
  if ( temp2 = 0 )
  {
	if ( temp3 = 0 )
	{
		switch ( timer )
		{
		case 2: image_index = 1; break;
		case 4: image_index = 2; break;
		case 6: image_index = 3; break;
		case 8: image_index = 4; break;
		case 10: image_index = 5; break;
		case 12: image_index = 6; break;
		
		case 22: sprite_index = b_sprite2; image_index = 0; break;
		case 23: image_index = 1; break;
		case 24: image_index = 2; break;
		case 25: image_index = 3; break;
		case 26: image_index = 4; break;
		case 27: image_index = 5; break;
		case 28: image_index = 6; break;
		
		case 48: sprite_index = b_sprite; image_index = 6; break;
		case 49: image_index = 5; break;
		case 50: image_index = 4; break;
		case 51: image_index = 3; break;
		case 52: image_index = 2; break;
		case 53: image_index = 1; break;
		case 54: image_index = 0; break;
		}
	}
		if ( temp3 = 1 )
	{
		switch ( timer )
		{
		case 22: image_index = 0; break;
		case 23: image_index = 1; break;
		case 24: image_index = 2; break;
		case 25: image_index = 3; break;
		case 26: image_index = 4; break;
		case 27: image_index = 5; break;
		case 28: image_index = 6; break;
		
		case 48: sprite_index = b_sprite; image_index = 6; break;
		case 49: image_index = 5; break;
		case 50: image_index = 4; break;
		case 51: image_index = 3; break;
		case 52: image_index = 2; break;
		case 53: image_index = 1; break;
		case 54: image_index = 0; break;
		}
	}
  }
  
//--------------------------------------------------------------------------------ANIMATING AIR--------------------------------------------------------------------
  if ( temp2 = 1 )
  {
	if ( temp3 = 0 )
	{
    switch ( timer )
		{
		case 6: image_index = 1; break;
		case 7: image_index = 2; break;
		case 8: image_index = 3; break;
		case 9: image_index = 4; break;
		case 10: image_index = 5; break;

		case 13: sprite_index = b_air_sprite2; image_index = 0; break;
		case 15: image_index = 1; break;
		case 16: image_index = 2; break;
		case 17: image_index = 3; break;
		case 18: image_index = 4; break;
		case 19: image_index = 0; break;
		
		case 30: sprite_index = b_air_sprite; image_index = 5; break;
		case 31: image_index = 4; break;
		case 32: image_index = 3; break;
		case 33: image_index = 2; break;
		case 34: image_index = 1; break;
		}
	}
	if ( temp3 = 1 )
	{
    switch ( timer )
		{
		case 13: image_index = 0; break;
		case 14: image_index = 1; break;
		case 15: image_index = 2; break;
		case 16: image_index = 3; break;
		case 17: image_index = 4; break;
		case 18: image_index = 0; break;
		
		case 30: sprite_index = b_air_sprite; image_index = 5; break;
		case 31: image_index = 4; break;
		case 32: image_index = 3; break;
		case 33: image_index = 2; break;
		case 34: image_index = 1; break;
		}
	}
  }

//--------------------------------------------------------------------------------GROUND VERSION-------------------------------------------------------------------
if ( temp2 = 0 )
{
if hspeed < 0.3
hspeed=0 
else
hspeed*=0.4

    if ( timer = 23 ) {
        sound_play(b_sound)
        create_projectile(2,20+facing*140,2.5,0,5,2,punch2,obj_spark_hit1,1.15,0.95,13,18.5,self.id,99,char_custom1)
        proj.hspeed = 12-facing*24
        proj.hit_stun = -6
	proj.canstack = 0
		laserblast = instance_create( x,y,obj_spark );
		laserblast.sprite_index = laser_blast_sprite;
		laserblast.image_xscale = 0.3 * (1-facing*2) * size;
		laserblast.image_yscale = 0.3 * size;
		laserblast.image_speed = 0.9;
		laserblast.x = x + 13 * (1-facing*2) * size;
		laserblast.y = y - 18.5 * size;
    }
	
		if ( timer = 25 && ai ) 
		{
		if random(16)>10
		special=1
		}
	if ( timer >= 23 && timer <= 38 && special = 1 )
    {
	temp4 = 1;
    }
    if ( timer >= 44 && temp4 = 1 )
	{
    timer = 20;
    special = 0;
	temp3 = 1;
	temp4 = 0;
	special = 0;
    }
	if ( timer = 53 )
	{
    sound_play(b_end_sound);
	}
}


//--------------------------------------------------------------------------------AIR VERSION----------------------------------------------------------------------
if ( temp2 = 1 )
{
if timer <= 10 && ((moveleft && !facing) || (moveright && facing)) {
    		facing = 1-facing;
		hspeed *= -1;
 		 }
	    if ( timer = 16 ) {
        sound_play(b_sound)
        create_projectile(2,20+facing*140,2.5,0,5,2,punch2,obj_spark_hit1,0.25,1.4,15,14,self.id,99,char_custom1)
        proj.hspeed = 12-facing*24
        proj.hit_stun = -6
	proj.canstack = 0
		laserblast = instance_create( x,y,obj_spark );
		laserblast.sprite_index = laser_blast_sprite;
		laserblast.image_xscale = 0.3 * (1-facing*2) * size;
		laserblast.image_yscale = 0.3 * size;
		laserblast.image_speed = 0.9;
		laserblast.x = x + 11 * (1-facing*2) * size;
		laserblast.y = y - 21 * size;
		laserblast.snap = self.id
    }
	
		if ( timer = 25 && ai )
		{
		if random(16)>10
		special=1
		}
 if timer <= 5 && ((moveleft && !facing) || (moveright && facing)) {
    		facing = 1-facing;
		hspeed *= -1;
 		 }
	if ( timer >= 15 && timer <= 26 && special = 1 )
    {
	temp4 = 1;
    }
    if ( timer >= 29 && temp4 = 1 )
	{
    timer = 11;
    special = 0;
	temp3 = 1;
	temp4 = 0;
	special = 0;
    }
    if timer = 32
	{
    sound_play(b_end_sound);
	}

    if ( air = 0 )
	{
    state_type="land";
    attack_type="none";
    sprite_index = land_sprite;
    timer=0;
    time=13;
	}
}
//--------------------------------------------------------------------------------END------------------------------------------------------------------------------
if timer >=time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 12;
	}
    else
	{
    state_type = "stand";
	}
    timer = 0;
    time = -1;
    special = 0;
    }
