if state_type = "jump"  {
        vspeed -= 0.225*size;
        state_type = "air_attack";
        attack_type = "nair";
        image_speed = 0;
        sprite_index = nair_sprite;
        image_index = 0;
        timer = 0;
        time = 35;
        timer_speed = 1;
        hover = 0;
}
        if timer < time {
			if (instance_exists(spin_effect)){
				
			}
	switch (timer) {
	case 3: image_index = 1; break;
	case 5: 
		image_index = 2; 
		// Spin VFX
		xx = (34-sprite_get_xoffset(sprite_index))*size*(1-facing*2)*0.7;
		yy = (29-sprite_get_yoffset(sprite_index))*-size*0.7;
		spin_effect = create_blur(xx+x,y-yy,self.id);
		spin_effect.sprite_index = spr_spin_blur;
		spin_effect.image_xscale = 0.33 * size * 0.7;
		spin_effect.image_yscale = 0.33 * size * (1-facing*2) * 0.7;
		spin_effect.snap = self.id;
		spin_effect.alarm[0] = 12;
		spin_effect.anim_speed = 0.85;

		spin_effect.image_angle = angle_correct(-45);
		spin_effect.loop = 1;
		
		// Spin VFX
		xx = (26-sprite_get_xoffset(sprite_index))*size*(1-facing*2)*0.7;
		yy = (40-sprite_get_yoffset(sprite_index))*-size*0.7;
		spin_effect = create_blur(xx+x,y-yy,self.id);
		spin_effect.sprite_index = spr_spin_blur;
		spin_effect.image_xscale = 0.25 * size * 0.7 ;
		spin_effect.image_yscale = 0.25 * size * (1-facing*2) * 0.7;
		spin_effect.snap = self.id;
		spin_effect.alarm[0] = 12;
		spin_effect.anim_speed = 0.80;

		spin_effect.image_angle = angle_correct(-45);
		spin_effect.loop = 1;

		break;
	case 6: image_index = 3; break;
	case 7: image_index = 4; break;
	case 8: image_index = 5; break;
	case 9: image_index = 6; break;
	case 10: image_index = 7; break;
	case 11: image_index = 8; break;
	case 13: image_index = 9; break;
	case 15: image_index = 10; break;
	case 17: image_index = 11; break;
	case 19: image_index = 12; break;
	case 23: image_index = 13; break;
	case 27: image_index = 14; break;
	case 31: image_index = 15; break;
	case 35: image_index = 16; break;
	case 39: image_index = 17; break;
	}
            if ( timer = 5 )
			{
            play_attack_voice();
            sound_play(attack_sound3);
            create_hitbox(3,65+facing*60,3.8,0,5,1,slash1,obj_spark_slash2,0.82 , 0.85 , 3.50 , 21,self.id,3,1);
			create_hitbox2(3,65+facing*60,3.8,0,5,1,slash1,obj_spark_slash2,0.52 , 0.52 , 4.20 , 35.70,self.id,3,1);
			create_hitbox3(3,65+facing*60,3.8,0,5,1,slash1,obj_spark_slash2,0.52 , 0.52 , -9.80 , 12.60,self.id,3,1);
			hitbox.hit_stun = -1
			hitbox2.hit_stun = -1
			hitbox3.hit_stun = -1
            }
			if ( timer = 6 )
			{
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 15.40
			hitbox2.hitbox_y = size * 29.40
			hitbox2.image_xscale = size * 0.52
			hitbox2.image_yscale = size * 0.52
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -9.80
			hitbox3.hitbox_y = size * 18.20
			hitbox3.image_xscale = size * 0.52
			hitbox3.image_yscale = size * 0.52
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 7 )
			{
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 19.60
			hitbox2.hitbox_y = size * 21
			hitbox2.image_xscale = size * 0.52
			hitbox2.image_yscale = size * 0.52
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -11.90
			hitbox3.hitbox_y = size * 20.30
			hitbox3.image_xscale = size * 0.52
			hitbox3.image_yscale = size * 0.52
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 8 )
			{
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 16.10
			hitbox2.hitbox_y = size * 11.90
			hitbox2.image_xscale = size * 0.52
			hitbox2.image_yscale = size * 0.52
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -10.50
			hitbox3.hitbox_y = size * 31.50
			hitbox3.image_xscale = size * 0.52
			hitbox3.image_yscale = size * 0.52
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 9 )
			{
			sound_play(attack_sound3);
			create_hitbox(5,40+facing*100,5.45,3.35,5,5,slash2,obj_spark_slash2,0.82 , 0.85 , 3.50 , 21,self.id,7,1);
			hitbox.hit_stun = 6;
			create_hitbox2(5,40+facing*100,5.75,3.75,8,5,slash2,obj_spark_slash2,0.52 , 0.52 , 6.30 , 8.40,self.id,7,1);
			hitbox2.hit_stun = 3;
			create_hitbox3(5,40+facing*100,5.45,3.35,5,5,slash2,obj_spark_slash2,0.52 , 0.52 , 0 , 37.80,self.id,7,1);
			hitbox3.hit_stun = 6;
            }
			if ( timer = 10 )
			{
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -0.70
			hitbox2.hitbox_y = size * 10.50
			hitbox2.image_xscale = size * 0.52
			hitbox2.image_yscale = size * 0.52
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 12.60
			hitbox3.hitbox_y = size * 32.20
			hitbox3.image_xscale = size * 0.52
			hitbox3.image_yscale = size * 0.52
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}		
			if ( timer = 11 )
			{
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -8.40
			hitbox2.hitbox_y = size * 22.40
			hitbox2.image_xscale = size * 0.52
			hitbox2.image_yscale = size * 0.52
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 18.90
			hitbox3.hitbox_y = size * 22.40
			hitbox3.image_xscale = size * 0.52
			hitbox3.image_yscale = size * 0.52
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 13 )
			{
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -4.90
			hitbox2.hitbox_y = size * 34.30
			hitbox2.image_xscale = size * 0.52
			hitbox2.image_yscale = size * 0.52
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 14
			hitbox3.hitbox_y = size * 14
			hitbox3.image_xscale = size * 0.52
			hitbox3.image_yscale = size * 0.52
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 15 )
			{
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 9.10
			hitbox3.hitbox_y = size * 15.40
			hitbox3.image_xscale = size * 0.52
			hitbox3.image_yscale = size * 0.52
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}


            if air = 0
			{
			state_type = "land";
			attack_type = "none";
			sprite_index = land_sprite;
			time = 10;
			timer = 0;
           }
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 12;
	}
    else
	{
    state_type = "stand";
	}
	timer = 0;
	time = -1;
}
        
