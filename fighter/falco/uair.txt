if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "uair";
        image_speed = 0;
        sprite_index = uair_sprite;
        image_index = 0;
        timer = 0;
        time = 34;
        timer_speed=1;
}
        if timer < time {
            //blur animation
			switch (timer)
			{
			case 5:
				blur = create_itmpnt_blur( /*Attacker*/ self.id, /*Texture*/ blur_texture, /*Start frame*/ 2, /*Apex Frame*/ 6, /*End frame*/ 9, /*CCW*/ 0, /*girth*/ 6, 15);
				blur.index = 0;
				blur.image_index = 0;
				blur.push_y = -3*size;
				blur.v_squish = 1;
				blur.h_squish = -0.5
				break;
			case 6: 
				blur.index = 1;
				blur.image_index = 1;
				break;
			case 7:
				blur.index=1.75
				break
			case 8: 
				blur.index=2.5; 
				blur.image_index = 2; 
				break
			case 9: 
				blur.index = 3.25;
				break;
			case 10: 
				blur.index = 4; 
				blur.image_index = 3;
				break;
			case 13: blur.image_index = 4; break;
			case 11: case 12: case 13: case 14: case 15: case 16: case 17: case 18: case 19:
				blur.index += 2/9; break;	
			case 20: with (blur){instance_destroy()}break;
			}
			//sprite animation
			switch ( timer )
			{
			case 2: image_index=1;  break;
			case 4: image_index=2;  break;
			case 5: image_index=3;  break;
			case 6: image_index=4;  break;
			case 7: 
				shakex=6*size*(1-facing*2); 
				shakey=7*size; 
				image_angle=270*(1-facing*2);  break;
			case 8: 
				shakex=0*size*(1-facing*2); 
				shakey=0*size; 
				image_index=5; 
				image_angle=0*(1-facing*2);  break;
			case 9: 
				image_angle=335*(1-facing*2);  break;
			case 10: 
				image_index=6; 
				image_angle=0*(1-facing*2);  break;
			case 11: 
				image_angle=330*(1-facing*2);  break;
			case 13: 
				image_angle=300*(1-facing*2);  break;
			case 16: 
				image_angle=270*(1-facing*2);  break;
			case 19: 
				image_angle=230*(1-facing*2);  break;
			case 22: 
				image_index=7; 
				image_angle=0*(1-facing*2);  break;
			case 25: 
				image_index=8;  break;
			case 28: 
				image_index=9;  break;
			}
            if ( timer = 7 )
			{
			sound_play(choose(attack_voice4,attack_voice2,attack_voice3,attack_voice1))
			sound_play(attack_sound4);
			create_hitbox(10,90,5.7,3.25,7,3,kick2,obj_spark_hit2,0.77,0.44,-15.40,30.80,self.id,5,2);
			hitbox.image_angle = ( 1 - facing * 2 ) * 58.39;
			create_hitbox2(10,90,5.7,3.25,7,3,kick2,obj_spark_hit2,0.43,0.62,-8.40,27.30,self.id,5,2);
			hitbox2.image_angle = ( 1 - facing * 2 ) * 334.49;
			create_hitbox3(10,90,5.7,3.25,7,3,kick2,obj_spark_hit2,0.50,0.50,-2.10,24.50,self.id,5,2);
            }
			if ( timer = 8 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -1.40
			hitbox.hitbox_y = size * 43.40
			hitbox.image_xscale = size * 0.50
			hitbox.image_yscale = size * 0.50
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -1.40
			hitbox2.hitbox_y = size * 33.60
			hitbox2.image_xscale = size * 0.50
			hitbox2.image_yscale = size * 0.50
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -0.70
			hitbox3.hitbox_y = size * 24.50
			hitbox3.image_xscale = size * 0.50
			hitbox3.image_yscale = size * 0.50
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 9 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7
			hitbox.hitbox_y = size * 39.90
			hitbox.image_xscale = size * 0.44
			hitbox.image_yscale = size * 0.47
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 2.80
			hitbox2.hitbox_y = size * 32.90
			hitbox2.image_xscale = size * 0.43
			hitbox2.image_yscale = size * 0.46
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0
			hitbox3.hitbox_y = size * 24.50
			hitbox3.image_xscale = size * 0.46
			hitbox3.image_yscale = size * 0.44
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 10 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 13.30
			hitbox.hitbox_y = size * 30.80
			hitbox.image_xscale = size * 0.50
			hitbox.image_yscale = size * 0.50
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 6.30
			hitbox2.hitbox_y = size * 28.70
			hitbox2.image_xscale = size * 0.50
			hitbox2.image_yscale = size * 0.50
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0
			hitbox3.hitbox_y = size * 24.50
			hitbox3.image_xscale = size * 0.50
			hitbox3.image_yscale = size * 0.50
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 11 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 15.40
			hitbox.hitbox_y = size * 26.60
			hitbox.image_xscale = size * 0.45
			hitbox.image_yscale = size * 0.46
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7.70
			hitbox2.hitbox_y = size * 25.20
			hitbox2.image_xscale = size * 0.44
			hitbox2.image_yscale = size * 0.47
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0
			hitbox3.hitbox_y = size * 24.50
			hitbox3.image_xscale = size * 0.46
			hitbox3.image_yscale = size * 0.44
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}

			
            if air = 0
			{
				shakex = 0;
				shakey = 0;
				image_angle = 0;
                state_type = "land";
                attack_type = "none";
                sprite_index = land_sprite;
                time = 9;
                timer = 0;
            }
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 12;
	}
    else
	{
    state_type = "stand";
	}
	timer = 0;
	time = -1;
}