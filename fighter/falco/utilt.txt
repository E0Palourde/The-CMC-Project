if state_type = "stand" || state_type = "run" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "utilt";
        image_speed = 0;
        sprite_index = utilt_sprite;
        image_index = 0;
        timer = 0;
        time = 36;
        timer_speed = 1;
}
        if timer < time {
		switch ( timer )
		{
		case 3: image_index = 1; break;
		case 5: image_index = 2; break;
		case 6: image_index = 3; break;
		case 7: image_index = 4; break;
		case 8: image_index = 5; break;
		case 10: image_index = 6; break;
		case 12: image_index = 7; break;
		case 13: image_index = 8; break;
		case 15: image_index = 9; break;
		case 18: image_index = 10; break;
		case 23: image_index = 11; break;
		case 28: image_index = 12; break;
		}
            if ( timer = 5 )
			{
            sound_play(attack_sound3);
            create_hitbox(4,100-facing*20,5.4,0,7,3,slash1,obj_spark_slash1,0.64 , 0.61 , 16.10 , 15.40,self.id,5,2);
			hitbox.hit_stun = 10;
            hitbox.shield_stun = 0.75;
			create_hitbox2(4,100-facing*20,5.4,0,7,3,slash1,obj_spark_slash1,0.64 , 0.61 , 16.10 , 15.40,self.id,5,2);
			hitbox2.hit = 2;
			hitbox2.hit_stun = 10;
            hitbox2.shield_stun = 0.75;
			create_hitbox3(4,100-facing*20,5.4,0,7,3,slash1,obj_spark_slash1,0.64 , 0.61 , 16.10 , 15.40,self.id,5,2);
			hitbox3.hit = 2;
			hitbox3.hit_stun = 10;
            hitbox3.shield_stun = 0.75;
            }
			if ( timer = 6 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 3.50
			hitbox.hitbox_y = size * 23.80
			hitbox.image_xscale = size * 0.44
			hitbox.image_yscale = size * 0.44
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 9.10
			hitbox2.hitbox_y = size * 30.20
			hitbox2.image_xscale = size * 0.35
			hitbox2.image_yscale = size * 0.60
			hitbox2.image_angle = ( 1 - facing * 2 ) * 18.08
			hitbox2.hit = 0;
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 13.70
			hitbox3.hitbox_y = size * 35.10
			hitbox3.image_xscale = size * 0.40
			hitbox3.image_yscale = size * 0.93
			hitbox3.image_angle = ( 1 - facing * 2 ) * 18.43
			hitbox3.hit = 0;
			}
			if ( timer = 7 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 3.50
			hitbox.hitbox_y = size * 31.50
			hitbox.image_xscale = size * 0.44
			hitbox.image_yscale = size * 0.44
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox.bkb = 2
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 3.50
			hitbox2.hitbox_y = size * 39.20
			hitbox2.image_xscale = size * 0.44
			hitbox2.image_yscale = size * 0.44
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.bkb = 2
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 4.90
			hitbox3.hitbox_y = size * 49.70
			hitbox3.image_xscale = size * 0.44
			hitbox3.image_yscale = size * 0.44
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.bkb = 2
			}
			if ( timer = 8 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -1.40
			hitbox.hitbox_y = size * 30.10
			hitbox.image_xscale = size * 0.44
			hitbox.image_yscale = size * 0.44
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -7.70
			hitbox2.hitbox_y = size * 35.70
			hitbox2.image_xscale = size * 0.44
			hitbox2.image_yscale = size * 0.44
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -12.60
			hitbox3.hitbox_y = size * 42.70
			hitbox3.image_xscale = size * 0.44
			hitbox3.image_yscale = size * 0.44
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 10 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -1.40
			hitbox.hitbox_y = size * 30.10
			hitbox.image_xscale = size * 0.44
			hitbox.image_yscale = size * 0.44
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -10.50
			hitbox2.hitbox_y = size * 30.10
			hitbox2.image_xscale = size * 0.44
			hitbox2.image_yscale = size * 0.44
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -18.20
			hitbox3.hitbox_y = size * 30.10
			hitbox3.image_xscale = size * 0.44
			hitbox3.image_yscale = size * 0.44
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}

			if ( timer = 12 )
			{
			sound_play(attack_sound3);
			if ( random(10) > 2 )
            play_attack_voice();
			create_hitbox(6,100-facing*20,5.4,4.15,7,4,slash1,obj_spark_slash1,0.44 , 0.44 , 0.70 , 34.30, self.id, 5, 2);
			hitbox.hit_stun = 10;
            hitbox.shield_stun = 0.75
			create_hitbox2(6,100-facing*20,5.4,4.15,7,4,slash1,obj_spark_slash1,0.44 , 0.44 , 7 , 37.80, self.id, 5, 2);
			hitbox2.hit_stun = 10;
            hitbox2.shield_stun = 0.75
			create_hitbox3(6,100-facing*20,5.4,4.15,7,4,slash1,obj_spark_slash1,0.44 , 0.44 , 14 , 44.10 , self.id, 5, 2);
			hitbox3.hit_stun = 10;
            hitbox3.shield_stun = 0.75
			}
			if ( timer = 13 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
			hitbox.hitbox_y = size * 34.30
			hitbox.image_xscale = size * 0.44
			hitbox.image_yscale = size * 0.44
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0
			hitbox2.hitbox_y = size * 43.40
			hitbox2.image_xscale = size * 0.44
			hitbox2.image_yscale = size * 0.44
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -1.40
			hitbox3.hitbox_y = size * 49.70
			hitbox3.image_xscale = size * 0.44
			hitbox3.image_yscale = size * 0.44
			hitbox3.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 15 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -2.80
			hitbox.hitbox_y = size * 32.90
			hitbox.image_xscale = size * 0.44
			hitbox.image_yscale = size * 0.44
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -10.50
			hitbox2.hitbox_y = size * 34.30
			hitbox2.image_xscale = size * 0.34
			hitbox2.image_yscale = size * 0.59
			hitbox2.image_angle = ( 1 - facing * 2 ) * 331.26
			hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -15.80
			hitbox3.hitbox_y = size * 36.40
			hitbox3.image_xscale = size * 0.37
			hitbox3.image_yscale = size * 0.78
			hitbox3.image_angle = ( 1 - facing * 2 ) * 329.04
			}

	if timer = 30
	interrupt = 1
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
