if ( state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" )
  {
    state_type = "air_attack";
    attack_type = "downb";
    image_speed = 0;
    image_index = 0;
    timer = 0;
    if magic = 0 {
	sprite_index = downb_sprite;
	time = 31;
	magic = 1;
    }
    else if magic = 1 {
	sprite_index = downb_sprite2;
	time = 27;
	magic = 2;
    }
    else if magic = 2 {
	sprite_index = downb_sprite3;
	if air = 0
	    time = 27;
	else
	    time = 40;
	magic = 0;
    }
  }

////////////FIRE////////////
if ( timer < time ) && sprite_index = downb_sprite
  {
    //gravity_lock = 1
    //gravity = 0
    vspeed = 0
    
    state_type = "air_attack"
    switch ( timer )
      {
	case 2: image_index = 1; effectfire.image_index = 1; break;
	case 4: image_index = 2; effectfire.image_index = 2; break;

	case 6: image_index = 3; effectfire.image_index = 3; break;
	case 7: image_index = 4; effectfire.image_index = 4; break;
	case 8: image_index = 5; effectfire.image_index = 5; break;
	case 9: image_index = 6; effectfire.image_index = 6; break;
	case 10: image_index = 7; effectfire.image_index = 7; break;
	case 11: image_index = 8; effectfire.image_index = 8; break;
	case 12: image_index = 9; effectfire.image_index = 9; break;
	case 13: image_index = 10; effectfire.image_index = 10; break;
	case 14: image_index = 11; effectfire.image_index = 11; break;
	case 15: image_index = 12; effectfire.image_index = 12; break;
	case 16: image_index = 13; effectfire.image_index = 13; break;
	case 17: image_index = 14; effectfire.image_index = 14; break;
	case 18: image_index = 15; effectfire.image_index = 15; break;
	case 19: image_index = 16; effectfire.image_index = 16; break;
	case 20: image_index = 17; effectfire.image_index = 17; break;
	case 21: image_index = 18; effectfire.image_index = 18; break;
	case 22: image_index = 19; effectfire.image_index = 19; break;
	case 23: image_index = 20; effectfire.image_index = 20; break;
	case 24: image_index = 21; effectfire.image_index = 21; break;
	case 25: image_index = 22; effectfire.image_index = 22; break;

	case 26: image_index = 23; effectfire.image_index = 23; break;
	case 28: image_index = 24; effectfire.image_index = 24; effectfire.image_speed = 1; break;
      }
    if ( timer = 1 )
    {
	sound_play(downb_voice1);
    effectfire = create_blur(x,y,self.id);
	effectfire.sprite_index = fire_sprite;
	effectfire.image_speed = 0;
    effectfire.image_index = 0;
	effectfire.image_xscale = 1 * (1 - facing * 2) *size;
    effectfire.image_yscale = 1 * size ;
    effectfire.x = x + (1 - facing * 2) *size;
    effectfire.y = y + 1 *size;
	effectfire.depth = depth - 0.1;
    effectfire.snap = self.id;
	}
    
    if ( timer = 6 )
	sound_play(downb_sound1);
	
    if ( timer = 0 && air = 0 )
      {
	duster = instance_create(x-2*size*(1-facing*2),y,obj_dust_effect);
	duster.facing = facing;
      }

    if ( ( timer >= 1 && timer <= 4 ) && air = 0 )
	hspeed *= 0.2;
	
    if ( target > -1 && timer >= 6 && timer < 24 )
	target.x += hspeed;
	
    if ( timer = 6 || timer = 8 || timer = 10 || timer = 12 || timer = 14 || timer = 16 || timer = 18 || timer = 20 || timer = 22 )
      {
	target = -99;
	create_hitbox(1,90,1.5,0,3,0.1,fire1,obj_spark_fire1,2,0.8,0,15,self.id,2,4);
	hitbox.weight_kb = 1;
	hitbox.di = 0;
	hitbox.hit_stun = 2;
	hitbox.shield_stun = 2;
      }

    if ( timer = 24 )
	create_hitbox(5,45+facing*90,7,5,20,14,fire3,obj_spark_fire1,2,0.8,0,15,self.id,2,4);
  }

////////////BLIZZARD////////////
else if ( timer < time ) && sprite_index = downb_sprite2
  {
    //gravity_lock = 1
    //gravity = 0
    vspeed = 0

    state_type = "air_attack"
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;

	case 24: image_index = 3; break;
      }
    if ( timer = 1 )
	sound_play(downb_voice2);

    if ( timer = 4 )
	sound_play(downb_sound2);

    if ( timer = 0 && air = 0 )
      {
	duster = instance_create(x-2*size*(1-facing*2),y,obj_dust_effect);
	duster.facing = facing;
      }

    if ( timer >= 4 && timer <= 20 )
	hspeed *= 0.2;

    if ( timer = 4 )
      {
	effectjab = create_spark(20,14,self.id);
	effectjab.sprite_index = magiccast_sprite;
	//effectjab.x = hitbox.x - (0-facing*0)*size;
	//effectjab.y = hitbox.y;
	effectjab.image_speed = 0.41;
	effectjab.image_alpha = 0.7;
	effectjab.image_xscale = image_xscale*1;
	effectjab.image_yscale = image_yscale*1;
	effectjab.depth = depth - 0.1;
	effectjab.snap = self.id;
	//effectjab.image_blend = c_purple;
      }
	
    if ( timer = 4 || timer = 8 || timer = 12 || timer = 16 || timer = 20 )
      {
	create_projectile(1,90,1,1,3,1,ice1,obj_spark_ice,0,0,20+random(20),5+random(20),self.id,18,-1);
	proj.sprite_index = ice_sprite;
	proj.image_xscale = image_xscale;
	proj.image_yscale = image_yscale;
	proj.image_alpha = 1;
	proj.hspeed = (3-facing*6)*size;
	proj.vspeed = choose(-0.5,0,0.5);
      }
    if ( timer = 24 )
      {
	create_projectile(1,20+facing*140,5,2,3,3,ice1,obj_spark_ice3,0,0,20+random(20),5+random(20),self.id,18,-1);
	proj.sprite_index = ice_sprite;
	proj.image_xscale = image_xscale;
	proj.image_yscale = image_yscale;
	proj.image_alpha = 1;
	proj.hspeed = (3.5-facing*7)*size;
	proj.vspeed = choose(-0.5,0,0.5);
	proj.hit_stun = 15;
      }
  }

////////////THUNDER////////////
else if ( timer < time ) && sprite_index = downb_sprite3
  {
    //gravity_lock = 1
    //gravity = 0

    state_type = "air_attack"
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 12: image_index = 4; break;
	case 14: image_index = 5; break;
	case 16: image_index = 6; break;
	case 18: image_index = 7; break;
	case 20: image_index = 8; break;
	case 22: image_index = 9; break;
	case 24: image_index = 10; break;
      }
    if ( timer = 1 )
	sound_play(downb_voice3);
		 
    if ( timer = 12 )
	sound_play(downb_sound3);
	
    if timer = 0 && air = 0
      {
	duster = instance_create(x-2*size*(1-facing*2),y,obj_dust_effect);
	duster.facing = facing;
      }
	
    if ( timer >= 1 && timer <= 9 )
      {
	hspeed *= 0.2;
	vspeed = 0;
      }
	
    if ( timer = 12 )
      {
	effectjab = create_spark(0,55,self.id);
	effectjab.sprite_index = thunder_sprite;
	//effectjab.x = hitbox.x - (0-facing*0)*size;
	//effectjab.y = hitbox.y;
	effectjab.image_speed = 0.9;
	effectjab.image_alpha = 0.7;
	effectjab.image_xscale = (image_xscale*0.5)* (-1);
	effectjab.image_yscale = image_yscale*0.5;
	effectjab.depth = depth - 0.1;
	effectjab.snap = self.id;
	effectjab.image_angle = 315+facing*90;
	if ( air > 0 )
	  {
	    vspeed = 5*size;
	    hspeed = (-3+facing*6)*size;
	  }
      }
	
    if ( timer = 14 )
      {
	create_hitbox(13,60+facing*60,7,5,20,10,shock3,obj_spark_shock,4.9,1.3,55,100,self.id,5,3); //0 50
	hitbox.image_angle = 35+facing*110;
	create_hitbox2(8,60+facing*60,5,3,20,4,shock2,obj_spark_shock,1.1,1.1,0,50,self.id,5,3); //0 50
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    attack_type = "none";
    if ( air > 0 )
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time = -1;
  }