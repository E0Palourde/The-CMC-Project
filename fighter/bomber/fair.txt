fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair_sprite;
        image_index=0;
        timer = 0;
        time = 46;
        timer_speed=1;
}
        if timer < time {
            state_type = "air_attack";
			switch ( timer ) {
			case 2: image_index = 1; break;
			case 4: image_index = 2; break;
			case 7: image_index = 3; break;
			case 9: image_index = 4; break;
			case 12: image_index = 5; image_xscale *= 1.3; break;
			case 17: image_index = 6; break;
			case 27: image_index = 7; break;
			case 30: image_index = 8; break;
			case 33: image_index = 9; break;
						
			}
//bomb fair
   	if timer = 0 {
            sound_play(b_sound)
            spark = instance_create(x + -25 - facing * -50, y - 12, obj_spark)
            spark.sprite_index = bomb_sprite
            spark.image_xscale = (0.9 - facing * 1.8) * size
            spark.image_yscale = 0.9 * size
            spark.image_speed = 0.15
		spark.alarm[0] = 15
            //spark.snap = self.id
        
        }
        if timer > 0 && instance_exists(spark) {
            if spark.image_index >= spark.image_number - spark.image_speed
            spark.image_index = 0

        }
//moving bomb
if timer > 0 && timer < 9 
{
spark.y = y - 12*size
spark.x = x + -25 * (1-facing*2) * size
}
if timer > 9 && timer < 12
{
spark.y = y - 12*size
spark.x = x + -6 * (1-facing*2) * size
}
            if timer = 12 {
                hspeed += 0.4*size*(1-facing*2)
                if random(10) > 1.5
                sound_play(choose(attack_voice1,attack_voice2,attack_voice3))
                sound_play(attacksnd3);
		spark.y = y - 12*size
		spark.x = x + 20 * (1-facing*2) * size
                create_hitbox(14,20+facing*140,5.55,6.25,18,9,explodehit2,obj_spark_fire1,0.8,0.8,25,12,self.id,3,3);
                instance_create(x+23*(1-facing*2),y-14,obj_spark_explode1)
    		shaker = instance_create(x,y,obj_shakescreen2)
    		shaker.ampl = 1.3
    		shaker.time = 8

		}
            if air = 0 {
                dontrepeat = 0
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=15;
with spark
{
instance_destroy()
}
 }
        }  


        if (timer >= 12){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 125) || (target.weight > .3 && target.percent > 140)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }