fast_fall = 0
fast_fall_temp = 0
if state_type = "jump"  {
        hspeed = 0
        state_type = "air_attack";
        attack_type = "dair";
        image_speed = 0;
        sprite_index = dair_sprite;
        image_index=0;
        timer = 0;
        time = 53;
        timer_speed=1;
        lcancel = 1;
}
        if timer < time {
            state_type = "air_attack";
			switch ( timer ) {
			case 1: image_index = 0; break;	
			case 5: image_index = 1; break;
			case 9: image_index = 2; break;
			case 14: image_index = 3; break;
			case 43: image_index = 4; break;
			case 47: image_index = 5; break;
			case 51: image_index = 6; break;
			case 55: image_index = 7; break;
			}
if timer > 0 && timer < 14
{
hspeed=0
air_move=0
vspeed=-0.1
}
            if timer = 14 {
                sound_play(mid_jump_sound);
                temp_fall_speed = 2.26
                create_hitbox(13,270,5.7,6.8,13,12,kick3,obj_spark_hit3,0.7,0.8,8,4,self.id,30,2);
			var burst;
    //78, 36
	burst = instance_create(place_x(27)+x,place_y(30)+y,obj_jab_burst);
    burst.snap = self.id;
	burst.image_xscale = xsize * 0.4;
    burst.image_yscale = ysize * 0.4;
                   // sound_play(attack_voice2)
                hspeed = size*(2-facing*4)*0.75
                vspeed=6.75
		air_move=0
                }
            if timer > 14 && timer < 45 && timer_speed > 0 {
                vspeed = 6.75
                hspeed = size*(2-facing*4)*0.75
            }
if timer = 20
{
hitbox.dir=45+90*facing
hitbox.damage=11*size
hitbox.bkb=5.4*size
hitbox.kbg=4.6*size
}
///You did it!!!
if attack_success && timer <= 33 && air != 0
{
vspeed=-5
hspeed = (-1-facing*-2)*size
    timer = 70;
    time = 89;
 with hitbox instance_destroy();
sprite_index= roll_sprite;
image_speed=0.2
}
///funny
if (attacking || special || shield) && timer > 80
{
interrupt = 1
}

            if air = 0 {
                state_type="land";
                duster = instance_create(x+2-facing*4,y,obj_dust_effect);
                duster.facing = 1-facing;
                duster.image_alpha = 0.75
                duster = instance_create(x-2+facing*4,y,obj_dust_effect);
                duster.facing = facing;
                duster.image_alpha = 0.75
                hspeed = 0;
                attack_type="none";
                sprite_index =land_sprite;
                image_index = 0
                image_speed = 0
                temp_fall_speed = 0
                timer=0;
                time=16; }
        }  

if (timer <= 19){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0 && target.offstage){
				if ((target.weight <= .22 && target.percent > 55) || (target.weight > .22 && target.weight < .3 && target.percent > 60) || (target.weight > .3 && target.percent > 70)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    temp_fall_speed = 0
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}
        
