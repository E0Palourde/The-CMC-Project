fast_fall = 0;
fast_fall_temp = 0;

if ( time = -1 )
  {
    state_type = "air_attack";
    attack_type = "uthrow";
    timer = 0;
    time = 109;
    sprite_index = uthrow_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
	gravity_lock = 1;
	target.depth = 1;
	target.gravity_lock = 1;
    target.timer_speed = 0;
    target.alarm[0] = 1000;
  }
if ( timer < time )
{
    switch ( timer )
      {
	case 3: image_index = 0; break;
	case 6: image_index = 1; break;
	case 9: image_index = 0; break;
	case 12: image_index = 1; break;
	case 15: image_index = 0; break;
	case 18: image_index = 1; break;
	case 21: image_index = 0; break;

	case 23: sprite_index = dash_attack_sprite; image_index = 4; break;
	case 25: image_index=3;  break;
	case 27: shakex=-5*size*(1-facing*2); image_angle=15*(1-facing*2);  break;
	case 29: shakex=-10*size*(1-facing*2); shakey=1*size; image_index=3; image_angle=30*(1-facing*2);  break;
	case 31: shakex=-15*size*(1-facing*2); shakey=3*size; image_angle=45*(1-facing*2);  break;
	case 37: image_index=4; shakex=-11*size*(1-facing*2); shakey=1*size; image_angle=30*(1-facing*2);  break;
	case 39: shakex=-6*size*(1-facing*2); shakey=0*size; image_angle=15*(1-facing*2);  break;
	case 41: shakex=0; image_angle=0; sound_play(attack_sound2); break;
	case 43: image_index=5; break;
	case 104: image_index=7;  break;
	case 105: image_index=11;  break;
	case 107: image_index=12;  break;
    }
	if ( timer = 3 )
	{
	instance_create(x,y+1,obj_down_impact);
	sound_play(thrust_sound);
	}
	if ( timer >= 0 && timer <= 44 )
	{
	hspeed = 0;
	target.hspeed = 0;
	target.ignore_physics = 1;
	}
	if ( timer >= 0 && timer <= 22 )
	{
	target.x = x + 30 * (1-facing*2) * size;
	target.y = y;
	}
	if ( timer = 23 || timer = 24 )
	{
	target.x = x + 7 * (1-facing*2) * size;;
	target.y = y - 25 * size;
	target.sprite_angle = 270 * (1-facing*2);
	}
	if ( timer = 25 || timer = 26 )
	{
	target.x = x - 16 * (1-facing*2) * size;
	target.y = y - 9 * size;
	target.sprite_angle = 0;
	}
	if ( timer = 27 || timer = 28 )
	{
	target.x = x - 16 * (1-facing*2) * size;
	target.y = y - 4;
	target.sprite_angle = 20 * (1-facing*2);
	}
	if ( timer = 29 || timer = 30 )
	{
	target.x = x - 22 * (1-facing*2) * size;
	target.y = y + 2 * size;
	target.sprite_angle = 30 * (1-facing*2);
	}
	if ( timer >= 31 && timer <= 36 )
	{
	target.x = x - 25 * (1-facing*2) * size;
	target.y = y + 4 * size;
	target.sprite_angle = 40 * (1-facing*2);
	}
	if ( timer = 37 || timer = 38 )
	{
	target.x = x - 10 * (1-facing*2) * size;
	target.y = y - 23 * size;
	target.sprite_angle = 290 * (1-facing*2);
	}
	if ( timer = 39 || timer = 40 )
	{
	target.x = x + 2 * (1-facing*2) * size;
	target.y = y - 24 * size;
	target.sprite_angle = 280 * (1-facing*2);
	}
	if ( timer = 41 || timer = 42 )
	{
	target.x = x + 7 * (1-facing*2) * size;;
	target.y = y - 25 * size;
	target.sprite_angle = 270 * (1-facing*2);
	}
	if ( timer = 43 || timer = 44 )
	{
	target.x = x + 45 * (1-facing*2) * size;
	target.y = y + 7 * size;
	target.sprite_angle = 180 * (1-facing*2);
	}
	if ( timer >= 3 && timer <= 22 )
    {
	vspeed = -5;
    }
	if ( timer >= 23 && timer <= 35 )
    {
	vspeed = -0.5;
    }
	if ( timer = 36 )
    {
	vspeed = 0;
    }
	if ( timer >= 37 && timer <= 41 )
    {
	temp_fall_speed = 0.5;
    }
	if ( timer >= 42 )
	{
	temp_fall_speed = 20;
    }
	if ( timer = 44 )
	{
	if ( on_floor || on_platform )
	{
	timer = 101;
	}
	else
	timer = 43;
	}
	if ( timer = 101 )
	{
	target.x = x + 45 * (1-facing*2) * size;
	target.y = y - 1*size;
	create_throw_box(11,70+facing*40,6.1,6.2,4,1,kick2,obj_down_impact,0.9,0.8,45,0,self.id,1);
	hitbox.shake_ampl = 4.5;
	target.gethit = 0;
	}
}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }