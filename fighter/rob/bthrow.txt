if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = bthrow_sprite;
image_index = 0;
timer = 0;
time = 28;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 50
}
if timer < time {
switch (timer)
{
case 3: image_index = 1; break;
case 6: image_index = 2; break;
case 9: image_index = 3; break;
case 12: image_index = 4; break;
case 15: image_index = 5; break;
}
if ( timer <= 2 )
{
target.x = x + 30 * size * (1-facing*2);
target.y = y;
}
if ( timer = 3 )
{
target.x = x + 23 * size * (1-facing*2);
target.y = y;
}
if ( timer = 4 )
{
target.x = x + 16 * size * (1-facing*2);
target.y = y;
}
if ( timer = 5 )
{
target.x = x + 9 * size * (1-facing*2);
target.y = y;
}
if ( timer = 6 )
{
target.x = x + 2 * size * (1-facing*2);
target.y = y;
}
if ( timer = 7 )
{
target.x = x - 5 * size * (1-facing*2);
target.y = y;
}
if ( timer = 8 )
{
target.x = x;
target.y = y;
}
    if ( timer = 9 )
	{
	target.x = x - 12 * size * (1-facing*2);
	target.y = y;
	sound_play(fthrow_sound);
    create_throw_box(10,150-facing*120,7,3.4,1,4,punch2,obj_spark_hit2,0.6,0.5,-15,16,self.id,1)
	hitbox.shake_kb = 0.1
    hitbox.shake_ampl = 1.5
	instance_create(x,y-20,obj_spark_effect);
	}
    }
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    facing = 1-facing
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        