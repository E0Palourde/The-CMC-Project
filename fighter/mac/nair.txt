if crusade = 0 {
if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "nair";
    timer = 0;
    time = 13;
    sprite_index = nair_sprite;
    image_speed = 0;
    image_index = 0;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 8: image_index = 3; break;
	case 10: image_index = 4; break;
      }

    if ( timer = 2 )
      {
	sound_play(airattack_sound1);
	sound_play(choose(attack_voice1, attack_voice2, attack_voice3, attack_voice4));
	create_hitbox(2,270,2,0.5,2,1,punch1,obj_spark_hit1,0.75,0.6,18,38,self.id,4,1);
      }
    if ( timer = 3 )
      {
	hitbox.bkb = 2*size;
	hitbox.hitbox_x = size * (16-facing*32);
	hitbox.hitbox_y = 22*size;
      }
    if ( timer = 4 )
      {
	hitbox.bkb = 2*size;
	hitbox.hitbox_x = size * (8-facing*16);
	hitbox.hitbox_y = 10*size;
      }
    if ( attack_success && timer = 11 )
      {
	mac_string += 1;
	mac_timer = 0;
      }

    if ( air = 0 )
      {
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 12;
	sprite_index = land_sprite;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "jump";
    attack_type = "none";
    hspeed*=0.2
    timer = 0;
    time = -1;
  }
}
else {
if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "nair";
    timer = 0;
    time = 21;
    sprite_index = nair_sprite;
    image_speed = 0;
    image_index = 0;
    vspeed -= 0.1;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 6: image_index = 1; break;
	case 8: image_index = 2; break;
	case 12: image_index = 3; break;
	case 18: image_index = 4; break;
      }

    if ( timer = 6 )
      {
	sound_play(attack_sound2);
	sound_play(choose(attack_voice1, attack_voice2, attack_voice3, attack_voice4));
	create_hitbox(7,60+facing*60,4.5,2,10,6,punch2,obj_spark_hit2,0.83,0.66,18,38,self.id,6,1);
	hitbox.hit_stun = 13;
      }
    if ( timer = 7 )
      {
	hitbox.dir = 5+facing*170;
	hitbox.bkb = 4.1*size;
	hitbox.hitbox_x = size * (16-facing*32);
	hitbox.hitbox_y = 22*size;
      }
    if ( timer = 8 )
      {
	hitbox.bkb = 3.4*size;
	hitbox.hitbox_x = size * (8-facing*16);
	hitbox.hitbox_y = 10*size;
      }
    if ( attack_success && timer = 11 )
      {
	mac_string += 1;
	mac_timer = 62;
      }

    if ( air = 0 )
      {
    if ( attack_success && timer < 11 )
      {
	mac_string += 1;
	mac_timer = 57;
      }
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 7;
	sprite_index = land_sprite;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
  }
}
