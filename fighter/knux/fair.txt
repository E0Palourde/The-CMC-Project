if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair2_sprite;
        image_index = 0;
        timer = 0;
        time = 35;
        timer_speed = 1;
}
        if timer < time {
            switch ( timer )
			{
			case 13: image_index = 1; break;
			case 14: image_index = 2; break;
			case 15: image_index = 3; break;
			case 17: image_index = 4; image_xscale *= 1.1; image_yscale *= 1.1; break;
			case 19: image_index = 5; break;
			case 28: image_index = 0; break;
			}
            if timer = 14  {
                if random(10)>1.5
                    sound_play(choose(attack_voice1,attack_voice2,attack_voice3,attack_voice4));
                sound_play(attack_sound3);
                create_hitbox(12,angle_correct(20),5.4,7,65,12,sf_punch3,obj_spark_hit4,0.78,0.9,12,9,self.id,5,2);
				hitbox.di = 0;
            }
            if timer = 16 {
                hitbox.damage = 8*size;
                hitbox.bkb = 5.2*size;
                hitbox.kbg = 4*size;
                hitbox.shield_damage = round(9*size);
                set_hitlag(hitbox,5);
                hitbox.sfx = sf_punch2;
                hitbox.gfx = obj_spark_hit2;
            }
            if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=16;
		}
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 4;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }
