if state_type = "jump"  {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "nair";
        image_speed = 0;
        sprite_index = nair_sprite;
        image_index = 5;
        timer = 0;
        time = 48;
        timer_speed=1;
}
        if timer < time {
		switch ( timer )
		{
		case 5: image_index = 0; image_xscale *= 1.14; image_yscale *= 1.14; break;
		case 7: image_index = 1; image_xscale *= 1.07; image_yscale *= 1.07; break;
		case 9: image_index = 2; break;
		case 11: image_index = 3; break;
		case 13: image_index = 0; break;
		case 15: image_index = 1; break;
		case 17: image_index = 2; break;
		case 19: image_index = 3; break;
		case 21: image_index = 0; break;
		case 23: image_index = 1; break;
		case 25: image_index = 2; break;
		case 27: image_index = 3; break;
		case 29: image_index = 0; break;
		case 31: image_index = 1; break;
		case 33: image_index = 2; break;
		case 35: image_index = 3; break;
		case 37: image_index = 4; break;
		case 43: image_index = 5; break;
		}
            if timer = 5 {
                play_attack_voice()
                sound_play(spin_sound);
                sound_play(swing_sound)
                create_hitbox(10,37+facing*106,5.5,4.5,14,8,punch3,obj_spark_hit2,1.4,1.4,1,13,self.id,30,1);
		        hitbox.hit_stun=6
                }
            if timer = 9 {
                sound_play(swing_sound)
                hitbox.damage = 7*size;
                hitbox.bkb = 4*size;
                hitbox.kbg = 3*size;
		hitbox.image_xscale = 1.2*size
                hitbox.image_yscale = 1.2*size
                hitbox.shield_damage = round(7*size);
                set_hitlag(hitbox,5);
                hitbox.sfx = punch1;
		hitbox.hit_stun=3
                hitbox.gfx = obj_spark_hit1;
            }
            if air = 0 {
                dontrepeat = 0;
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=9; }
        } 


 if (timer <= 8){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 130) || (target.weight > .22 && target.weight < .3 && target.percent > 145) || (target.weight > .3 && target.percent > 155)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 4;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }