if state_type = "run" || state_type = "stand" {
        state_type = "attack";
        attack_type = "dash_attack";
        image_speed = 0;
        sprite_index = dash_attack_sprite;
        image_index=0;
        timer = 0;
        time = 38;
        timer_speed=1;
        hspeed*=0.35
}
if timer < time {
	air_move = 0;
            switch ( timer )
			{
			case 5: image_index = 1; break;
			case 7: state_type = "air_attack";image_yscale *= 1.1; image_index = 2; break;
			case 9: image_yscale *= 1.05; image_index = 3; break;
			case 11: image_index = 4; break;
			case 13: image_index = 5; break;
			case 15: image_index = 6; break;
			case 17: image_index = 7; break;
			case 20: image_index = 8; break;
			case 23: image_index = 9; break;
			case 26: image_index = 10; break;
			case 29: image_index = 11; break;
			case 32: if air timer = time; image_index = 12; break;
			case 35: image_index = 13; break;
			}
    if timer = 7 {
        duster = instance_create(x,y,obj_dust_effect)
        duster.facing = facing;
	hspeed = 3.85*(1-2*facing);
	vspeed = -2.8;
        sound_play(attack_sound3)
        sound_play(choose(attack_voice1,attack_voice2,attack_voice3,attack_voice4))
        create_hitbox(11,30+facing*120,5.25,6.75,16,7,punch3,obj_spark_hit2,0.85,0.7,14,14,self.id,15,2);
        hitbox.shake_kb = 3
        hitbox.shake_ampl = 0.75
        hitbox.hit_stun = 2
        hitbox.shield_stun = 1.4
        }
    if timer = 17 {
        hitbox.damage = 7*size
        hitbox.bkb=4*size
        hitbox.kbg=3*size
        hitbox.sfx = punch2
    }

    if timer > 7 && air = 0 && state_type = "air_attack"{
        duster = instance_create(x,y,obj_dust_effect)
        duster.facing = facing;
	state_type = "attack"
	if image_index < 9{
		image_index = 9;
		timer = 23;
	}
    }

}

if (timer >= 7){
if (attack_success || target.object_index == obj_enemy) && dontrepeat = 0{
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 150)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {

    dontrepeat = 0;
    attack_type = "none";
    if air = 0
    state_type = "stand";
    else
    state_type = "jump";
    timer = 0;
    time =-1;
    }
        
