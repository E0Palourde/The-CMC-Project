fast_fall = 0;
fast_fall_temp = 0;

if ( time = -1 )
  {
    state_type = "air_attack";
    attack_type = "uthrow";
    timer = 0;
    time = 110;
    sprite_index = uthrow_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
	gravity_lock = 1;
	target.depth = 1;
	target.gravity_lock = 1;
    target.timer_speed = 0;
    target.alarm[0] = 1000;
  }
if ( timer < time )
{
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 23: image_index = 2;  break;
	case 25: image_index = 3; break;
	case 101: image_index = 4; break;
	case 102: image_index = 5; break;
	case 103: image_index = 6; break;
	case 104: image_index = 7; break;
      }
	if ( timer = 3 )
	{
	play_attack_voice();
	instance_create(x,y+1,obj_down_impact);
	}
	if ( timer >= 0 && timer <= 28 )
	{
	hspeed = 0;
	target.hspeed = 0;
	target.ignore_physics = 1;
	}
	if ( timer >= 0 && timer <= 22 )
	{
	target.y = y;
	target.x = x + 10 * size * (1-facing*2);
	}
	if ( timer >= 23 && timer <= 24 )
	{
	target.y = y + 10 * size;
	target.x = x - 3 * size * (1-facing*2);
	}
	if ( timer >= 25 && timer <= 26 )
	{
	target.y = y;
	target.x = x - 10 * size * (1-facing*2);
	}
	if ( timer >= 3 && timer <= 23 )
    {
	vspeed = -40;
    }
	if ( timer = 23 )
    {
	vspeed = 0;
    }
	if ( timer >= 25 )
	{
	vspeed = 40;
    }
	if ( timer = 26 )
	{
	if ( on_floor || on_platform )
	{
	timer = 101;
	}
	else
	timer = 25;
	}
	if ( timer = 101 )
	{
	create_hitbox(2,270,3,0,-1,4,kick2,obj_down_impact,0.8,0.7,-5,8,self.id,2,5);
	hitbox.di = 0;
	hitbox.shake_ampl = 4.5;
	target.x = x - 10 * size * (1-facing*2);
	target.y = y - 1*size;
	target.gethit = 0;
	}
	if ( timer = 102 )
    {
	target.x = x - 10 * size * (1-facing*2);
	target.y = y - 1*size;
	}
	if ( timer = 103 )
    {
	target.x = x - 10 * size * (1-facing*2);
	target.y = y - 1*size;
	create_throw_box(8,80+facing*20,7.7,4.4,1,1,-1,-1,0.8,0.6,-5,8,self.id,1);
	hitbox.shake_ampl = 0;
  hitbox.hit_stun = 14;
    }
    if ( timer = 105 )
    {
	state_type = "jump";
	hspeed = size * (-2.5+facing*5);
	vspeed = -4.25*size;
	air = 1;
    }
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "jump";
    sprite_index = jump_sprite;
    attack_type = "none";
	temp_fall_speed = 0;
    timer = 0;
    time = -1;
  }