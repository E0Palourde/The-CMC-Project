if ( ( state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump" ) && air < max_jumps )
  {
    if ( moveright )
	facing = 0;
    if ( moveleft )
	facing = 1;
    special = 0;
    state_type = "air_attack";
    attack_type = "downb";
    timer = 0;
    time = 29;
    sprite_index = downb_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed *= 0.5;
    air_move = 1;
    temp = 0; //used for the special attack
    temp2[0] = 0; //temp2[0-2] used for double tap directions
    temp2[1] = 0;
    temp2[2] = 0;
    if ( air = 0 )
	temp3 = 0;
    else
	temp3 = 1;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 3: image_index = 3; break;
	case 4: image_index = 4; break;
	case 5: image_index = 5; break;
	case 6: image_index = 6; break;
	case 7: image_index = 7; break;
	case 9: image_index = 8; break;
	case 11: image_index = 9; break;
      }
    if ( temp = 1 )
    switch ( timer )
      {
	case 23: image_index = 8; break;
	case 25: image_index = 7; break;
	case 27: image_index = 6; break;
	case 29: image_index = 5; break;
	case 32: image_index = 4; break;
	case 34: image_index = 3; break;
	case 36: image_index = 2; break;
      }
    else
    switch ( timer )
      {
	case 13: image_index = 10; break;
	case 16: image_index = 11; break;
	case 18: image_index = 12; break;
	case 20: image_index = 13; break;
	case 22: image_index = 14; break;
	case 24: image_index = 15; break;
	case 27: image_index = 16; break;
	case 29: image_index = 17; break;
	case 31: image_index = 18; break;
	case 33: image_index = 19; break;
	case 35: image_index = 20; break;
	case 38: image_index = 21; break;
	case 40: image_index = 22; break;
      }

    if ( !movedown )
	temp2[0] = 1;
    if ( movedown && temp2[0] = 1 )
	temp2[0] = 2;
    if ( moveright && temp2[1] = 0 )
	temp2[1] = 1;
    if ( !moveright && temp2[1] = 1 )
	temp2[1] = 2;
    if ( moveright && temp2[1] = 2 )
	temp2[1] = 3;
    if ( moveleft && temp2[2] = 0 )
	temp2[2] = 1;
    if ( !moveleft && temp2[2] = 1 )
	temp2[2] = 2;
    if ( moveleft && temp2[2] = 2 )
	temp2[2] = 3;

    fast_fall = 0;
    fast_fall_temp = 0;

    if ( timer = 1 )
      {
	force_edge_grab = 1;
	sound_play(downb_sound);
	sound_play(downb_voice);
	duster = instance_create(x-size*(1+facing*2),y,obj_dust_effect);
	duster.facing = facing;
	duster.image_alpha = 0.75;
	duster = instance_create(x+size*(1-facing*2),y,obj_dust_effect);
	duster.facing = 1-facing;
	duster.image_alpha = 0.75;
	vspeed = -0.9*size;
      }
    if ( timer = 3 )
	speed *= 0.025;
    if ( timer = 7 )
	intangible = 1;
    if ( timer <= 10 || ( timer >= 15 && timer <= 45 ) )
      {
	vspeed = -grav*GRAV_MUL*size;
	hspeed = 0;
	temp_fall_speed = 0;
      }
    if ( timer >= 11 && timer <= 13 )
      {
	if ( ai )
	  {
	    if ( ai_state != "recover" )
		special = 1;
	    else
	      {
		movedown = 0;
		moveup = 1;
		if ( nearest_edge.x > x + 4 )
		  {
		    moveright = 1;
		    moveleft = 0;
		  }
		if ( nearest_edge.x < x - 4 )
		  {
		    moveleft = 1;
		    moveright = 0;
		  }
	      }
	  }
	if ( moveright && !next_to_rwall && !next_to_wall )
	    if ( temp2[1] = 3 )
		hspeed += 20*size;
	    else
		hspeed += 10*size;
	if ( moveleft && !next_to_rwall && !next_to_wall )
	    if ( temp2[2] = 3 )
		hspeed -= 20*size;
	    else
		hspeed -= 10*size;
	if ( moveup && !under_ceiling )
	    vspeed -= 11*size;
	else
	if ( movedown )
	  {
	    if ( temp2[0] = 2 )
	      {
		vspeed += 25*size;
		temp_fall_speed += 25*size;
	      }
	    else
	      {
		vspeed += 15*size;
		temp_fall_speed += 15*size;
	      }
	  }
      }
    else //i.e. if timer is not between 11 and 13
    if ( vspeed > 0 )
	vspeed = 0;
    if ( timer <= 14 && special )
      {
	temp = 1;
	time = 89;
	facing = 1-facing;
      }
    if ( timer = 24 )
	speed *= 0.4;
    if ( timer = 29 && temp = 1 )
      {
	temp = 0;
	special = 0;
	sound_play(attack_sound3);
	create_hitbox(8,30+facing*120,7,6.9,22,9,slash3,obj_spark_slash2,1.2,0.95,13,15,self.id,7,5);
      }

    if ( air = 0 && temp3 = 1 )
      {
	state_type = "stand";
	attack_type = "none";
	timer = 0;
	time = -1;
	sprite_index = land_sprite;
	hspeed = 0;
	exit;
      }

    if ( timer >= 14 && temp = 0 && ( attacking || special || grab || smash ) )
      {
	air += 1;
	speed = 0;
	temp_fall_speed = 0;
	intangible = 0;
	if ( instance_exists(hitbox) )
	with ( hitbox )
	    instance_destroy();
	if ( instance_exists(hitbox2) )
	with ( hitbox2 )
	    instance_destroy();
	if ( instance_exists(hitbox3) )
	with ( hitbox3 )
	    instance_destroy();
	if ( instance_exists(hitbox4) )
	with ( hitbox4 )
	    instance_destroy();
	if ( air = 0 )
	    state_type = "stand";
	else
	    state_type = "jump";
	attack_type = "none";
	timer = 0;
	time = -1;
	if ( special )
	  {
	    if ( moveup )
	      {
		char_upb();
		exit;
	      }
/*	    if ( movedown )
	      {
		char_downb();
		exit;
	      }
*/	    if ( moveright || moveleft )
	      {
		char_sideb();
		exit;
	      }
	    char_b();
	    exit;
	  }
	if ( grab && air = 0 )
	  {
	    char_grab();
	    exit;
	  }
	if ( attacking || smash )
	  {
	    if ( air = 0 )
	      {
		if ( moveup )
		  {
		    if ( smash || ( moveup[1] > 0 && smashtype ) )
		      {
			char_usmash();
			exit;
		      }
		    char_utilt();
		    exit;
		  }
		if ( movedown )
		  {
		    if ( smash || ( movedown[1] > 0 && smashtype ) )
		      {
			char_dsmash();
			exit;
		      }
		    char_dtilt();
		    exit;
		  }
		if ( moveright || moveleft )
		  {
		    if ( smash || ( ( moveright[1] > 0 || moveleft[1] > 0 ) && smashtype ) )
		      {
			char_ssmash();
			exit;
		      }
		    char_stilt();
		    exit;
		  }
		if ( smash )
		  {
		    char_ssmash();
		    exit;
		  }
		char_jab();
		exit;
	      }
	    if ( ( !facing && moveright ) || ( facing && moveleft ) )
	      {
		char_fair();
		exit;
	      }
	    if ( ( !facing && moveleft ) || ( facing && moveright ) )
	      {
		char_bair();
		exit;
	      }
	    if ( moveup )
	      {
		char_uair();
		exit;
	      }
	    if ( movedown )
	      {
		char_dair();
		exit;
	      }
	    char_nair();
	    exit;
	  }
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    air += 1;
  }