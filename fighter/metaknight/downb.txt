if ( air >= max_jumps )
    exit;
if ( ( state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump" ) && air < max_jumps )
  {
    special = 1;
    state_type = "air_attack";
    attack_type = "downb";
    timer = 0;
    time = 63;
    sprite_index = downb_sprite;
    image_speed = 0;
    image_index = 0;
    air_move = 0;
    temp = 0; //used for direction
    temp_dis = 0;
    temp_facing = 0; //used for direction
    temp2 = 0; //used for attack
    temp3 = 0; //also used for attack
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 6: image_index = 2; break;
	case 8: image_index = 3; break;
	case 10: image_index = 4; break;
	case 12: image_index = 5; break;
      }
    if ( temp2 )
    switch ( timer )
      {
	case 31: image_index = 1; break;
	case 33: image_index = 2; break;
	case 34: image_index = 3; break;
	case 35: image_index = 4; break;
	case 36: image_index = 5; break;
	case 37: image_index = 6; break;
      }
    else
    switch ( timer )
      {
	case 30: image_index = 8; break;
	case 33: image_index = 7; break;
	case 36: image_index = 9; break;
	case 39: image_index = 10; break;
	case 42: image_index = 11; break;
      }
    fast_fall = 0;
    fast_fall_temp = 0;

    if ( ai )
      {
	if ( ai_state = "recover" || offstage )
	  {
	    if ( x < nearest_edge.x )
	      {
		moveright = 1;
		moveleft = 0;
	      }
	    if ( x > nearest_edge.x )
	      {
		moveleft = 1;
		moveright = 0;
	      }
	    if ( y > nearest_edge.y )
	      {
		moveup = 1;
		movedown = 0;
	      }
	  }
	if ( ai_state != "recover" )
	  {
	    special = 1;
	    if ( x > enemy.x + 20 )
	      {
		moveleft = 1;
		moveright = 0;
	      }
	    if ( x < enemy.x - 20 )
	      {
		moveright = 1;
		moveleft = 0;
	      }
	    if ( y > enemy.y + 20 )
	      {
		moveup = 1;
		movedown = 0;
	      }
	    if ( y < enemy.y - 20 )
	      {
		movedown = 1;
		moveup = 0;
	      }
	  }
      }
    fast_fall = 0;
    fast_fall_temp = 0;
if ( timer >= 30 && !temp2 )
force_edge_grab = 1;

if(timer <= 29)
{
  if ( analog_control )
    {
      var dis, dir;
      dis = point_distance ( 0 , 0 , holdx , holdy );
      dir = point_direction ( 0 , 0 , holdx , holdy );
      if ( dis > 0.5 )
        {
                var dd;
                dd = round ( dir / 45 ) * 45;
                if ( abs ( dir - dd ) < 14 )
                  dir = dd;
    direction = dir;
        }
    }
  else
  {
  if ( moveright && !moveup && !movedown )
    {
      direction = 0;
      temp_dis = 1;
    }
  if ( moveleft && !moveup && !movedown )
    {
      direction = 180;
      temp_dis = 1;
    }
  if ( !moveright && !moveleft && !movedown )
    {
      direction = 90;
      temp_dis = 1;
    }
  if ( movedown && !moveright && !moveleft )
    {
      direction = 270;
      temp_dis = 1;
    }
  if ( moveup && moveright )
    {
      direction = 45;
      temp_dis = 1;
    }
  if ( moveup && moveleft )
    {
      direction = 135;
      temp_dis = 1;
    }
  if ( movedown && moveright )
    {
      direction = 315;
      temp_dis = 1;
    }
  if ( movedown && moveleft )
    {
      direction = 225;
      temp_dis = 1;
    }
  if ( !moveright && !moveleft && !movedown && ! moveup )
    {
      direction = 0;
      temp_dis = 0;
    }
  }
}

    if ( timer = 1 )
      {
	sound_play(downb_voice);
	duster = instance_create(x-size*(1+facing*2),y,obj_dust_effect);
	duster.facing = facing;
	duster.image_alpha = 0.75;
	duster = instance_create(x+size*(1-facing*2),y,obj_dust_effect);
	duster.facing = 1-facing;
	duster.image_alpha = 0.75;
      }
    if ( timer = 12 )
      {
  sound_play(downb_sound);
	intangible = 1;
      }
    if (timer = 16)
      visible = 0;
    if ( timer <= 30 )
      {
	speed = 0;
	temp_fall_speed = 0;
      }
    if( timer <= 40 || temp2 )
    {
      gravity_lock = 1;
    }
    if ( timer = 18 )
    {
      if ( analog_control )
      {
        if ( dis > 0.25 )
        {
          temp_dis = dis;
          speed = 90 * temp_dis;
          // temp = direction;
        }
      }
      else
      {
        if( temp_dis = 1 )
        {
          speed = 90 * temp_dis;
          // temp = direction;
        }
      }
    }
    if ( timer = 26 )
    {
      if ( dis < 0.25 && analog_control )
        temp3 = facing;
      else if (temp_dis = 0 && !analog_control)
        temp3 = facing;
      else if ( direction < 85 || direction > 275 )
      {
        facing = 0;
        temp3 = 1;
      }
      else if ( direction > 95 && direction < 265 )
      {
        facing = 1;
        temp3 = 0;
      }
      else
        temp3 = facing;
    }
    if ( timer = 27 )
      {
	if ( special )
	  {
	    temp2 = 1;
	    time = 85;
	  }
      }
    if( timer = 28 && temp2 = 1 )
    {
      intangible = 0;
      visible = 1;
    }
    if( timer = 30 )
    {
      if ( !temp2 )
        sound_play(downb_sound2);
      visible = 1;
      if ( temp2 )
      {
        facing = temp3;
        sprite_index = downb_attack_sprite;
        image_index = 0;
      }
    }
    if ( timer = 34 && temp2 )
    {
      special = 0;
      sound_play(downbslash_sound);
      create_hitbox(14,30+facing*120,7.1,7,22,9,slash3,obj_spark_slash2,1.05,1.05,17,11,self.id,2,5);
      hitbox.hit_stun = 14;
    }
    if( timer = 40 )
    {
      speed = 0;
      intangible = 0;
    }
  }
          if (timer >= 34){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 100) || (target.weight > .22 && target.weight < .3 && target.percent > 115) || (target.weight > .3 && target.percent > 125)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0;
    if( air = 0 )
      state_type = "stand";
    else
	    state_type = "fall";
    attack_type = "none";
    special = 0
    timer = 0;
    time = -1;
  }