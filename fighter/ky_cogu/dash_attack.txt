if state_type = "run" || state_type = "stand" {
        state_type = "attack";
        attack_type = "dash_attack";
        image_speed = 0;
        sprite_index = dash_attack_sprite;
        image_index=0;
        timer = 0;
        time = 60;
        timer_speed=1;
}
if timer < time {
     state_type = "attack";
	switch (timer) { 
	case 0: image_index = 0; break; 
	case 2: image_index = 1; break; 
	case 4: image_index = 2; break; 
	case 19: image_index = 3; break; 
	case 20: image_index = 4; break; 
	case 22: image_index = 5; break; 
	case 25: image_index = 6; break; 
	case 29: image_index = 7; break; 
	case 45: image_index = 8; break; 
	case 50: image_index = 9; break; 
}
	  
	  if timer >= 4 and timer < 19 {
		  hspeed = 4 * (1-facing*2)
		  duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = facing
                duster.image_xscale = 0.1
                duster.image_yscale = 0.1
	  }
	  
	  if timer = 4 {
		  		  create_hitbox ( 6 , angle_correct(20) , 4.7 , 1 , 12 , 7 , solhit2 , obj_spark_hit2 , 1.21 , 0.60 , 14.82 , 8.55 , self.id , 15 , 2 );
				  sound_play(swingsound1);
				  hitbox.hit_stun = 25
	  }
	  
	  if timer = 19 {
		  hspeed *= 0.2
		  sound_play(dashattack_voice);
	  }
	  
	  if timer = 29 {
		  create_hitbox ( 3 , angle_correct(20) , 6.1 , 6.25 , 12 , 11 , solslash2 , obj_spark_slash4 , 2.5 , 1.60 , 0 , 15.55 , self.id , 4 , 2 );
		  sound_play(swingsound6);
		  slashgfx = create_blur(x-37*(1-facing*2),y - 20,self.id);
    slashgfx.sprite_index = dipperslash_sprite;
	slashgfx.image_index = 0;
    slashgfx.anim_speed = 0.2;
    slashgfx.image_alpha = 0.9;
    slashgfx.image_xscale = 0.2 * (1-facing*2);
    slashgfx.image_yscale = 0.2;
    slashgfx.depth = depth - 0.1;
    slashgfx.snap = self.id
	  }
	  
	  
	  if (timer >= 29){
if (attack_success || target.object_index == obj_enemy) && (temp_spawn >= 0 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 95) || (target.weight > .22 && target.weight < .3 && target.percent > 110) || (target.weight > .3 && target.percent > 125)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	    
	  
	  
	  
	
}  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
	dontrepeat = 0;
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
