if ( state_type = "stand" || state_type = "crouch" || state_type = "run" || state_type = "jump" )
{
	if(moveright){facing = 0}
	if(moveleft){facing = 1}
	if (sidetime >= 1 )
	{
		exit;
	}	
	else 
	{
	sidetime = 125;
	}
	
	special = 1;
	hspeed = 0;
       state_type = "air_attack";
       attack_type = "sideb";
       image_speed = 0;
       sprite_index = taunt_sprite;
       //sprite_index = card_sprite;
       image_index= 4;

       timer_speed=1;
	
	sprite_index = sideb_sprite;
	time = 220;
	timer = 200;
	
	can_sideb = 0;
	state_type = "air_attack";
	time = 220;
	sprite_index = sideb_sprite;
	image_speed = 0;
	image_index = 0;
	hspeed = 0;
	temp = slash3; //used to quickly scroll through drill sounds
	tempdirection = facing*180; //used to correct air movement
}


if ( timer < time )
{
	switch ( timer )
	{
	case 204: image_index = 1; break;
	}
if timer = 201 {
	sound_play ( mid_jump_sound );
}

	fast_fall = 0;
	fast_fall_temp = 0;
if timer > 208
force_edge_grab = 1
	if ( timer = 208 )
	{
	sound_play(slash3);
	sound_play(slash3);
	create_hitbox(1,25+facing*130,4,0,4,2,slash3,obj_spark_slash2,0.8,0.7,6,9,self.id,6,1);
	hitbox.di = 0.8;
	speed = 10*size;
	gravity = 0;
	direction = facing*180;
	instance_create(x,y,obj_down_impact);
	duster = instance_create(x,y,obj_dust_effect);
	duster.facing = facing;
	spark.sprite_index = global.effect_shieldimpact;
	spark.image_speed = 1.2;
	spark.image_blend = c_yellow;
	spark.image_xscale = 1 * size;
	spark.image_yscale = 1 * size;
	}
	if ( timer >= 213 && timer <= 263 )
	{
	if spark.image_index >= 3.5 {
	spark.image_index = 0 }
	spark.x = x;
	spark.y = y-10;
	if ( ai )
	{
		if ( ai_state = "recover" || offstage )
		{
		if ( y > nearest_edge.y )
			moveup = 1;
		}
		else
		{
		if ( enemy.y < y - 5 )
			moveup = 1;
		if ( enemy.y > y + 5 )
			movedown = 1;
		if ( x < nearest_edge.x + 5 && nearest_edge.object_index = obj_edge_left && facing ) ||
		( x > nearest_edge.x - 5 && nearest_edge.object_index = obj_edge_right && !facing )
			moveup = 1;
		}
	}

	if ( timer >= 200 )
		speed = 5*size;
	else
		speed = 6*size;
	gravity = -0.5;
	if ( moveup && moveright )
	{
		if ( direction < 45 || direction >= 225 )
		direction += 0;
		else
		if ( direction > 45 && direction < 225 )
		direction -= 0;
	}
	else
	if ( moveup && moveleft )
	{
		if ( direction < 135 || direction >= 315 )
		direction += 0;
		else
		if ( direction > 135 && direction < 315 )
		direction -= 0;
	}
	else
	if ( movedown && moveright )
	{
		if ( direction < 135 || direction > 315 )
		direction -= 0;
		else
		if ( direction >= 135 && direction < 315 )
		direction += 0;
	}
	else
	if ( movedown && moveleft )
	{
		if ( direction <= 45 || direction > 225 )
		direction -= 0;
		else
		if ( direction > 45 && direction < 225 )
		direction += 0;
	}
	else
	if ( moveup )
	{
		if ( direction < 90 || direction >= 270 )
		direction += 0;
		else
		if ( direction > 90 && direction < 270 )
		direction -= 0;
	}
	else
	if ( movedown )
	{
		if ( direction < 90 || direction > 270 )
		direction -= 0;
		else
		if ( direction >= 90 && direction < 270 )
		direction += 0;
	}
	else
	if ( moveright )
	{
		if ( direction < 0 || direction >= 180 )
		direction += 0;
		else
		if ( direction > 0 && direction < 180 )
		direction -= 0;
	}
	else
	if ( moveleft )
	{
		if ( direction < 0 || direction > 180 )
		direction -= 0;
		else
		if ( direction >= 0 && direction < 180 )
		direction += 0;
	}

	{
		spark2 = after_image(4,c_white,0.65);
		spark2.image_angle = image_angle;
	}
	}
	if ( timer == 204 || timer == 205 || timer == 206 || timer == 207 || timer == 208 || timer == 209 || timer == 210 || timer == 211 || timer == 212 ) 
	{
	sound_play(temp);
	temp += 1;
	create_hitbox(1,25+facing*130,4,0,2,2,slash3,obj_spark_slash2,1.4,1.1,4,11,self.id,5,1);
	hitbox.weight_kb = 1;
		gravity = -0.5;
	}
	if ( timer = 217 )
	{
	sound_play(drill_sound9);
	create_hitbox(3,40+facing*100,6.5,2.5,5,8,slash3,obj_spark_slash3,1.4,1.1,4,11,self.id,3,2);
	hitbox.hit_stun = 6;
	}

	if ( timer >= 234 && air = 0 )
	{
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 0;
	sprite_index = land_sprite;
	image_angle = 0;
	instance_create(x,y,obj_down_impact);
	}
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "airflinch" )
{
	state_type = "stand";
	attack_type = "none";
	timer = 0;
	time = 0;
}


   
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" 
{
    attack_type = "none";
	if(air != 0){state_type = "jump";}
    else{state_type = "stand";}
    timer = 0;
    time =-1;
}

