// This script controls Mario's Fire Ball projectile. Similar scripts are to be used to control other projectiles. 
// Such scripts should not be executed when the timer_speed is equal to 0, as written in the projectile_box object Step event. 

// If a script like this is not used, a projectile created using the create_projectile function will behave like a normal hitbox, except
// that no hitlag will affect the fighter who fired the projectile. 
absorb = 1  // This attack may be absorbed by PSI magnet
absorb2 = 1
moving_object = 1
{
if hit = 1{
create_projectile(2,15+facing*150,3,1,7,4,fire1,obj_spark_fire1,2,2,0,0,self.id,120,Marisa_Firework);
}
if timer <= 1 && temp = 0 {         // Initialize sprite and speed during frame 1
    sprite_index = attacker.id.Marisa_Firework_sprite
    hspeed = (2 - attacker.id.facing*4)/1.5
    image_speed = 1;
    visible=1
    temp = 1
    time = 50
    fire_sound = attacker.fire_sound3
    priority = 2
    }
if ( timer = 1) {
    vspeed -= 5
}
if ( timer = 5 ){
    gravity = 0.3
}

if ( on_floor || on_platform){
  hspeed = 0
  image_speed = 0
  spark = instance_create ( x + 11 * size * ( 1 - facing * 2 ) , y -3 * size , obj_spark );
  spark.sprite_index = global.explosion_spark2;
  spark.image_speed = 1;
  spark.image_blend = merge_color ( c_blue , c_red , 100 );
  spark.image_xscale = 0.35 * size;
  spark.image_yscale = 0.35 * size;
  sound_play ( explode_small );
  instance_destroy()
}
if timer = 50 {
  spark = instance_create ( x + 11 * size * ( 1 - facing * 2 ) , y -3 * size , obj_spark );
  spark.sprite_index = global.explosion_spark2;
  spark.image_speed = 1;
  spark.image_blend = merge_color ( c_blue , c_red , 100 );
  spark.image_xscale = 0.35 * size;
  spark.image_yscale = 0.35 * size;
  sound_play ( explode_small );
}
if hit = 1 {
  spark = instance_create ( x + 11 * size * ( 1 - facing * 2 ) , y -3 * size , obj_spark );
  spark.sprite_index = global.explosion_spark2;
  spark.image_speed = 1;
  spark.image_blend = merge_color ( c_blue , c_red , 100 );
  spark.image_xscale = 0.35 * size;
  spark.image_yscale = 0.35 * size;
  sound_play ( explode_small );
  instance_destroy()
}
  if ( under_ceiling && vspeed < 0 ) vspeed = 0;
  if ( next_to_rwall && hspeed > 0 ) hspeed *= -1;
  if ( next_to_lwall && hspeed < 0 ) hspeed *= -1;
  }