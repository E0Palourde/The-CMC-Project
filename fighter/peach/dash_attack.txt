if ( state_type = "stand" || state_type = "run" )
  {
    state_type = "attack";
    attack_type = "dash_attack";
    timer = 0;
    time = 37;
    sprite_index = dash_attack_sprite;
    image_speed = 0;
    image_index = 0;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 9: image_index = 4; break;
	case 12: image_index = 5; break;
	case 15: image_index = 6; break;
	case 27: image_index = 7; break;
      }

    if ( timer = 6 )
      {
	play_attack_voice();
	sound_play(dashattack_sound);
	create_hitbox(12,80+facing*20,5.85,4.5,10,6,punch3,obj_spark_hit4,0.75,0.75,2,26,self.id,15,3);
	hitbox.hit_stun = 19;
	create_hitbox2(9,362,5,3.2,8,4,punch3,obj_spark_hit4,0.9,0.65,8,20,self.id,15,2);
	hitbox.shake_ampl = 1.3;
	duster = instance_create(x-size*(6-facing*12),y,obj_dust_effect);
	duster.facing = facing;
	duster.image_alpha = 0.75;
	var burst;
    //78, 36
	burst = instance_create(place_x(30)+x,place_y(15)+y,obj_jab_burst);
    burst.snap = self.id;
	burst.image_xscale = xsize * 0.4;
    burst.image_yscale = ysize * 0.4;
      }
    if timer = 9
	{
	hitbox.damage = 8;
	hitbox2.damage = 7;
	hitbox.kbg = 2;
	hitbox2.kbg = 2;
	hitbox.image_xscale = 0.6;
	hitbox.image_yscale = 0.6;
	hitbox2.image_xscale = 0.8;
	hitbox2.image_yscale = 0.5;
	}
    if ( timer <= 10 )
	hspeed = size * (3.35-facing*6.7);
    if ( timer >= 11 && timer <= 18 )
	hspeed = size * (2.5-facing*5);
    if ( timer >= 19 && timer <= 23 )
	hspeed = size * (1.8-facing*3.6);
    if ( timer >= 24 && timer <= 28 )
	hspeed = size * (1-facing*2);
    if ( timer = 29 )
	hspeed = 0;
    if timer = 32
	interrupt = 1
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }