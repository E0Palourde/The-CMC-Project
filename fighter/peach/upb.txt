if ( state_type = "stand" || state_type = "run" || state_type = "jump" )
  {
    if ( moveright )
	facing = 0;
    if ( moveleft )
	facing = 1;
    state_type = "air_attack";
    attack_type = "upb";
    timer = 0;
    time = 72;
    sprite_index = crouch_sprite;
    image_speed = 0;
    image_index = 0;
    if ( air = 0 )
	hspeed = 0;
    air_move = 0;
    hover = 0;
    temp = 1; //used for opening/closing
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 37: image_index = 1; break;
	case 40: image_index = 2; break;
	case 43: image_index = 3; break;
	case 44: image_index = 0; break;
      }

    fast_fall = 0;
    fast_fall_temp = 0;

    if ( timer < 2 )
	intangible = 1;
    if ( timer = 4 )
	{
		with(hurtbox)
			instance_destroy()
		create_hurtbox_precise(self.id, 64, upb_mask1)
		sprite_index = upb_sprite1;
    }
	if ( timer <= 5 )
      {
		vspeed = 0;
        hspeed = 0;
		gravity = 0;
      }
    if ( timer = 6 )
      {
	sound_play(upb_sound1);
	hspeed = size * (2-facing*4);
	vspeed = -5.9*size;
	intangible = 0;
	duster = instance_create(x,y,obj_dust_effect);
	duster.facing = facing;
      }
    if timer > 25
	force_edge_grab = 1
    if ( timer > 7 && timer < 30 ) image_angle = image_xscale*(15);
    if ( timer = 5 || timer = 6 )
   {
        create_hitbox(0.75,90+facing*15,9.3,0,3,4,slash1,obj_spark_slash3,0.55,0.75,4,20,self.id,1,3);
	create_hitbox2(0.75,90+facing*15,9.3,0,3,4,slash1,obj_spark_slash3,0.35,0.6,25,39,self.id,1,3);
	hitbox2.image_angle = 320-facing*((2*320)-540)
	hitbox.di = -1;
	hitbox.weight_kb = 1;
	hitbox2.di = -1;
	hitbox2.weight_kb = 1;
	hspeed = image_xscale*1.5;
	vspeed = size * ( -4.5 + timer/21 );
    }
    if ( timer = 8 || timer = 10 || timer = 12 || timer = 14 || timer = 16 || timer = 18 || timer = 20 || timer = 22 || timer = 24 || timer = 28 )
      {
	create_hitbox(0.75,direction,5.5-timer/30,0,3,4,slash1,obj_spark_slash3,0.55,0.75,4,20,self.id,1,3);
	create_hitbox2(0.75,direction,5.5-timer/30,0,3,4,slash1,obj_spark_slash3,0.35,0.6,21,46,self.id,1,3);
	hitbox2.image_angle = 340-facing*((2*340)-540)
	hitbox.di = -1;
	hitbox.weight_kb = 1;
	hitbox2.di = -1;
	hitbox2.weight_kb = 1;
	hspeed = image_xscale*1.5;
	vspeed = size * ( -4.5 + timer/21 );
      }
    if ( timer = 30 )
      {
	create_hitbox(5,90,8.7,0.4,7,6,slash2,obj_spark_slash3,0.55,0.75,4,20,self.id,4,3);
	create_hitbox2(5,90,8.7,0.4,7,6,slash2,obj_spark_slash3,0.35,0.6,25,39,self.id,4,3);
	hitbox2.image_angle = 320-facing*((2*320)-540)
        hspeed = 0;
	vspeed = -2.4*size;
        image_angle = 0;
	air_move = 1;
      }
    
	if ( timer = 33 )
      {
		with(hurtbox)
			instance_destroy()
	  create_hurtbox_precise(self.id, 40, upb_mask3)
	sound_play(upb_sound2);
	sprite_index = upb_sprite3;
      }
    if ( timer >= 40 && timer <= 68 )
      {
        image_angle = -hspeed;
	if ai && offstage && y < nearest_edge.y
	temp = 0
	if ( ai && !offstage && ai_state != "recover" && random(20) > 19 )
	    movedown = 1;
	if ( movedown )
	{
		with(hurtbox)
			instance_destroy()
	    temp = 0;
		if umbrellatemp>-1
			umbrellatemp=-1
	
	}
	if ( moveup )
	{
		with(hurtbox)
			instance_destroy()
	    temp = 1;
		if umbrellatemp<1
		umbrellatemp=1
	}
	if ( temp = 1 && umbrellatemp=1)
	{

	    umbrellatemp=2
		sprite_index = upb_sprite3;
	}
	if umbrellatemp=2 && !instance_exists(hurtbox)
	{
		create_hurtbox_precise(self.id, 9999, upb_mask3)
	}
	if ( temp = 0 && umbrellatemp=-1)
	{

	    sprite_index = fall_sprite;
	    umbrellatemp=-2
	}
	if umbrellatemp=-2 && !instance_exists(hurtbox)
	{
		create_hurtbox_precise(self.id, 9999, fall_mask )
	}
	if ( temp = 1 && vspeed > 0.8 )
	    vspeed = 0.8;
      }
    if ( temp = 1 && !instance_exists ( hitbox ) && timer > 40 )
      {
	create_hitbox(2,70+facing*40,4.5,1,3,3,slash1,obj_spark_slash3,0.7,0.55,8,52,self.id,12,2);
	hitbox.weight_kb = 1;
      }
    if ( temp = 0 && instance_exists ( hitbox ) )
	with ( hitbox ) { instance_destroy(); }
    if ( timer >= 68 )
	{
		with(hurtbox)
			instance_destroy()
		create_hurtbox_precise(self.id, 28, upb_mask3)
		timer = 40;
    }
	if ( air = 0 && timer >= 30 )
      {
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 16;
	sprite_index = land_sprite;
      }
  }