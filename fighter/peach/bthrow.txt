if ( time = -1 )
  {
    state_type = "attack";
    attack_type = "bthrow";
    timer = 0;
    time = 30;
    sprite_index = bthrow_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    target.timer_speed = 0;
    target.alarm[0] = 50;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 13: image_index = 4; break;
	case 16: image_index = 5; break;
	case 19: image_index = 6; break;
	case 23: image_index = 7; break;
	case 26: image_index = 8; break;
      }
	if ( timer <= 3 )
	{
	target.x = x + 16 * size * (1-facing*2);
	target.y = y;
	}
    if ( timer >= 4 && timer <= 6 )
      {
	target.x = x + size * (4-facing*8);
	target.y = y - 2*size;
      }
    if ( timer >= 7 && timer <= 9 )
      {
	target.x = x;
	target.y = y - 2*size;
      }
    if ( timer = 10 || timer = 11 )
	{
	target.x = x - size * (2-facing*4);
	target.y = y - 2*size;
	}
	if ( timer = 12 || timer = 13 )
    {
	target.x = x - size * (5-facing*10);
	target.y = y - 2*size;
	}
    if ( timer = 12 )
      {
	instance_create(x+size*(20-facing*40),y-20*size,obj_spark_effect);
      }
    if ( timer = 13 )
      {
	play_attack_voice();
	sound_play(swingsnd2);
	create_hitbox(3,90,1,0,8,6,kick2,obj_spark_hit4,0.4,0.4,-4,15,self.id,1,5);
	hitbox.di = 0;
	duster = instance_create(x+size*(2-facing*4),y,obj_dust_effect);
	duster.facing = facing;
	duster.image_alpha = 0.6;
      }
    if ( timer = 14 )
	create_throw_box(6,155-facing*130,5.6,4.5,1,1,-1,obj_spark_effect,0.4,0.4,-4,16,self.id,1);
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }