if ( state_type = "stand" || state_type = "run" || state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "b";
    hover = 0;
    timer = 0;
    time = 64;
    sprite_index = b_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    air_move = 0;
    temp = 0; //used for hitbox
    temp2 = 0; //used for more powerful hit
	create_hurtbox_precise(self.id, 64, b_mask)
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 12: image_index = 4; break;
	case 15: image_index = 5; break;
	case 18: image_index = 6; break;
	case 20: image_index = 7; break;
	case 23: image_index = 8; break;
	case 26: image_index = 9; break;
	case 29: image_index = 10; break;
	case 32: image_index = 11; break;
	case 35: image_index = 12; break;
	case 38: image_index = 13; break;
	case 40: image_index = 14; break;
	case 43: image_index = 15; break;
	case 46: image_index = 16; break;
	case 49: image_index = 17; break;
	case 52: image_index = 18; break;
	case 55: image_index = 19; break;
	case 58: image_index = 20; break;
	case 100: image_index = 0; break;
	case 104: image_index = 1; break;
	case 107: image_index = 2; break;
	case 110: image_index = 3; break;
	case 113: image_index = 4; break;
	case 116: image_index = 5; break;
	case 119: image_index = 6; break;
	case 122: image_index = 7; break;
	case 126: image_index = 8; break;
	case 129: image_index = 9; break;
	case 133: image_index = 10; break;
	case 137: image_index = 11; break;
	case 141: image_index = 12; break;
	case 145: image_index = 13; break;
	case 149: image_index = 14; break;
	case 153: image_index = 15; break;
      }

    if ( timer = 6 )
	sound_play(b_sound1);
    if ( timer = 8 )
	sound_play(toadsworth_2);
    if ( timer = 9 && air > 0 && vspeed > -3 )
	vspeed -= 3;
    if ( timer = 10 || timer = 19 )
      {
	intangible = 1;
	flashing = 1;
	alarm[7] = 5;
      }
    if ( timer >= 13 && timer <= 44 )
      {
	o = collision_rectangle(x-size*(10-facing*20),y-28*size,x+size*(30-facing*60),y,wind,0,1);
	if ( o.attacker.id != self.id )
	{
	var o;
	hspeed *= 0.25;
	o.attacker = self.id;
	o.push_x *= -1;
	o.hspeed = 2 - facing * 4;
	}
      }
    if ( timer >= 13 && timer <= 44 && collision_rectangle(x-size*(10-facing*20),y-28*size,x+size*(30-facing*60),y,attack_box,0,1) )
      {
	  with(hurtbox)
		instance_destroy()
		create_hurtbox_precise(self.id, 64, b_mask2)
	temp = instance_nearest(x,y,attack_box);
	timer = 100;
	time = 147;
	sound_stop(toadsworth_2);
	sound_play(toadsworth_1);
	sound_play(b_sound);
	sound_play(b_sound2);
	sprite_index = b_sprite2;
	intangible = 1;
	effect_create_above(ef_flare,x+size*(15-facing*30),y-17*size,0,c_white);
	if ( temp.attacker.x < x )
	    facing = 1;
	else
	    facing = 0;
	damage = temp.damage;
	bkb = temp.bkb;
	kbg = temp.kbg;
	if ( temp.attacker.percent > 100 )
	    temp2 = 1;
	with ( temp )
	instance_destroy();
      }
    if ( timer = 45 )
	intangible = 0;
    if ( ( timer <= 55 || timer >= 100 ) && vspeed > 0 )
	vspeed = 0;

    if ( timer = 104 && air > 0 )
	hspeed = size * (-1.5+facing*3);
    if ( timer >= 105 && timer <= 113 && timer mod 2 = 1 && air > 0 )
	vspeed -= grav*GRAV_MUL * 3*size;
    if ( timer = 106 )
      {
	if ( air > 0 )
	    vspeed -= 0.4;
	intangible = 0;
      }
    if ( temp2 = 0 )
      {
	if ( timer >= 105 && timer <= 113 && timer mod 2 = 1 )
	  {
	    create_hitbox(1+damage/8,60+facing*60,2,0,5,4,fire2,obj_spark_hit2,1.1,0.9,22,15,self.id,1,4);
	    hitbox.di = 0.3;
	  }
	if ( timer = 115 )
	    create_hitbox(2+damage/6,30+facing*120,3.5+bkb/3,4.5+kbg/2.5,5,7,fire2,obj_spark_hit2,1.1,0.9,22,15,self.id,3,4);
      }
    if ( temp2 = 1 )
      {
	if ( timer = 106 )
	  {
	    create_hitbox(12+damage/2,60+facing*60,8+bkb/3,5.4+kbg/2.75,12,8,explodehit4,obj_spark_fire1,1.1,0.9,22,15,self.id,3,4);
	    instance_create(x+size*(13-facing*26),y-13*size,obj_spark_explode2);
	  }
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    if ( air = 0 )
	state_type = "stand";
    else
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
  }