if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "nair";
    timer = 0;
    time = 36;
    sprite_index = nair_sprite;
    image_speed = 0;
    image_index = 0;
    vspeed -= 0.1;
  }

    switch ( timer )
      {
	case 1: image_index = 0; break;
	case 5: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 8: image_index = 4; break;
	case 10: image_index = 5; break;
	case 12: image_index = 6; break;
	case 14: image_index = 7; break;
	case 16: image_index = 8; break;
	case 18: image_index = 9; break;
	case 20: image_index = 10; break;
	case 22: image_index = 11; break;
	case 26: image_index = 12; break;
	case 28: image_index = 13; break;
	case 30: image_index = 14; break;
	case 32: image_index = 15; break;
	case 34: image_index = 16; break;
      }

    if ( timer = 4 )
      {
	if random(10) > 3.2
		sound_play(choose(attack_voice1,attack_voice2,attack_voice3,attack_voice4,csh_voice));
	sound_play(spin_sound);
	create_hitbox(8,angle_correct(60),6,2.8,13,7,punch3,obj_spark_hit1,1,1,0,18,self.id,17,1);
	hitbox.hit_stun = 9
      }
    if ( timer = 10 )
      {
	hitbox.damage = 5*size;
	hitbox.bkb = 4.5*size;
	hitbox.kbg = 2.5*size;
	hitbox.shield_damage = 7*size;
	hitbox.hitlag_frames = 5*size;
	hitbox.sfx = punch2;
	hitbox.gfx = obj_spark_hit1;
      }
    if ( air = 0 )
      {
	state_type = "land";
	attack_type = "none";
	hspeed*=0.3
	timer = 0;
	time = 7;
	sprite_index = land_sprite;
      }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
  }