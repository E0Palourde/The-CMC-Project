if ( state_type = "stand" || state_type = "run" || state_type = "crouch" )
  {
    state_type = "attack";
    attack_type = "dsmash";
    timer = 0;
    time = 52;
    sprite_index = dsmash_sprite;
    image_speed = 0;
    image_index = 0;
    charge_frame = 3;
    hspeed = 0;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 1: image_index = 2; break;
	case 3: image_index = 3; break;
	case 5: image_index = 4; break;
	case 10: image_index = 5; break;
	case 12: image_index = 6; break;
	case 14: image_index = 7; break;
	case 16: image_index = 8; break;
	case 19: image_index = 9; break;
	case 22: image_index = 10; break;
	case 24: image_index = 11; break;
	case 25: image_index = 12; break;
	case 26: image_index = 13; break;
	case 27: image_index = 14; break;
	case 30: image_index = 15; break;
	case 36: image_index = 16; break;
	case 40: image_index = 17; break;
	case 43: image_index = 18; break;
	case 46: image_index = 19; break;
	case 48: image_index = 20; break;
	case 50: image_index = 21; break;
      }

    if ( timer = 4)
      {
	instance_create(x+size*(8-facing*16),y-11*size,obj_spark_effect);
      }
    if ( timer = 5 )
      {
    image_xscale *= 1.25;
	image_yscale *= 1.05;
	sound_play(dsmash_voice);
	sound_play(attack_sound3);
	create_hitbox(13,24+facing*132,5,7.2,20,8,kick3,obj_spark_hit2,0.86,0.65,16,10,self.id,9,3);
	hitbox.charge_dmg = 0.65;
	hitbox.charge_hitlag = 0.8;
	duster = instance_create(x+6-facing*12,y,obj_dust_effect);
	duster.facing = 1-facing;
	duster.image_xscale *= 0.8;
	duster.image_yscale *= 0.8;
      }
    if (timer = 11 ) 
      {
    image_xscale /= 1.25;
	image_yscale /= 1.05;
	  }
	if ( timer = 14 ) 
	{
	create_hitbox(15,155-facing*130,5.5,7.2,16,6,kick3,obj_spark_hit2,0.85,0.65,-10,10,self.id,3,3);
	duster = instance_create(x-6+facing*12,y,obj_dust_effect);
	duster.facing = facing;
	duster.image_xscale *= 0.8;
	duster.image_yscale *= 0.8;
	}
    if ( timer = 19 )
      {
    image_xscale *= 1.25;
	image_yscale *= 1.05;
    sound_play(attack_sound3);
	create_hitbox(13,24+facing*132,5,7.2,20,8,kick3,obj_spark_hit2,0.85,0.65,16,10,self.id,7,3);
	hitbox.charge_dmg = 0.5;
	hitbox.charge_hitlag = 0.5;
	duster = instance_create(x+6-facing*12,y,obj_dust_effect);
	duster.facing = 1-facing;
	duster.image_xscale *= 0.8;
	duster.image_yscale *= 0.8;
      }
    if ( timer = 25 )
      {
    image_xscale /= 1.25;
	image_yscale /= 1.05;
      }
    }

 if (timer >= 5){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 100) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 140)){
				    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0;
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }