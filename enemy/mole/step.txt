//this is run every frame in the game, make sure to optimize it!!!!!

//well if all your goal is make a simple enemy using the mfairy or this one as a base, this should do the job pretty well.
//I suggest not dabbling with the onhit.txt and the flinch state unless you know what youre doing

if obj_game_control.state_type != "idle"
exit;

on_floor = 0;
on_platform = 0;
next_to_lwall = 0;
next_to_rwall = 0;
on_ceil = 0;

actual_width = 10

if state_type = "flinch" {
    
    speed = 0

    if (on_floor || on_platform || on_ceil) and countdownD <= 0 and prepare_to_die = 0 {
        direction = -direction
        countdownD = 10
    }

    if countdownD > 0
    countdownD -= 1

    if (speed != 0 && (next_to_lwall || next_to_rwall)) and countdownS <= 0 {
        direction = -direction + 180
        countdownS = 10
        facing = !facing
    }

    if has_hit <= 0 {

        if prepare_to_die = 0 {

            state_type = "stand"

        }
        else if dead = 0 {
            if on_floor or on_platform {
				hspeed = 0
				speed = 0
				vspeed = 0
				dead = 1
				state_type = "death"
				timer = 0
                //sound_play2(magic1)
                //alarm[8] = 15
                //alpha_add = -0.08
                //dead = 1
            }

        }

        has_hit = 0
    }

    has_hit -= 1

}

if countdownS > 0
countdownS -= 1

if countdownCI > 0
countdownCI -= 1

///standing behavior, player out of vision
if state_type = "stand" {
    image_index = 0
    speed = 0
    image_speed = 0
    if target.x < x
    facing = 1
    else
        facing = 0

    
    if distance_to_object(target) < 170  and timer >= 1{
        speed = 0
        state_type = "attack"
        timer = 0
		
		if y > target.y
		{
		dirtemp = 0;
		sprite_index = stand_sprite;
		}
		if y < target.y
		{
		dirtemp = 1;
		image_yscale = -1.4;
		sprite_index = stand_spriteD;
		}
		
    }
}

//bandicam 10 minutes limit dies of cringe, anyways continuing, we're making it all in the same attack state to simplify

if state_type = "attack" {
	blocking = 0
    speed = 0
    image_speed = 0.5
	
	if dirtemp = 0
	{
    vspeed = -2
	}
	
	if dirtemp = 1
	{
	vspeed = 2;
	}
	
	if timer >= 10 and !instance_exists(proj)
	{
     if !instance_exists(proj) {
        create_projectile(7, 362 , 3.6 , 4.7 , 2, 1, slash2, obj_spark_slash1, 0.53 , 0.74 , 0, 5.40, 99, 34, no_script);
        proj.mole = self.id
        proj.priority = 2
    }
    else if instance_exists(proj) {
        proj.x = size * ( 1 - ( facing * 2 ) ) * 0
        proj.y = x - 15.40 * size;
    }    
    }
}



if state_type = "death" {
    speed = 0
    image_speed = 0
    image_index = 1

    

    if timer = 1 {
        alarm[8] = 30
		spark = instance_create(x,y-size*5.85,obj_spark_explode1);
        spark.image_xscale *= 0.7*size
        spark.image_yscale *= 0.7*size
        speed = 0
        image_alpha = -0.03
    }

}


if has_hit >= 0
has_hit -= 1


//dont touch this stuff down here- 
image_alpha += alpha_add

//tf is this doin here, oh right its a workaround for a bug, anyways
if image_alpha <= 0
instance_destroy();

image_xscale = base_xscale - (facing * (base_xscale * 2))
image_yscale = base_yscale

timer += 1

if endlag > 0
endlag -= 1