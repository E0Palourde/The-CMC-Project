// Target test main script!
//global.gs_can_pause = 0;
// OBV part
if ( time != -1 )
  timer += 1;

disable_cameramoving = 1
obj_game_control.disable_cameramoving = 1

// Ending them, states.
if ( timer >= time && time != -1 )
  {
  switch ( state_type )
    {
    case "countdown":
      graphic_timer = HUDANIM_Go;
      global . match_playing = 1;
      state_type = "idle";
      time = -1;
      break;
    case "failure":
      graphic_timer = -1;
      upbeat = 0;
      if ( global.gs_gamemode == "Classic" )
        {
        obj_classic.upbeat = upbeat;
        rules_stagecomplete();
        }
        else
        {
        state_type = "menu";
        menu_alpha = 0;
        time = -1;
		victory = 0
		script_execute ( rule_end_script );
        }
      break;
    case "complete":
      graphic_timer = -1;
      if ( upbeat == 2 )
        {
        bonus_minutes = recordtimer_minutes;
        bonus_seconds = recordtimer_seconds;
        bonus_frames = recordtimer_frames;
        bonus_nickname = pdat[0].tag_str;
        var i, a;
        for ( i = 0 ; i < fps_measure_num ; i += 1 )
          a += fps_measure [ i ];
        a /= fps_measure_num;
        bonus_avgfps = round ( a );
        //record_save_1 ( pdat[0].char_id , 288 );
        }
      if ( global.gs_gamemode == "Classic" )
        {
        obj_classic.upbeat = upbeat;
        rules_stagecomplete();
        }
        else
        {
        state_type = "menu";
        menu_alpha = 0;
        time = -1;
		victory = 1
		script_execute ( rule_end_script );
        }
      break;
    }
  }

if ( state_type == "idle" )
  {
  // Classic mode timeout
  if ( global.gs_gamemode == "Challenge" )
    {
    t_frames -= 1;
    if ( t_frames < 0 )
      {
      t_frames += 60;
      t_seconds -= 1;
      if ( t_seconds < 0 )
        {
        t_seconds += 60;
        t_minutes -= 1;
        }
      }
    if ( t_seconds == 0 && t_minutes == 0 )
      {
      FMODInstanceStop ( global.bgm_instance );
      graphic_timer = HUDANIM_Failure;
      state_type = "failure";
      global . match_playing = -1;
      timer = 0;
      time = 150;
      exit;
      }
    }




  var a, cloud_start, secret_start;
  //secret_condition = db_charname[global.gs_character[0], 1] == "sato_suguri" || db_charname[global.gs_character[0], 1] == "lilina"
  with (player){
	
	  if number = 1{
		die_cap = 600;
	  }
	  if number = 2{
		die_cap = 300;
	  }
	  
	  if match_loaded = 1
	  exit;

	  
	if ( db_charname[global.gs_character[number-1], 1] == "sato_suguri" && !secret_condition ) {
		if ( state_type == "air_attack" && attack_type == "c19" ) {
			percent += 4;
		}
	}
	if ( db_charname[global.gs_character[number-1], 1] == "lilina" ) {
		if ( state_type == "air_attack" && attack_type == "upb" ) {
			percent += 5;
		}
	}
	  
	  
      if x >= 6272*0.75 and x <= 6336*0.75 and y >= 1088*0.75 and y <= 1184*0.75{
	  obj_game_control.victory_variable = 1
	  }

	  if x >= 6144*0.75 and x <= 6752*0.75 and y >= 1472*0.75 and y <= 2240*0.75 {
	  secret_condition = true;
	  }
	  
      if x >= 6176*0.75 and x <= 6752*0.75 and y >= 1472*0.75 and y <= 2240*0.75 and air == 0{
	  cloud_start = 1;
	  }
	  
	  if x >= 8416*0.75 and x <= 8928*0.75 and y >= 1600*0.75 and y <= 1968*0.75 and air == 0{
	  secret_start = 1;
	  }
	   
  }
  
  
  if cloud_start = 1 and cloud_match = 0 {
  	cloud_match = 1
  	stop_music();
  	midmatch_fighter_load(1, "ciel_cloudcsw", 0, 0, "Cloud CSW is gonna squish you. Cya!", 6432*0.75 , 2080*0.75, 300, 1)

  	global.gs_charactertheme = "utsuho";
  	play_music( string ( db_stagename [ global . gs_stage , 0 ] ) , 0 , global.gs_charactertheme );
  	global.gs_charactertheme = "";
  
  	with (player){
		hspeed = 0
	  	vspeed = 0
	  	speed = 0
	  	state_type = "entry"
	  	attack_type = "none"
	  	timer = -1
	  	time = 300
	  	char_entry();
		if (number == 1) {
			state_type = "air_flinch";
			sound_play(starko_voice);
			offense *= 0.75;
		}
  	}
  	match_loaded = 1
  }

  if secret_start = 1 and secret_match = 0 {
  	secret_match = 1
  	stop_music();
  	midmatch_fighter_load(1, "hunter-", 0, 0, "Danger is lurking nearby...", 8896*0.75 , 1952*0.75, 300, 1)

  	global.gs_charactertheme = "googly";
  	play_music( string ( db_stagename [ global . gs_stage , 0 ] ) , 0 , global.gs_charactertheme );
  	global.gs_charactertheme = "";
  
  	with (player){
		hspeed = 0
	  	vspeed = 0
	  	speed = 0
	  	state_type = "entry"
	  	attack_type = "none"
	  	timer = -1
	  	time = 300
	  	char_entry();
  	}
  	match_loaded = 1
  }
  

  if ( victory_variable == 1 )
    {
    FMODInstanceStop ( global.bgm_instance );
    if ( recordtimer_minutes < bonus_minutes )
      graphic_timer = HUDANIM_Record;
      else
    if ( recordtimer_minutes == bonus_minutes && recordtimer_seconds < bonus_seconds )
      graphic_timer = HUDANIM_Record;
      else
    if ( recordtimer_minutes == bonus_minutes && recordtimer_seconds == bonus_seconds && recordtimer_frames < bonus_frames )
      graphic_timer = HUDANIM_Record;
      else
      graphic_timer = HUDANIM_Success; 
    if ( graphic_timer == HUDANIM_Record )
      {
      crowd_call ( 0 , 100 );
      upbeat = 2;
      }
      else
      {
      crowd_call ( 0 , 75 );
      upbeat = 1;
      }
    if ( global.gs_gamemode == "Classic" && bonus_minutes == 15 )
      graphic_timer = HUDANIM_Success;
    graphic_timer = HUDANIM_Success; 
    state_type = "complete";
    global . match_playing = -1;
    timer = 0;
    time = 150;
    exit;
    } 
    
  recordtimer_frames += 1;
  if ( recordtimer_frames >= 60 )
    {
    if ( fps_measure_num < 900 )
      {
      fps_measure [ fps_measure_num ] = fps;
      fps_measure_num += 1;
      }
    recordtimer_frames -= 60;
    recordtimer_seconds += 1;
    }
  if ( recordtimer_seconds >= 60 )
    {
    recordtimer_seconds -= 60;
    recordtimer_minutes += 1;
    } 
  if ( recordtimer_minutes >= 15 )
    {
    recordtimer_minutes = 14;
    recordtimer_frames = 59;
    recordtimer_seconds = 59;
    }  
  }