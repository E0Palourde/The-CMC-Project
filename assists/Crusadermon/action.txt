if timer = 0
  {
    state_type = "action";
    attack_type = "atk1"
    timer = 0;
    time = 155;
    sprite_index = crusadermon_atk1_sprite;
    image_speed = 0;
    image_index = 0;
	repeated = 0
     gravity = 0
  }
if timer < time {
switch ( timer )
{
                case 3: image_index = 1; break;
		case 6: image_index = 2; break;  //hitbox start
		case 8: image_index = 3; break; 
		case 10: image_index = 4; break;
                case 11: image_index = 5; break;
                case 12: image_index = 6; break;
                case 22: image_index = 7; break;
                case 25: image_index = 0; sprite_index = crusadermon_stand_sprite break; //Faust der Athena end
                case 28: image_index = 7; sprite_index = crusadermon_atk1_sprite break;
                case 30: image_index = 0; sprite_index = crusadermon_atk2_sprite  break;
                case 32: image_index = 1; break;
                case 34: image_index = 2; break; //Spiral Maskerade start
                case 35: image_index = 3; break;
                case 36: image_index = 4; break;
                case 37: image_index = 5; break;
                case 38: image_index = 6; break;
                case 39: image_index = 7; break;
                case 40: image_index = 8; break;
                case 41: image_index = 9; break;
                case 42: image_index = 10; break;
                case 43: image_index = 11; break;
                case 44: image_index = 12; break;
                case 45: image_index = 13; break;
                case 46: image_index = 2; break;
                case 47: image_index = 3; break;
                case 48: image_index = 4; break;
                case 49: image_index = 5; break;
                case 50: image_index = 6; break;
                case 51: image_index = 7; break;
                case 52: image_index = 8; break;
                case 53: image_index = 9; break;
                case 54: image_index = 10; break;
                case 55: image_index = 11; break;
                case 56: image_index = 12; break;
                case 57: image_index = 13; break;
                case 58: image_index = 2; break;
                case 59: image_index = 3; break;
                case 60: image_index = 4; break;
                case 61: image_index = 5; break;
                case 62: image_index = 6; break;
                case 63: image_index = 7; break;
                case 64: image_index = 8; break;
                case 65: image_index = 9; break;
                case 66: image_index = 10; break;
                case 67: image_index = 11; break;
                case 68: image_index = 12; break;
                case 69: image_index = 13; break;
                case 70: image_index = 2; break;
                case 71: image_index = 3; break;
                case 72: image_index = 4; break;
                case 73: image_index = 5; break;
                case 74: image_index = 6; break;
                case 75: image_index = 7; break;
                case 76: image_index = 8; break;
                case 77: image_index = 9; break;
                case 78: image_index = 10; break;
                case 79: image_index = 11; break;
                case 80: image_index = 12; break;
                case 81: image_index = 13; break; //finisher
                case 84: image_index = 14; break;
                case 90: image_index = 15; break;
                case 96: image_index = 7; sprite_index = crusadermon_atk1_sprite break; //end
                case 99: image_index = 0; sprite_index = crusadermon_stand_sprite break;
                case 104: image_index = 1; break;
                case 111: image_index = 2; break;
                case 116: image_index = 3; break;
                case 121: image_index = 2; break;
                case 126: image_index = 1; break;
                case 131: image_index = 4; break;
                case 137: image_index = 5; break;
                case 140: image_index = 6; break;
                case 143: image_index = 7; break;
}
  if timer = 25 {
    sprite_index = crusadermon_stand_sprite      
  }
  if timer = 99 {
    sprite_index = crusadermon_stand_sprite      
  }
  if timer = 28 {
    sprite_index = crusadermon_atk1_sprite      
  }
  if timer = 96 {
    sprite_index = crusadermon_atk1_sprite      
  }
  if timer = 30 {
    sprite_index = crusadermon_atk2_sprite      
  }
  if timer = 34 {
    sound_play(crusadermon_spiral_maskerada_sound);    
  }
  if timer = 121 {
    sound_play(choose(crusadermon_witz_sound,crusadermon_hahaha_sound))    
  }	
    if timer = 6 {
          sound_play(crusadermon_d_att_l_sound);  
	  faustderathena = create_projectile(10,20+facing*140,2,1,1,20,punch4,obj_spark_hit3,1.6,0.8,26,25,owner.id,6,-1);
	//faustderathena.sprite_index = -1;
	faustderathena.image_speed = 0
	faustderathena.image_index = 0
	//faustderathena.image_xscale = 0.5-facing*1
	//faustderathena.image_yscale = 0.5
	faustderathena.hit = 0
	faustderathena.image_alpha = 1
	faustderathena.exploded = 0
	faustderathena.vspeed = 0
	faustderathena.hspeed = 0
	faustderathena.facing = facing
	faustderathena.gravity = 0
        faustderathena.number = 1
        faustderathena.armor_break = 1
                faustderathena.shake_ampl = 0.3
        shaker = instance_create(x,y,obj_shakescreen2);
	       shaker.ampl = 8;
	       shaker.xampl = 0;
	       shaker.time = 6;
    //effect_create_above(ef_ring,x+(26-facing*52),y-26,0,c_red)
    effect_create_above(ef_ring,x+(26-facing*52),y-26,0,make_color_rgb(255,128,255))
    sound_play(explode1);
  }

  if timer >= 34 and timer <= 80 {      
	  spiralmaskerade = create_projectile(0.2,20+facing*140,6,2,1,3,slash2,obj_spark_slash2,2.6,1.5,40,28,owner.id,1,-1);
	//spiralmaskerade.sprite_index = -1;
	spiralmaskerade.image_speed = 0
	spiralmaskerade.image_index = 0
	//spiralmaskerade.image_xscale = 1-facing*2
	//spiralmaskerade.image_yscale = 1
	spiralmaskerade.hit = 0
	spiralmaskerade.image_alpha = 1
	spiralmaskerade.exploded = 0
	spiralmaskerade.vspeed = 0
	spiralmaskerade.hspeed = 0
	spiralmaskerade.facing = facing
	spiralmaskerade.gravity = 0
        spiralmaskerade.armor_break = 1
                spiralmaskerade.shake_ampl = 0.3
  }
  if timer = 34 and timer = 37 and timer = 40 and timer = 43 and timer = 46 and timer = 49 and timer = 52 and timer = 55 and timer = 58 and timer = 61 and timer = 64 and timer = 67 and timer = 70 and timer = 73 and timer = 76 and timer = 79  {
    sound_play(choose(crusadermon_d_att_s_sound,crusadermon_d_att_m_sound))    
  }
  if timer = 81 {
          sound_play(crusadermon_d_att_l_sound);   
	  spiralmaskerade2 = create_projectile(3,20+facing*140,6,2,6,8,slash3,obj_spark_slash2,2.6,1.5,40,28,owner.id,2,-1);
	//spiralmaskerade2.sprite_index = -1;
	spiralmaskerade2.image_speed = 0
	spiralmaskerade2.image_index = 0
	//spiralmaskerade2.image_xscale = 1-facing*2
	//spiralmaskerade2.image_yscale = 1
	spiralmaskerade2.hit = 0
	spiralmaskerade2.image_alpha = 1
	spiralmaskerade2.exploded = 0
	spiralmaskerade2.vspeed = 0
	spiralmaskerade2.hspeed = 0
	spiralmaskerade2.facing = facing
	spiralmaskerade2.gravity = 0
        spiralmaskerade2.armor_break = 1
                spiralmaskerade2.shake_ampl = 0.3
  }

  if timer = 146 {      
	  roses = create_projectile(0,20+facing*140,6,0.1,1,4,-1,-1,1.3,1.3,0,0,owner.id,24,-1);
	roses.sprite_index = crusadermon_rose_sprite;
	roses.image_speed = 0.3
	roses.image_index = 0
	roses.image_xscale = 1.3-facing*2.6
	roses.image_yscale = 1.3
	roses.hit = 0
	roses.image_alpha = 1
	roses.exploded = 0
	roses.vspeed = 0
	roses.hspeed = 0
	roses.facing = facing
	roses.gravity = 0
        roses.mask_index = no_mask;
  }

  }
   
   


if ( timer >= time-1)
  {
    state_type = "end";
    attack_type = "none";
    timer = 0;
    time = -1;
  }