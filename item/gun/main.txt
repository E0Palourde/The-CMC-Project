~~INIT:
agun_spr = ispr_add_alpha ( "item/gun/gun.png" , 1 , 0 , 0 , 9 , 11 );
ashoot_spr = ispr_add_alpha ( "item/gun/bullet.png" , 1 , 0 , 0 , 7 , 3 );
agun_snd = isound_add ( "item/gun/gun.wav" , 0 , 0 );

~~DEINIT:
if ( sprite_exists ( agun_spr ) )
  spr_delete ( agun_spr );
if ( sprite_exists ( ashoot_spr ) )
  spr_delete ( ashoot_spr );


~~ENTER:
sprite_index = obj_items_control.agun_spr;
sprite_air = obj_items_control.agun_spr;
sprite_held = obj_items_control.agun_spr;
air_spr_y = -5;
type = "batter";
image_xscale = 0.5;
image_yscale = 0.5;
hit_timer = 0;
shadow = 6;

batter_jab = 1;
batter_stilt = 1;
batter_dash = 0;
batter_ssmash = 1;
batter_nair = 1;
batter_fair = 1;

ammo = 6;


~~LAND:
instance_create ( x , y - 4 , obj_smoke_front );
instance_destroy();


~~STEP:
if ( hit_timer > 0 )
  {
  shakex = -2 + floor ( random ( 5 ) );
  shakey = -2 + floor ( random ( 5 ) );
  hit_timer -= 1;
  if ( hit_timer > 2 )
    exit;
  }
shakex = 0;
shakey = 0;
if ( thrown > 0 )
  {
  collision_type = 2;
  can_pick_up = 0.5;
  
  if ( on_floor && on_platform && speed < 0.1 )
    {
    thrown = -99;
    }
  }
  else
  {
  collision_type = 0;
  can_pick_up = 1;
  }

if ( ammo == 0 )
  custom_land = 1;

~~ITEM CONTACT:
if ( held > 0 ) exit;
if ( thrown <= 0 ) exit;
if ( hit_timer > 0 ) exit;
hit_timer = 9;
hspeed *= -0.3;
vspeed = -3;
thrown = -99;


~~PLAYER CONTACT:
if ( held > 0 ) exit;
if ( hit_timer > 0 ) exit;
if ( thrown <= 0 ) exit;
if ( !item_candamage() ) exit;
if ( !item_candamageatk ( thrown ) ) exit;
hit_timer = 18;
last_hit_proj = create_projectile ( 7 , 90 - sign ( hspeed ) * 45 , 4 + min ( 1.7 , speed * 0.2 ) , 3.2 , 15 , 17 , punch2 , obj_spark_hit1 , 1 , 1 , 0 , 12 , thrown , 3 , -1 );
hspeed *= -0.3;
vspeed = -3;
thrown = -99;


~~HIT:
if ( held > 0 ) exit;
if ( hit_timer > 0 ) exit;
if ( thrown <= 0 ) exit;
if ( vermin.damage > 2 )
  {
  object_stun ( vermin , 8 );
  hit_timer = 9;
  hspeed *= -0.3;
  vspeed = -3;
  thrown = -99;
  object_stun ( self.id , 6 );
  }


~~CUSTOM:
moving_object = 1;
sprite_index = obj_items_control.ashoot_spr;
mask_index = spr_item_mask2;
image_index = 0;
image_speed = 0;
if ( on_floor || on_platform || under_ceiling || next_to_rwall || next_to_lwall || timer == time - 2 )
  {
  spark = instance_create ( x , y , obj_spark_explode2 );
  spark.image_xscale *= 0.5;
  spark.image_yscale *= 0.5;
  instance_destroy();
  }


~~PLAYER EVENT:
if ( timer == -1 )
  {
if mami_unlock = 0 and !instance_exists(obj_training){
	mami_unlock = 1
}
  sprite_index = item_shoot_sprite;
  image_index = 0;
  state_type = "air_attack";
  timer_speed = 1;
  timer = 0;
  time = 30;
  image_speed = item_shoot_frame / 2;
  }

if ( air == 0 )
  {
  hspeed *= 0.8;
  }

if ( timer == 2 )
  {
  image_index = item_shoot_frame;
  image_speed = ( image_number - image_index ) / 25;
  item_posupdate();
  if ( held_item.ammo == 0 )
    {
    image_index = item_shoot_frame;
    image_speed = ( image_number - image_index ) / 25;
    sound_play_pitch ( guncock_sound , 1);
    instance_create ( held_item.x + 12 * ( 1 - facing * 2 ) , held_item.y - 3 , obj_smoke );
    exit;
    }
  sound_play_pitch ( obj_items_control.agun_snd , 1 );
  spark = instance_create ( held_item.x + 12 * ( 1 - facing * 2 ) , held_item.y - 3 , obj_spark_explode2 );
  spark.image_xscale *= 0.5;
  spark.image_yscale *= 0.5;
  create_projectile ( 20 , 70+facing*40 , 6.35 , 7.5 , 65 , 0 , explodehit3 , obj_spark_special2 , 0.5 , 0.5 , 0 , 0 , self.id , 150 , char_item );
  proj.hspeed = 25 * ( 1 - facing * 2 );
  proj.item_parent = held_item.object_index;
  proj.x = held_item.x + 12 * ( 1 - facing * 2 );
  proj.y = held_item.y - 3;
  proj.mask_index = spr_item_mask2;
  proj.image_xscale = 0.5 * ( 1 - facing * 2 );
  proj.di = 0.45;
  proj.priority = 5;
  held_item.ammo -= 1;
  }
~~END OF FILE