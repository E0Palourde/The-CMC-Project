~~INIT:
beehive_spr = ispr_add_alpha ( "item/beehive/beehive.png" , 15 , 0 , 0 , 20 , 70 );
beehiveh_spr = ispr_add_alpha ( "item/beehive/beehiveh.png" , 1 , 0 , 0 , 20 , 58 );
beehivep_spr = ispr_add_alpha ( "item/beehive/broken.png" , 4 , 0 , 0 , 16 , 12 );
bees_spr = ispr_add_alpha ( "item/beehive/bees.png" , 16 , 0 , 0 , 32 , 32 );
~~DEINIT:
if ( sprite_exists ( beehive_spr ) )
  spr_delete ( beehive_spr );
if ( sprite_exists ( beehiveh_spr ) )
  spr_delete ( beehiveh_spr );
if ( sprite_exists ( beehivep_spr ) )
  spr_delete ( beehivep_spr );
if ( sprite_exists ( bees_spr ) )
  spr_delete ( bees_spr );
~~ENTER:
sprite_index = obj_game_control.beehive_spr;
sprite_air = obj_game_control.beehive_spr;
sprite_held = obj_game_control.beehiveh_spr;
mask_index = obj_game_control.beehiveh_spr;
air_spr_y = 0;
type = "heavy";
hit_timer = 0;
hp = 17;
collision_type = 1;
bee_target = -1;
last_attacker = 99;
shadow = 16;
~~LAND:
hp = 0;
~~CUSTOM:
alarm[0] = time - timer + 2;
if ( goal.status_cancel ) { instance_destroy(); exit; }
x = ( x * 23 + goal.x ) / 24;
y = ( y * 23 + goal.y ) / 24;
if ( timer mod 40 == 0 )
  {
  create_projectile ( 2 , 361 , 2 , 2 , 3 , 2 , slash1 , obj_spark_slash1 , 2 , 2 , 0 , 0 , attacker , 2 , no_script );
  }
~~STEP:
if ( hit_timer > 0 ) 
  {
  shakex = -3 + floor ( random ( 7 ) );
  shakey = -3 + floor ( random ( 7 ) );
  hit_timer -= 1;
  if ( hit_timer > 2 )
    exit;
  }
shakex *= 0.25;
shakey *= 0.25;
if ( hp <= 0 )
  {
  sound_play ( cratebreaksnd );
  if ( heracross_unlock = 0 and !instance_exists ( obj_training ) )
    heracross_unlock = 1;
  var i, o;
  o = instance_create ( x , y - 19 , obj_spark_hit4 );
  o.image_xscale *= 3;
  o.image_yscale *= 3;
  o.image_angle = random ( 360 );
  o = instance_create ( x , y - 16 , global.itm_kind[item_index-1] );
  o.hspeed = -2;
  o.vspeed = -1;
  o = instance_create ( x , y - 16 , global.itm_kind[item_index-1] );
  o.hspeed = 2;
  o.vspeed = -1;
  o = instance_create ( x , y - 16 , global.itm_kind[item_index-1] );
  o.hspeed = 0;
  o.vspeed = -2;
  if ( bee_target > 0 )
    {
    create_projectile ( 0 , 362 , 1 , 1 , 0 , 1 , -1 , -1 , 1 , 1 , 0 , 32 , last_attacker , 300 + floor ( random ( 300 ) ) , char_item );
    proj.item_parent = global.itm_kind[item_index];
    proj.hit = 2;
    proj.sprite_index = obj_game_control.bees_spr;
    proj.goal = bee_target;
    }
  repeat ( 6 )
    {
    instance_create ( x - 25 + random ( 50 ) , y - 44 + random ( 50 ) , obj_smoke_front );
    }
  for ( i = 0 ; i < 4 ; i += 1 )
    {
    o = instance_create ( x , y - 8 - 12 * i , obj_spark );
    o.depth = -5;
    o.image_speed = 0;
    o.sprite_index = obj_game_control.beehivep_spr;
    o.image_index = i;
    o.speed = 7 + random ( 3 );
    o.direction = random(360);
    o.image_xscale = 1;
    o.image_yscale = 1;
    o.angle_add = -10 + random ( 20 );
    o.alpha_add = -1/30;
    o.alarm[0] = 30;
    o.gravity = 0.5;
    o.gravity_direction = 270;
    o.vspeed -= 3;
    o.speed *= 1 + explosive * 2;
    }
  instance_destroy();
  exit;
  }

image_speed = 0;
if ( held <= 0 )
  {
  sprite_angle = 0;
  if ( !on_floor && !on_platform )
    {
    if ( floor ( image_index ) != 7 && floor ( image_index ) != 8 )
      image_index += 1;
    if ( image_index >= 15 ) image_index = 0;
    }
    else
    {
    image_index += 0.5;
    if ( image_index >= 15 ) image_index = 0;
    }
  }
  else
  last_attacker = held;

if ( thrown > 0 )
  {
  last_attacker = thrown;
  custom_land = 1;
  }
  else
  {
  custom_land = 0;
  }
~~PLAYER CONTACT:
if ( held > 0 ) exit;
if ( thrown <= 0 ) exit;
if ( !item_candamage() ) exit;
if ( !item_candamageatk ( thrown ) ) exit;
create_projectile ( 8 , 364 , 7.5 , 2.8 , 12 , 12 , kick3 , obj_spark_hit3 , 2 , 2 , 0 , 19 , thrown , 6 , -1 );
bee_target = vermin;
hp = 0;
~~HIT:
if ( hit_timer > 0 ) exit;
hit_timer = vermin.hitlag_frames + 3;
hp -= vermin.damage;
hitbox_hitspark ( vermin , ( vermin.x + x ) * 0.5 , ( vermin.y + y - 16 ) * 0.5 );
object_stun ( vermin , vermin.hitlag_frames );
~~END OF FILE