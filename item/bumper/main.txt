~~INIT:

bumper_spr = ispr_add_alpha ( "item/bumper/bumper.png" , 2 , 0 , 0 , 16 , 16 );

~~DEINIT:

if ( sprite_exists ( bumper_spr ) )
  spr_delete ( bumper_spr );

~~ENTER:

sprite_index = obj_game_control.bumper_spr;
sprite_air = obj_game_control.bumper_spr;
sprite_held = obj_game_control.bumper_spr;
image_speed = 0;
image_index = 0;
air_spr_y = -16;
image_xscale = 0.75;
image_yscale = 0.75;
shadow = 8;

sticked = 0;
boost = 0;
xx = x;
yy = y;
hit_timer = 0;

~~LAND:
if ( thrown > 0 )
  {
  sticked = 1;
  image_index = 1;
  speed = 0;
  }

~~STEP:
if ( hit_timer > 0 )
  {
  shakex = -2 + floor ( random ( 5 ) );
  shakey = -2 + floor ( random ( 5 ) );
  hit_timer -= 1;
  if ( hit_timer > 2 )
    exit;
  }
shakex = 0;
shakey = 0;
if ( thrown > 0 )
  {
  sprite_angle = 0;
  collision_type = 1;
  custom_land = 1;
  can_pick_up = 0.5;
  }
  else
  {
  can_pick_up = 1;
  collision_type = 0;
  custom_land = 0;
  }
if ( sticked )
  {
  collision_type = 1;
  can_pick_up = 0;
  rot_speed = 0;
  sprite_angle = 0;
  if ( boost != 0 )
    {
    var xx, yy;
    xx = x;
    yy = y;
    repeat ( 7 )
      {
      x += sign ( boost );
      y -= 1;
      if ( position_meeting ( x , y , obj_leftwall ) )
        {
        x = xx;
        y = yy;
        break;
        }
      if ( position_meeting ( x , y , obj_rightwall ) )
        {
        x = xx;
        y = yy;
        break;
        }
      repeat ( 2 )
      if ( !position_meeting ( x + 1 , y , obj_floor ) && !position_meeting ( x + 1 , y + 1 , obj_platform ) )
        y += 1;
      if ( !position_meeting ( x + 1 , y , obj_floor ) && !position_meeting ( x + 1 , y + 1 , obj_platform ) )
        {
        x = xx;
        y = yy;
        break;
        }
      }
    if ( boost > 0 )
      boost -= 1;
      else
      boost += 1;
    }
  }

~~ITEM CONTACT:
if ( held > 0 ) exit;
if ( thrown <= 0 ) exit;
if ( hit_timer > 0 ) exit;
if ( sticked )
  {
  sound_play ( snd_bumper );
  hit_timer = 9;
  create_projectile ( 1 , 364 , 9 , 1 , 7 , 6 , kick1 , obj_spark_hit1 , 1 , 1 , 0 , 12 , thrown , 3 , -1 );
  proj.hit_attacker = 1;
  if ( vermin.x < x )
    boost = 9;
    else
    boost = -9;
  exit;
  }
if ( speed < 1 ) exit;
if ( vermin == thrown ) exit;
sound_play ( snd_bumper );
hit_timer = 9;
create_projectile ( 6 , 364 , 9 , 1 , 7 , 6 , kick2 , obj_spark_hit4 , 1 , 1 , 0 , 12 , thrown , 3 , -1 );
hspeed *= -0.25;
if ( y > other.y )
  vspeed = 1;
  else
if ( y < other.y )
  vspeed = -4;
  else
  vspeed = choose ( -2 , 0 );

~~HIT:
if ( held > 0 ) exit;
if ( thrown <= 0 ) exit;
if ( hit_timer > 0 ) exit;
if ( sticked )
  {
  sound_play ( snd_bumper );
  hit_timer = 4;
  create_projectile ( 1 , 364 , 9 , 1 , 7 , 6 , kick1 , obj_spark_hit1 , 1 , 1 , 0 , 12 , thrown , 3 , -1 );
  proj.hit_attacker = 1;
  proj.priority = 4.9;
  if ( vermin.x < x )
    boost = 9;
    else
    boost = -9;
  hitbox_hitspark ( vermin , ( vermin.x + x ) * 0.5 , ( vermin.y + y - 4 ) * 0.5 );
  object_stun ( vermin , vermin.hitlag_frames );
  exit;
  }
if ( speed < 1 ) exit;
if ( vermin == thrown ) exit;
hit_timer = 4;
sound_play ( snd_bumper );
create_projectile ( 6 , 364 , 9 , 1 , 7 , 3 , kick2 , obj_spark_hit4 , 1 , 1 , 0 , 12 , thrown , 3 , -1 );
hspeed *= -0.25;
vspeed = -4;

~~PLAYER CONTACT:
if ( held > 0 ) exit;
if ( thrown <= 0 ) exit;
if ( hit_timer > 0 ) exit;
if ( !item_candamage() ) exit;
if ( sticked )
  {
  sound_play ( snd_bumper );
  hit_timer = 9;
  create_projectile ( 1 , 364 , 9 , 1 , 7 , 6 , kick1 , obj_spark_hit1 , 1 , 1 , 0 , 12 , thrown , 3 , -1 );
  proj.hit_attacker = 1;
  if ( vermin.x < x )
    boost = 9;
    else
    boost = -9;
  exit;
  }
if ( speed < 1 ) exit;
if ( !item_candamageatk ( thrown ) ) exit;
hit_timer = 9;
sound_play ( snd_bumper );
last_hit_proj = create_projectile ( 6 , 364 , 9 , 1 , 7 , 6 , kick2 , obj_spark_hit4 , 1 , 1 , 0 , 12 , thrown , 3 , -1 );
hspeed *= -0.25;
vspeed = -4;

~~END OF FILE